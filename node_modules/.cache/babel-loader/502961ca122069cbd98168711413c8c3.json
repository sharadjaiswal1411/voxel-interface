{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.BlockchainMessage = exports.ResponseMessage = exports.TransportMessage = exports.DeviceMessage = exports.UiMessage = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar UiMessage = function UiMessage(type, payload) {\n  return {\n    event: _constants.UI_EVENT,\n    type: type,\n    payload: payload\n  };\n};\n\nexports.UiMessage = UiMessage;\n\nvar DeviceMessage = function DeviceMessage(type, payload) {\n  return {\n    event: _constants.DEVICE_EVENT,\n    type: type,\n    payload: payload\n  };\n};\n\nexports.DeviceMessage = DeviceMessage;\n\nvar TransportMessage = function TransportMessage(type, payload) {\n  return {\n    event: _constants.TRANSPORT_EVENT,\n    type: type,\n    // convert Error/TypeError object into payload error type (Error object/class is converted to string while sent via postMessage)\n    payload: payload.error ? _objectSpread(_objectSpread({}, payload), {}, {\n      error: payload.error.message,\n      code: payload.error.code\n    }) : payload\n  };\n};\n\nexports.TransportMessage = TransportMessage;\n\nvar ResponseMessage = function ResponseMessage(id, success, payload) {\n  if (payload === void 0) {\n    payload = null;\n  }\n\n  return {\n    event: _constants.RESPONSE_EVENT,\n    type: _constants.RESPONSE_EVENT,\n    id: id,\n    success: success,\n    // convert Error/TypeError object into payload error type (Error object/class is converted to string while sent via postMessage)\n    payload: success ? payload : {\n      error: payload.error.message,\n      code: payload.error.code\n    }\n  };\n};\n\nexports.ResponseMessage = ResponseMessage;\n\nvar BlockchainMessage = function BlockchainMessage(type, payload) {\n  return {\n    event: _constants.BLOCKCHAIN_EVENT,\n    type: type,\n    payload: payload\n  };\n};\n\nexports.BlockchainMessage = BlockchainMessage;","map":null,"metadata":{},"sourceType":"script"}