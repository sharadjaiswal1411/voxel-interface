{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/TrueSight/components/AddressButton.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { CheckCircle, ChevronDown, Copy } from 'react-feather';\nimport { Box, Flex } from 'rebass';\nimport styled from 'styled-components';\nimport { NETWORKS_INFO, TRUESIGHT_NETWORK_TO_CHAINID } from 'constants/networks';\nimport useCopyClipboard from 'hooks/useCopyClipboard';\nimport { useOnClickOutside } from 'hooks/useOnClickOutside';\nimport useTheme from 'hooks/useTheme';\nimport { OptionsContainer } from 'pages/TrueSight/styled';\nimport { isAddress } from 'utils';\nimport getShortenAddress from 'utils/getShortenAddress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddressButtonItself(_ref) {\n  _s();\n\n  var network = _ref.network,\n      address = _ref.address,\n      isInOptionContainer = _ref.isInOptionContainer,\n      isDisableChevronDown = _ref.isDisableChevronDown,\n      optionRender = _ref.optionRender,\n      toggleShowOptions = _ref.toggleShowOptions;\n  var theme = useTheme();\n\n  var _useCopyClipboard = useCopyClipboard(),\n      _useCopyClipboard2 = _slicedToArray(_useCopyClipboard, 2),\n      isCopied = _useCopyClipboard2[0],\n      setCopied = _useCopyClipboard2[1];\n\n  var onCopy = function onCopy(event) {\n    event.stopPropagation();\n    setCopied(isAddress(address) || address);\n  };\n\n  var mappedChainId = network ? TRUESIGHT_NETWORK_TO_CHAINID[network] : undefined;\n  return /*#__PURE__*/_jsxDEV(StyledAddressButton, {\n    isInOptionContainer: isInOptionContainer,\n    children: [address && mappedChainId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: NETWORKS_INFO[mappedChainId].icon,\n        alt: \"Network\",\n        style: {\n          minWidth: '16px',\n          width: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddressCopyContainer, {\n        onClick: onCopy,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '90px'\n          },\n          children: getShortenAddress(address)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), isCopied ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: '14'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Copy, {\n          size: '14'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChevronDownWrapper, {\n        style: {\n          visibility: isInOptionContainer ? 'hidden' : 'visible'\n        },\n        onClick: function onClick() {\n          return !isDisableChevronDown && toggleShowOptions && toggleShowOptions();\n        },\n        children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: \"16px\",\n          cursor: \"pointer\",\n          color: isDisableChevronDown ? theme.disableText : theme.subText,\n          style: {\n            cursor: isDisableChevronDown ? 'not-allowed' : 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), optionRender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddressButtonItself, \"923crL+kEV4o63IiFAhvgx7wduw=\", false, function () {\n  return [useTheme, useCopyClipboard];\n});\n\n_c = AddressButtonItself;\nexport default function AddressButton(_ref2) {\n  _s2();\n\n  var _platforms$get,\n      _this = this;\n\n  var platforms = _ref2.platforms;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShowOptions = _useState2[0],\n      setIsShowOptions = _useState2[1];\n\n  var containerRef = useRef(null);\n\n  var toggleShowOptions = function toggleShowOptions() {\n    return platforms.size >= 2 && setIsShowOptions(function (prev) {\n      return !prev;\n    });\n  };\n\n  useOnClickOutside(containerRef, function () {\n    return setIsShowOptions(false);\n  });\n  var defaultNetwork = platforms.size ? platforms.keys().next().value : '';\n  var defaultAddress = defaultNetwork ? (_platforms$get = platforms.get(defaultNetwork)) !== null && _platforms$get !== void 0 ? _platforms$get : '' : '';\n  var optionRender = isShowOptions ? /*#__PURE__*/_jsxDEV(OptionsContainer, {\n    children: Array.from(platforms.keys()).slice(1).map(function (network) {\n      var _platforms$get2;\n\n      return /*#__PURE__*/_jsxDEV(AddressButtonItself, {\n        network: network,\n        address: (_platforms$get2 = platforms.get(network)) !== null && _platforms$get2 !== void 0 ? _platforms$get2 : '',\n        isInOptionContainer: true,\n        isDisableChevronDown: false\n      }, network, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this) : null;\n  if (platforms.size === 0) return null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(AddressButtonItself, {\n      network: defaultNetwork,\n      address: defaultAddress,\n      isInOptionContainer: false,\n      isDisableChevronDown: platforms.size < 2,\n      optionRender: optionRender,\n      toggleShowOptions: toggleShowOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AddressButton, \"nf7WtxMGCIKRi+E2eT3WwrmcRNs=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c2 = AddressButton;\nexport var AddressCopyContainer = styled.div.withConfig({\n  displayName: \"AddressButton__AddressCopyContainer\",\n  componentId: \"sc-86t0c3-0\"\n})([\"cursor:pointer;display:flex;align-items:center;&:hover{color:\", \";}\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.disableText;\n});\n_c3 = AddressCopyContainer;\nvar ChevronDownWrapper = styled.div.withConfig({\n  displayName: \"AddressButton__ChevronDownWrapper\",\n  componentId: \"sc-86t0c3-1\"\n})([\"&:hover{color:\", \";}\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.disableText;\n});\n_c4 = ChevronDownWrapper;\nexport var StyledAddressButton = styled(Flex).withConfig({\n  displayName: \"AddressButton__StyledAddressButton\",\n  componentId: \"sc-86t0c3-2\"\n})([\"align-items:center;padding:4.5px 12px;gap:6px;width:fit-content;font-size:12px;line-height:14px;color:\", \";background:\", \";border-radius:\", \";position:relative;\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.subText;\n}, function (_ref6) {\n  var theme = _ref6.theme,\n      isInOptionContainer = _ref6.isInOptionContainer;\n  return isInOptionContainer ? 'transparent' : theme.buttonBlack;\n}, function (_ref7) {\n  var isInOptionContainer = _ref7.isInOptionContainer;\n  return isInOptionContainer ? '0' : '16px';\n});\n_c5 = StyledAddressButton;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AddressButtonItself\");\n$RefreshReg$(_c2, \"AddressButton\");\n$RefreshReg$(_c3, \"AddressCopyContainer\");\n$RefreshReg$(_c4, \"ChevronDownWrapper\");\n$RefreshReg$(_c5, \"StyledAddressButton\");","map":{"version":3,"names":["React","useRef","useState","CheckCircle","ChevronDown","Copy","Box","Flex","styled","NETWORKS_INFO","TRUESIGHT_NETWORK_TO_CHAINID","useCopyClipboard","useOnClickOutside","useTheme","OptionsContainer","isAddress","getShortenAddress","AddressButtonItself","network","address","isInOptionContainer","isDisableChevronDown","optionRender","toggleShowOptions","theme","isCopied","setCopied","onCopy","event","stopPropagation","mappedChainId","undefined","icon","minWidth","width","visibility","disableText","subText","cursor","AddressButton","platforms","isShowOptions","setIsShowOptions","containerRef","size","prev","defaultNetwork","keys","next","value","defaultAddress","get","Array","from","slice","map","AddressCopyContainer","div","ChevronDownWrapper","StyledAddressButton","buttonBlack"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/TrueSight/components/AddressButton.tsx"],"sourcesContent":["import React, { ReactNode, useRef, useState } from 'react'\nimport { CheckCircle, ChevronDown, Copy } from 'react-feather'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { NETWORKS_INFO, TRUESIGHT_NETWORK_TO_CHAINID } from 'constants/networks'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport useTheme from 'hooks/useTheme'\nimport { OptionsContainer } from 'pages/TrueSight/styled'\nimport { isAddress } from 'utils'\nimport getShortenAddress from 'utils/getShortenAddress'\n\nfunction AddressButtonItself({\n  network,\n  address,\n  isInOptionContainer,\n  isDisableChevronDown,\n  optionRender,\n  toggleShowOptions,\n}: {\n  network: string\n  address: string\n  isInOptionContainer?: boolean\n  isDisableChevronDown?: boolean\n  optionRender?: ReactNode\n  toggleShowOptions?: () => void\n}) {\n  const theme = useTheme()\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  const onCopy = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    event.stopPropagation()\n    setCopied(isAddress(address) || address)\n  }\n\n  const mappedChainId = network ? TRUESIGHT_NETWORK_TO_CHAINID[network] : undefined\n\n  return (\n    <StyledAddressButton isInOptionContainer={isInOptionContainer}>\n      {address && mappedChainId && (\n        <>\n          <img src={NETWORKS_INFO[mappedChainId].icon} alt=\"Network\" style={{ minWidth: '16px', width: '16px' }} />\n          <AddressCopyContainer onClick={onCopy}>\n            <div style={{ width: '90px' }}>{getShortenAddress(address)}</div>\n            {isCopied ? <CheckCircle size={'14'} /> : <Copy size={'14'} />}\n          </AddressCopyContainer>\n          <ChevronDownWrapper\n            style={{\n              visibility: isInOptionContainer ? 'hidden' : 'visible',\n            }}\n            onClick={() => !isDisableChevronDown && toggleShowOptions && toggleShowOptions()}\n          >\n            <ChevronDown\n              size=\"16px\"\n              cursor=\"pointer\"\n              color={isDisableChevronDown ? theme.disableText : theme.subText}\n              style={{\n                cursor: isDisableChevronDown ? 'not-allowed' : 'pointer',\n              }}\n            />\n          </ChevronDownWrapper>\n        </>\n      )}\n      {optionRender}\n    </StyledAddressButton>\n  )\n}\n\nexport default function AddressButton({ platforms }: { platforms: Map<string, string> }) {\n  const [isShowOptions, setIsShowOptions] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const toggleShowOptions = () => platforms.size >= 2 && setIsShowOptions(prev => !prev)\n\n  useOnClickOutside(containerRef, () => setIsShowOptions(false))\n\n  const defaultNetwork = platforms.size ? platforms.keys().next().value : ''\n  const defaultAddress = defaultNetwork ? platforms.get(defaultNetwork) ?? '' : ''\n\n  const optionRender = isShowOptions ? (\n    <OptionsContainer>\n      {Array.from(platforms.keys())\n        .slice(1)\n        .map(network => (\n          <AddressButtonItself\n            key={network}\n            network={network}\n            address={platforms.get(network) ?? ''}\n            isInOptionContainer={true}\n            isDisableChevronDown={false}\n          />\n        ))}\n    </OptionsContainer>\n  ) : null\n\n  if (platforms.size === 0) return null\n\n  return (\n    <Box ref={containerRef}>\n      <AddressButtonItself\n        network={defaultNetwork}\n        address={defaultAddress}\n        isInOptionContainer={false}\n        isDisableChevronDown={platforms.size < 2}\n        optionRender={optionRender}\n        toggleShowOptions={toggleShowOptions}\n      />\n    </Box>\n  )\n}\n\nexport const AddressCopyContainer = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    color: ${({ theme }) => theme.disableText};\n  }\n`\n\nconst ChevronDownWrapper = styled.div`\n  &:hover {\n    color: ${({ theme }) => theme.disableText};\n  }\n`\n\nexport const StyledAddressButton = styled(Flex)<{ isInOptionContainer?: boolean }>`\n  align-items: center;\n  padding: 4.5px 12px;\n  gap: 6px;\n  width: fit-content;\n  font-size: 12px;\n  line-height: 14px;\n  color: ${({ theme }) => theme.subText};\n  background: ${({ theme, isInOptionContainer }) => (isInOptionContainer ? 'transparent' : theme.buttonBlack)};\n  border-radius: ${({ isInOptionContainer }) => (isInOptionContainer ? '0' : '16px')};\n  position: relative;\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}