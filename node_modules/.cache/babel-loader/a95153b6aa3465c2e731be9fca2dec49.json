{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\n\nvar RequestError = /*#__PURE__*/function (_Error) {\n  _inherits(RequestError, _Error);\n\n  var _super = _createSuper(RequestError);\n\n  function RequestError(message, code, data) {\n    var _this;\n\n    _classCallCheck(this, RequestError);\n\n    _this = _super.call(this, message);\n    _this.code = code;\n    _this.data = data;\n    return _this;\n  }\n\n  return _createClass(RequestError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar MiniRpcProvider = /*#__PURE__*/_createClass(function MiniRpcProvider(chainId, url, batchWaitTimeMs) {\n  var _this2 = this;\n\n  _classCallCheck(this, MiniRpcProvider);\n\n  this.isMetaMask = false;\n  this.chainId = void 0;\n  this.url = void 0;\n  this.host = void 0;\n  this.path = void 0;\n  this.batchWaitTimeMs = void 0;\n  this.nextId = 1;\n  this.batchTimeoutId = null;\n  this.batch = [];\n  this.clearBatch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var batch, response, json, byKey, _iterator, _step, _result, _byKey$_result$id, resolve, reject, method, _result$error, _result$error2, _result$error3;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.debug('Clearing batch', _this2.batch);\n            batch = _this2.batch;\n            _this2.batch = [];\n            _this2.batchTimeoutId = null;\n            _context.prev = 4;\n            _context.next = 7;\n            return fetch(_this2.url, {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/json',\n                accept: 'application/json'\n              },\n              body: JSON.stringify(batch.map(function (item) {\n                return item.request;\n              }))\n            });\n\n          case 7:\n            response = _context.sent;\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](4);\n            batch.forEach(function (_ref2) {\n              var reject = _ref2.reject;\n              return reject(new Error('Failed to send batch call'));\n            });\n            return _context.abrupt(\"return\");\n\n          case 14:\n            if (response.ok) {\n              _context.next = 17;\n              break;\n            }\n\n            batch.forEach(function (_ref3) {\n              var reject = _ref3.reject;\n              return reject(new RequestError(\"\".concat(response.status, \": \").concat(response.statusText), -32000));\n            });\n            return _context.abrupt(\"return\");\n\n          case 17:\n            _context.prev = 17;\n            _context.next = 20;\n            return response.json();\n\n          case 20:\n            json = _context.sent;\n            _context.next = 27;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t1 = _context[\"catch\"](17);\n            batch.forEach(function (_ref4) {\n              var reject = _ref4.reject;\n              return reject(new Error('Failed to parse JSON response'));\n            });\n            return _context.abrupt(\"return\");\n\n          case 27:\n            byKey = batch.reduce(function (memo, current) {\n              memo[current.request.id] = current;\n              return memo;\n            }, {});\n            _iterator = _createForOfIteratorHelper(json);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                _result = _step.value;\n                _byKey$_result$id = byKey[_result.id], resolve = _byKey$_result$id.resolve, reject = _byKey$_result$id.reject, method = _byKey$_result$id.request.method;\n\n                if (resolve && !!reject) {\n                  if ('error' in _result) {\n                    reject(new RequestError(_result === null || _result === void 0 ? void 0 : (_result$error = _result.error) === null || _result$error === void 0 ? void 0 : _result$error.message, _result === null || _result === void 0 ? void 0 : (_result$error2 = _result.error) === null || _result$error2 === void 0 ? void 0 : _result$error2.code, _result === null || _result === void 0 ? void 0 : (_result$error3 = _result.error) === null || _result$error3 === void 0 ? void 0 : _result$error3.data));\n                  } else if ('result' in _result) {\n                    resolve(_result.result);\n                  } else {\n                    reject(new RequestError(\"Received unexpected JSON-RPC response to \".concat(method, \" request.\"), -32000, _result));\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 10], [17, 23]]);\n  }));\n\n  this.sendAsync = function (request, callback) {\n    _this2.request(request.method, request.params).then(function (result) {\n      return callback(null, {\n        jsonrpc: '2.0',\n        id: request.id,\n        result: result\n      });\n    }).catch(function (error) {\n      return callback(error, null);\n    });\n  };\n\n  this.request = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(method, params) {\n      var _this2$batchTimeoutId;\n\n      var promise;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(typeof method !== 'string')) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", _this2.request(method.method, method.params));\n\n            case 2:\n              if (!(method === 'eth_chainId')) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"0x\".concat(_this2.chainId.toString(16)));\n\n            case 4:\n              promise = new Promise(function (resolve, reject) {\n                _this2.batch.push({\n                  request: {\n                    jsonrpc: '2.0',\n                    id: _this2.nextId++,\n                    method: method,\n                    params: params\n                  },\n                  resolve: resolve,\n                  reject: reject\n                });\n              });\n              _this2.batchTimeoutId = (_this2$batchTimeoutId = _this2.batchTimeoutId) !== null && _this2$batchTimeoutId !== void 0 ? _this2$batchTimeoutId : setTimeout(_this2.clearBatch, _this2.batchWaitTimeMs);\n              return _context2.abrupt(\"return\", promise);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.chainId = chainId;\n  this.url = url;\n  var parsed = new URL(url);\n  this.host = parsed.host;\n  this.path = parsed.pathname; // how long to wait to batch calls\n\n  this.batchWaitTimeMs = batchWaitTimeMs !== null && batchWaitTimeMs !== void 0 ? batchWaitTimeMs : 50;\n});\n\nexport var NetworkConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inherits(NetworkConnector, _AbstractConnector);\n\n  var _super2 = _createSuper(NetworkConnector);\n\n  function NetworkConnector(_ref6) {\n    var _this3;\n\n    var urls = _ref6.urls,\n        defaultChainId = _ref6.defaultChainId;\n\n    _classCallCheck(this, NetworkConnector);\n\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url');\n    _this3 = _super2.call(this, {\n      supportedChainIds: Object.keys(urls).map(function (k) {\n        return Number(k);\n      })\n    });\n    _this3.providers = void 0;\n    _this3.currentChainId = void 0;\n    _this3.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\n    _this3.providers = Object.keys(urls).reduce(function (accumulator, chainId) {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\n      return accumulator;\n    }, {});\n    return _this3;\n  }\n\n  _createClass(NetworkConnector, [{\n    key: \"provider\",\n    get: function get() {\n      return this.providers[this.currentChainId];\n    }\n  }, {\n    key: \"activate\",\n    value: function () {\n      var _activate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", {\n                  provider: this.providers[this.currentChainId],\n                  chainId: this.currentChainId,\n                  account: null\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function activate() {\n        return _activate.apply(this, arguments);\n      }\n\n      return activate;\n    }()\n  }, {\n    key: \"getProvider\",\n    value: function () {\n      var _getProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.providers[this.currentChainId]);\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getProvider() {\n        return _getProvider.apply(this, arguments);\n      }\n\n      return getProvider;\n    }()\n  }, {\n    key: \"getChainId\",\n    value: function () {\n      var _getChainId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.currentChainId);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getChainId() {\n        return _getChainId.apply(this, arguments);\n      }\n\n      return getChainId;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", null);\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n\n      return getAccount;\n    }()\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      return;\n    }\n  }]);\n\n  return NetworkConnector;\n}(AbstractConnector);","map":{"version":3,"names":["AbstractConnector","invariant","RequestError","message","code","data","Error","MiniRpcProvider","chainId","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","console","debug","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","id","result","resolve","error","sendAsync","callback","params","then","jsonrpc","catch","toString","promise","Promise","push","setTimeout","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","provider","account"],"sources":["/Applications/XAMPP/voxel-interface/src/connectors/NetworkConnector.ts"],"sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ConnectorUpdate } from '@web3-react/types'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.debug('Clearing batch', this.batch)\n    const batch = this.batch\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map(item => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if (resolve && !!reject) {\n        if ('error' in result) {\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n        } else if ('result' in result) {\n          resolve(result.result)\n        } else {\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n        }\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: {\n      jsonrpc: '2.0'\n      id: number | string | null\n      method: string\n      params?: unknown[] | Record<string, unknown>\n    },\n    callback: (error: any, response: any) => void,\n  ): void => {\n    this.request(request.method, request.params)\n      .then(result => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch(error => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: unknown[] | Record<string, unknown>,\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}