{"ast":null,"code":"import { ChainId } from '@kyberswap/ks-sdk-core';\nimport EthereumLogo from 'assets/images/ethereum-logo.png';\nimport ARBITRUM from \"assets/networks/arbitrum-network.svg\";\nimport { KS_SETTING_API } from 'constants/env';\nimport { createClient } from 'utils/client';\nvar EMPTY = '';\nvar EMPTY_ARRAY = [];\nvar NOT_SUPPORT = null;\nvar arbitrumTestnetInfo = {\n  chainId: ChainId.ARBITRUM_TESTNET,\n  route: 'arbitrum-testnet',\n  name: 'Arbitrum Testnet',\n  icon: ARBITRUM,\n  classicClient: createClient('https://api.thegraph.com/subgraphs/name/viet-nv/kyberswap-arbitrum-rinkeby'),\n  elasticClient: createClient('https://api.thegraph.com/subgraphs/name/kybernetwork/kyberswap-elastic-arbitrum-one'),\n  blockClient: createClient('https://api.thegraph.com/subgraphs/name/viet-nv/arbitrum-rinkeby-blocks'),\n  etherscanUrl: 'https://testnet.arbiscan.io',\n  etherscanName: 'Arbiscan',\n  tokenListUrl: \"\".concat(KS_SETTING_API, \"/v1/tokens?chainIds=\").concat(ChainId.ARBITRUM_TESTNET, \"&isWhitelisted=\", true),\n  bridgeURL: 'https://bridge.arbitrum.io',\n  nativeToken: {\n    symbol: 'ETH',\n    name: 'ETH (Wrapped)',\n    address: '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681',\n    logo: EthereumLogo,\n    decimal: 18\n  },\n  rpcUrl: 'https://rinkeby.arbitrum.io/rpc',\n  routerUri: EMPTY,\n  nftStaker: EMPTY_ARRAY,\n  classic: {\n    static: {\n      zap: '0xfa33723F6fA00a35F69F8aCd72A5BE9AF3c8Bd25',\n      router: '0x78Ad9A49327D73C6E3B9881eCD653232cF3E480C',\n      factory: '0x9D4ffbf49cc21372c2115Ae4C155a1e5c0aACf36'\n    },\n    oldStatic: NOT_SUPPORT,\n    dynamic: NOT_SUPPORT,\n    claimReward: EMPTY,\n    fairlaunch: EMPTY_ARRAY,\n    fairlaunchV2: EMPTY_ARRAY\n  },\n  elastic: {\n    coreFactory: '0x5F1dddbf348aC2fbe22a163e30F99F9ECE3DD50a',\n    nonfungiblePositionManager: '0x2B1c7b41f6A8F2b2bc45C3233a5d5FB3cD6dC9A8',\n    tickReader: '0xe3AC3fd66EB31cAf4EE0831b262D837c479FFCe5',\n    initCodeHash: '0xc597aba1bb02db42ba24a8878837965718c032f8b46be94a6e46452a9f89ca01',\n    quoter: '0x0D125c15D54cA1F8a813C74A81aEe34ebB508C1f',\n    routers: '0xC1e7dFE73E1598E3910EF4C7845B68A9Ab6F4c83'\n  },\n  staking: {\n    nftFactory: '0x1a91f5ADc7cB5763d35A26e98A18520CB9b67e70',\n    tokenFactory: '0x7EDF6fC10D13996C36422ca915310E0B3876b993'\n  },\n  averageBlockTimeInSeconds: 1,\n  // TODO: check these info\n  coingeckoNetworkId: EMPTY,\n  coingeckoNativeTokenId: 'ethereum',\n  deBankSlug: EMPTY\n};\nexport default arbitrumTestnetInfo;","map":{"version":3,"names":["ChainId","EthereumLogo","KS_SETTING_API","createClient","EMPTY","EMPTY_ARRAY","NOT_SUPPORT","arbitrumTestnetInfo","chainId","ARBITRUM_TESTNET","route","name","icon","ARBITRUM","classicClient","elasticClient","blockClient","etherscanUrl","etherscanName","tokenListUrl","bridgeURL","nativeToken","symbol","address","logo","decimal","rpcUrl","routerUri","nftStaker","classic","static","zap","router","factory","oldStatic","dynamic","claimReward","fairlaunch","fairlaunchV2","elastic","coreFactory","nonfungiblePositionManager","tickReader","initCodeHash","quoter","routers","staking","nftFactory","tokenFactory","averageBlockTimeInSeconds","coingeckoNetworkId","coingeckoNativeTokenId","deBankSlug"],"sources":["/Applications/XAMPP/voxel-interface/src/constants/networks/arbitrum-testnet.ts"],"sourcesContent":["import { ChainId } from '@kyberswap/ks-sdk-core'\n\nimport EthereumLogo from 'assets/images/ethereum-logo.png'\nimport ARBITRUM from 'assets/networks/arbitrum-network.svg'\nimport { KS_SETTING_API } from 'constants/env'\nimport { createClient } from 'utils/client'\n\nimport { NetworkInfo } from '../type'\n\nconst EMPTY = ''\nconst EMPTY_ARRAY: any[] = []\nconst NOT_SUPPORT = null\n\nconst arbitrumTestnetInfo: NetworkInfo = {\n  chainId: ChainId.ARBITRUM_TESTNET,\n  route: 'arbitrum-testnet',\n  name: 'Arbitrum Testnet',\n  icon: ARBITRUM,\n  classicClient: createClient('https://api.thegraph.com/subgraphs/name/viet-nv/kyberswap-arbitrum-rinkeby'),\n  elasticClient: createClient('https://api.thegraph.com/subgraphs/name/kybernetwork/kyberswap-elastic-arbitrum-one'),\n  blockClient: createClient('https://api.thegraph.com/subgraphs/name/viet-nv/arbitrum-rinkeby-blocks'),\n  etherscanUrl: 'https://testnet.arbiscan.io',\n  etherscanName: 'Arbiscan',\n  tokenListUrl: `${KS_SETTING_API}/v1/tokens?chainIds=${ChainId.ARBITRUM_TESTNET}&isWhitelisted=${true}`,\n  bridgeURL: 'https://bridge.arbitrum.io',\n  nativeToken: {\n    symbol: 'ETH',\n    name: 'ETH (Wrapped)',\n    address: '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681',\n    logo: EthereumLogo,\n    decimal: 18,\n  },\n  rpcUrl: 'https://rinkeby.arbitrum.io/rpc',\n  routerUri: EMPTY,\n  nftStaker:EMPTY_ARRAY,\n  classic: {\n    static: {\n      zap: '0xfa33723F6fA00a35F69F8aCd72A5BE9AF3c8Bd25',\n      router: '0x78Ad9A49327D73C6E3B9881eCD653232cF3E480C',\n      factory: '0x9D4ffbf49cc21372c2115Ae4C155a1e5c0aACf36',\n    },\n    oldStatic: NOT_SUPPORT,\n    dynamic: NOT_SUPPORT,\n    claimReward: EMPTY,\n    fairlaunch: EMPTY_ARRAY,\n    fairlaunchV2: EMPTY_ARRAY,\n  },\n  elastic: {\n    coreFactory: '0x5F1dddbf348aC2fbe22a163e30F99F9ECE3DD50a',\n    nonfungiblePositionManager: '0x2B1c7b41f6A8F2b2bc45C3233a5d5FB3cD6dC9A8',\n    tickReader: '0xe3AC3fd66EB31cAf4EE0831b262D837c479FFCe5',\n    initCodeHash: '0xc597aba1bb02db42ba24a8878837965718c032f8b46be94a6e46452a9f89ca01',\n    quoter: '0x0D125c15D54cA1F8a813C74A81aEe34ebB508C1f',\n    routers: '0xC1e7dFE73E1598E3910EF4C7845B68A9Ab6F4c83',\n  },\n  staking: {\n    nftFactory: '0x1a91f5ADc7cB5763d35A26e98A18520CB9b67e70',\n    tokenFactory:'0x7EDF6fC10D13996C36422ca915310E0B3876b993'\n  },\n  averageBlockTimeInSeconds: 1, // TODO: check these info\n  coingeckoNetworkId: EMPTY,\n  coingeckoNativeTokenId: 'ethereum',\n  deBankSlug: EMPTY,\n}\n\nexport default arbitrumTestnetInfo\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AAEA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAIA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,WAAkB,GAAG,EAA3B;AACA,IAAMC,WAAW,GAAG,IAApB;AAEA,IAAMC,mBAAgC,GAAG;EACvCC,OAAO,EAAER,OAAO,CAACS,gBADsB;EAEvCC,KAAK,EAAE,kBAFgC;EAGvCC,IAAI,EAAE,kBAHiC;EAIvCC,IAAI,EAAEC,QAJiC;EAKvCC,aAAa,EAAEX,YAAY,CAAC,4EAAD,CALY;EAMvCY,aAAa,EAAEZ,YAAY,CAAC,qFAAD,CANY;EAOvCa,WAAW,EAAEb,YAAY,CAAC,yEAAD,CAPc;EAQvCc,YAAY,EAAE,6BARyB;EASvCC,aAAa,EAAE,UATwB;EAUvCC,YAAY,YAAKjB,cAAL,iCAA0CF,OAAO,CAACS,gBAAlD,qBAAoF,IAApF,CAV2B;EAWvCW,SAAS,EAAE,4BAX4B;EAYvCC,WAAW,EAAE;IACXC,MAAM,EAAE,KADG;IAEXX,IAAI,EAAE,eAFK;IAGXY,OAAO,EAAE,4CAHE;IAIXC,IAAI,EAAEvB,YAJK;IAKXwB,OAAO,EAAE;EALE,CAZ0B;EAmBvCC,MAAM,EAAE,iCAnB+B;EAoBvCC,SAAS,EAAEvB,KApB4B;EAqBvCwB,SAAS,EAACvB,WArB6B;EAsBvCwB,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,GAAG,EAAE,4CADC;MAENC,MAAM,EAAE,4CAFF;MAGNC,OAAO,EAAE;IAHH,CADD;IAMPC,SAAS,EAAE5B,WANJ;IAOP6B,OAAO,EAAE7B,WAPF;IAQP8B,WAAW,EAAEhC,KARN;IASPiC,UAAU,EAAEhC,WATL;IAUPiC,YAAY,EAAEjC;EAVP,CAtB8B;EAkCvCkC,OAAO,EAAE;IACPC,WAAW,EAAE,4CADN;IAEPC,0BAA0B,EAAE,4CAFrB;IAGPC,UAAU,EAAE,4CAHL;IAIPC,YAAY,EAAE,oEAJP;IAKPC,MAAM,EAAE,4CALD;IAMPC,OAAO,EAAE;EANF,CAlC8B;EA0CvCC,OAAO,EAAE;IACPC,UAAU,EAAE,4CADL;IAEPC,YAAY,EAAC;EAFN,CA1C8B;EA8CvCC,yBAAyB,EAAE,CA9CY;EA8CT;EAC9BC,kBAAkB,EAAE9C,KA/CmB;EAgDvC+C,sBAAsB,EAAE,UAhDe;EAiDvCC,UAAU,EAAEhD;AAjD2B,CAAzC;AAoDA,eAAeG,mBAAf"},"metadata":{},"sourceType":"module"}