{"ast":null,"code":"import _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/RemoveLiquidity/TokenPair.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { splitSignature } from '@ethersproject/bytes';\nimport { Fraction, Percent, Token, WETH } from '@kyberswap/ks-sdk-core';\nimport { captureException } from '@sentry/react';\nimport JSBI from 'jsbi';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Flex, Text } from 'rebass';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button';\nimport { BlackCard } from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport CurrentPrice from 'components/CurrentPrice';\nimport DoubleCurrencyLogo from 'components/DoubleLogo';\nimport Loader from 'components/Loader';\nimport Row, { AutoRow, RowBetween, RowFixed } from 'components/Row';\nimport Slider from 'components/Slider';\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from 'components/TransactionConfirmationModal';\nimport { Dots } from 'components/swap/styleds';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { nativeOnChain } from 'constants/tokens';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback';\nimport { usePairContract } from 'hooks/useContract';\nimport useIsArgentWallet from 'hooks/useIsArgentWallet';\nimport useTheme from 'hooks/useTheme';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks';\nimport { Field } from 'state/burn/actions';\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from 'state/burn/hooks';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { StyledInternalLink, TYPE, UppercaseText } from 'theme';\nimport { calculateGasMargin, calculateSlippageAmount, formattedNum, getDynamicFeeRouterContract, getOldStaticFeeRouterContract, getStaticFeeRouterContract } from 'utils';\nimport { currencyId } from 'utils/currencyId';\nimport { formatJSBIValue } from 'utils/formatBalance';\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\nimport { Wrapper } from '../Pool/styleds';\nimport { CurrentPriceWrapper, DetailBox, DetailWrapper, FirstColumn, GridColumn, MaxButton, ModalDetailWrapper, SecondColumn, TokenWrapper } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TokenPair(_ref) {\n  _s();\n\n  var _useCurrency,\n      _useCurrency2,\n      _NETWORKS_INFO$chainI,\n      _NETWORKS_INFO$chainI2,\n      _parsedAmounts$Field$,\n      _parsedAmounts$Field$2,\n      _parsedAmounts$Field$3,\n      _parsedAmounts$Field$4,\n      _parsedAmounts$Field$5,\n      _parsedAmounts$Field$6,\n      _formattedAmounts,\n      _pair$liquidityToken,\n      _parsedAmounts$Field$7,\n      _parsedAmounts$Field$8,\n      _this = this,\n      _pair$liquidityToken2,\n      _pair$liquidityToken3;\n\n  var currencyIdA = _ref.currencyIdA,\n      currencyIdB = _ref.currencyIdB,\n      pairAddress = _ref.pairAddress;\n  var currencyA = (_useCurrency = useCurrency(currencyIdA)) !== null && _useCurrency !== void 0 ? _useCurrency : undefined,\n      currencyB = (_useCurrency2 = useCurrency(currencyIdB)) !== null && _useCurrency2 !== void 0 ? _useCurrency2 : undefined;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account,\n      chainId = _useActiveWeb3React.chainId,\n      library = _useActiveWeb3React.library;\n\n  var nativeA = currencyA;\n  var nativeB = currencyB;\n\n  var _useMemo = useMemo(function () {\n    return [currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped, currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped];\n  }, [currencyA, currencyB]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      tokenA = _useMemo2[0],\n      tokenB = _useMemo2[1];\n\n  var currencyAIsETHER = !!(chainId && currencyA && currencyA.isNative);\n  var currencyAIsWETH = !!(chainId && currencyA && currencyA.equals(WETH[chainId]));\n  var currencyBIsETHER = !!(chainId && currencyB && currencyB.isNative);\n  var currencyBIsWETH = !!(chainId && currencyB && currencyB.equals(WETH[chainId]));\n  var theme = useTheme(); // toggle wallet when disconnected\n\n  var toggleWalletModal = useWalletModalToggle(); // burn state\n\n  var _useBurnState = useBurnState(),\n      independentField = _useBurnState.independentField,\n      typedValue = _useBurnState.typedValue;\n\n  var _useDerivedBurnInfo = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined, pairAddress),\n      pair = _useDerivedBurnInfo.pair,\n      userLiquidity = _useDerivedBurnInfo.userLiquidity,\n      parsedAmounts = _useDerivedBurnInfo.parsedAmounts,\n      amountsMin = _useDerivedBurnInfo.amountsMin,\n      price = _useDerivedBurnInfo.price,\n      error = _useDerivedBurnInfo.error,\n      isStaticFeePair = _useDerivedBurnInfo.isStaticFeePair,\n      isOldStaticFeeContract = _useDerivedBurnInfo.isOldStaticFeeContract;\n\n  var contractAddress = chainId ? isStaticFeePair ? isOldStaticFeeContract ? (_NETWORKS_INFO$chainI = NETWORKS_INFO[chainId].classic.oldStatic) === null || _NETWORKS_INFO$chainI === void 0 ? void 0 : _NETWORKS_INFO$chainI.router : NETWORKS_INFO[chainId].classic.static.router : (_NETWORKS_INFO$chainI2 = NETWORKS_INFO[chainId].classic.dynamic) === null || _NETWORKS_INFO$chainI2 === void 0 ? void 0 : _NETWORKS_INFO$chainI2.router : undefined;\n  var amp = (pair === null || pair === void 0 ? void 0 : pair.amp) || JSBI.BigInt(0);\n\n  var _useBurnActionHandler = useBurnActionHandlers(),\n      _onUserInput = _useBurnActionHandler.onUserInput;\n\n  var isValid = !error; // modal and loading\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showConfirm = _useState2[0],\n      setShowConfirm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attemptingTxn = _useState4[0],\n      setAttemptingTxn = _useState4[1]; // clicked confirm\n  // txn values\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      txHash = _useState6[0],\n      setTxHash = _useState6[1];\n\n  var deadline = useTransactionDeadline();\n\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n      _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n      allowedSlippage = _useUserSlippageToler2[0];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      removeLiquidityError = _useState8[0],\n      setRemoveLiquidityError = _useState8[1];\n\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, Field.LIQUIDITY_PERCENT, parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), _defineProperty(_formattedAmounts, Field.LIQUIDITY, independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : ''), _defineProperty(_formattedAmounts, Field.CURRENCY_A, independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : ''), _defineProperty(_formattedAmounts, Field.CURRENCY_B, independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''), _formattedAmounts); // pair contract\n\n  var pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address); // allowance handling\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      signatureData = _useState10[0],\n      setSignatureData = _useState10[1];\n\n  var _useApproveCallback = useApproveCallback(parsedAmounts[Field.LIQUIDITY], contractAddress),\n      _useApproveCallback2 = _slicedToArray(_useApproveCallback, 2),\n      approval = _useApproveCallback2[0],\n      approveCallback = _useApproveCallback2[1]; // if user liquidity change => remove signature\n\n\n  useEffect(function () {\n    setSignatureData(null); // eslint-disable-next-line\n  }, [userLiquidity === null || userLiquidity === void 0 ? void 0 : userLiquidity.toExact()]);\n  var isArgentWallet = useIsArgentWallet();\n\n  function onAttemptToApprove() {\n    return _onAttemptToApprove.apply(this, arguments);\n  } // wrapped onUserInput to clear signatures\n\n\n  function _onAttemptToApprove() {\n    _onAttemptToApprove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var liquidityAmount, nonce, EIP712Domain, domain, Permit, message, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (chainId) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('missing chain');\n\n            case 2:\n              if (!(!pairContract || !pair || !library || !deadline)) {\n                _context.next = 4;\n                break;\n              }\n\n              throw new Error('missing dependencies');\n\n            case 4:\n              liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n\n              if (liquidityAmount) {\n                _context.next = 7;\n                break;\n              }\n\n              throw new Error('missing liquidity amount');\n\n            case 7:\n              if (!isArgentWallet) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\", approveCallback());\n\n            case 9:\n              _context.next = 11;\n              return pairContract.nonces(account);\n\n            case 11:\n              nonce = _context.sent;\n              EIP712Domain = [{\n                name: 'name',\n                type: 'string'\n              }, {\n                name: 'version',\n                type: 'string'\n              }, {\n                name: 'chainId',\n                type: 'uint256'\n              }, {\n                name: 'verifyingContract',\n                type: 'address'\n              }];\n              domain = {\n                name: isStaticFeePair ? 'KyberSwap LP' : 'KyberDMM LP',\n                version: '1',\n                chainId: chainId,\n                verifyingContract: pair.liquidityToken.address\n              };\n              Permit = [{\n                name: 'owner',\n                type: 'address'\n              }, {\n                name: 'spender',\n                type: 'address'\n              }, {\n                name: 'value',\n                type: 'uint256'\n              }, {\n                name: 'nonce',\n                type: 'uint256'\n              }, {\n                name: 'deadline',\n                type: 'uint256'\n              }];\n              message = {\n                owner: account,\n                TransactionErrorContent: TransactionErrorContent,\n                spender: contractAddress,\n                value: liquidityAmount.quotient.toString(),\n                nonce: nonce.toHexString(),\n                deadline: deadline.toNumber()\n              };\n              data = JSON.stringify({\n                types: {\n                  EIP712Domain: EIP712Domain,\n                  Permit: Permit\n                },\n                domain: domain,\n                primaryType: 'Permit',\n                message: message\n              });\n              library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(function (signature) {\n                setSignatureData({\n                  v: signature.v,\n                  r: signature.r,\n                  s: signature.s,\n                  deadline: deadline.toNumber()\n                });\n              }).catch(function (error) {\n                // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n                if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                  approveCallback();\n                }\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onAttemptToApprove.apply(this, arguments);\n  }\n\n  var onUserInput = useCallback(function (field, typedValue) {\n    setSignatureData(null);\n    return _onUserInput(field, typedValue);\n  }, [_onUserInput]);\n  var onLiquidityInput = useCallback(function (typedValue) {\n    return onUserInput(Field.LIQUIDITY, typedValue);\n  }, [onUserInput]);\n  var onCurrencyAInput = useCallback(function (typedValue) {\n    return onUserInput(Field.CURRENCY_A, typedValue);\n  }, [onUserInput]);\n  var onCurrencyBInput = useCallback(function (typedValue) {\n    return onUserInput(Field.CURRENCY_B, typedValue);\n  }, [onUserInput]); // tx sending\n\n  var addTransactionWithType = useTransactionAdder();\n\n  function onRemove() {\n    return _onRemove.apply(this, arguments);\n  }\n\n  function _onRemove() {\n    _onRemove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _amountsMin;\n\n      var currencyAmountA, currencyAmountB, routerContract, amountsMin, liquidityAmount, currencyBIsETH, oneCurrencyIsETH, methodNames, args, safeGasEstimates, indexOfSuccessfulEstimation, methodName, safeGasEstimate;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(!chainId || !library || !account || !deadline)) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw new Error('missing dependencies');\n\n            case 2:\n              currencyAmountA = parsedAmounts[Field.CURRENCY_A], currencyAmountB = parsedAmounts[Field.CURRENCY_B];\n\n              if (!(!currencyAmountA || !currencyAmountB)) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error('missing currency amounts');\n\n            case 5:\n              routerContract = isStaticFeePair ? isOldStaticFeeContract ? getOldStaticFeeRouterContract(chainId, library, account) : getStaticFeeRouterContract(chainId, library, account) : getDynamicFeeRouterContract(chainId, library, account);\n              amountsMin = (_amountsMin = {}, _defineProperty(_amountsMin, Field.CURRENCY_A, calculateSlippageAmount(currencyAmountA, allowedSlippage)[0]), _defineProperty(_amountsMin, Field.CURRENCY_B, calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]), _amountsMin);\n\n              if (!(!currencyA || !currencyB)) {\n                _context2.next = 9;\n                break;\n              }\n\n              throw new Error('missing tokens');\n\n            case 9:\n              liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n\n              if (liquidityAmount) {\n                _context2.next = 12;\n                break;\n              }\n\n              throw new Error('missing liquidity amount');\n\n            case 12:\n              currencyBIsETH = currencyB.isNative;\n              oneCurrencyIsETH = currencyA.isNative || currencyBIsETH;\n\n              if (!(!tokenA || !tokenB)) {\n                _context2.next = 16;\n                break;\n              }\n\n              throw new Error('could not wrap');\n\n            case 16:\n              if (!(approval === ApprovalState.APPROVED)) {\n                _context2.next = 20;\n                break;\n              }\n\n              // removeLiquidityETH\n              if (oneCurrencyIsETH) {\n                methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens'];\n                args = [currencyBIsETH ? tokenA.address : tokenB.address, pairAddress, liquidityAmount.quotient.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadline.toHexString()];\n              } // removeLiquidity\n              else {\n                methodNames = ['removeLiquidity'];\n                args = [tokenA.address, tokenB.address, pairAddress, liquidityAmount.quotient.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n              }\n\n              _context2.next = 25;\n              break;\n\n            case 20:\n              if (!(signatureData !== null)) {\n                _context2.next = 24;\n                break;\n              }\n\n              // removeLiquidityETHWithPermit\n              if (oneCurrencyIsETH) {\n                methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens'];\n                args = [currencyBIsETH ? tokenA.address : tokenB.address, pairAddress, liquidityAmount.quotient.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n              } // removeLiquidityETHWithPermit\n              else {\n                methodNames = ['removeLiquidityWithPermit'];\n                args = [tokenA.address, tokenB.address, pairAddress, liquidityAmount.quotient.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n              }\n\n              _context2.next = 25;\n              break;\n\n            case 24:\n              throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n\n            case 25:\n              _context2.next = 27;\n              return Promise.all(methodNames.map(function (methodName) {\n                var _routerContract$estim;\n\n                return (_routerContract$estim = routerContract.estimateGas)[methodName].apply(_routerContract$estim, _toConsumableArray(args)).then(calculateGasMargin).catch(function (error) {\n                  console.error(\"estimateGas failed\", methodName, args, error);\n                  return undefined;\n                });\n              }));\n\n            case 27:\n              safeGasEstimates = _context2.sent;\n              indexOfSuccessfulEstimation = safeGasEstimates.findIndex(function (safeGasEstimate) {\n                return BigNumber.isBigNumber(safeGasEstimate);\n              }); // all estimations failed...\n\n              if (!(indexOfSuccessfulEstimation === -1)) {\n                _context2.next = 33;\n                break;\n              }\n\n              console.error('This transaction would fail. Please contact support.');\n              _context2.next = 38;\n              break;\n\n            case 33:\n              methodName = methodNames[indexOfSuccessfulEstimation];\n              safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n              setAttemptingTxn(true);\n              _context2.next = 38;\n              return routerContract[methodName].apply(routerContract, _toConsumableArray(args).concat([{\n                gasLimit: safeGasEstimate\n              }])).then(function (response) {\n                if (!!currencyA && !!currencyB) {\n                  var _parsedAmounts$Field$12, _parsedAmounts$Field$13;\n\n                  setAttemptingTxn(false);\n                  addTransactionWithType(response, {\n                    type: 'Remove liquidity',\n                    summary: ((_parsedAmounts$Field$12 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$12 === void 0 ? void 0 : _parsedAmounts$Field$12.toSignificant(6)) + ' ' + (currencyAIsWETH ? nativeOnChain(chainId).symbol : currencyA.symbol) + ' and ' + ((_parsedAmounts$Field$13 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$13 === void 0 ? void 0 : _parsedAmounts$Field$13.toSignificant(6)) + ' ' + (currencyBIsWETH ? nativeOnChain(chainId).symbol : currencyB.symbol),\n                    arbitrary: {\n                      poolAddress: pairAddress,\n                      token_1: currencyA.symbol,\n                      token_2: currencyB.symbol,\n                      remove_liquidity_method: 'token pair',\n                      amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5)\n                    }\n                  });\n                  setTxHash(response.hash);\n                }\n              }).catch(function (err) {\n                setAttemptingTxn(false);\n                var e = new Error('Remove Liquidity Error', {\n                  cause: err\n                });\n                e.name = 'RemoveLiquidityError';\n                captureException(e, {\n                  extra: {\n                    args: args\n                  }\n                }); // we only care if the error is something _other_ than the user rejected the tx\n\n                if ((err === null || err === void 0 ? void 0 : err.code) !== 4001) {\n                  console.error(err);\n                }\n\n                if (err.message.includes('INSUFFICIENT')) {\n                  setRemoveLiquidityError(\n                  /*i18n*/\n                  i18n._(\"Insufficient liquidity available. Please reload page and try again!\"));\n                } else {\n                  setRemoveLiquidityError(err === null || err === void 0 ? void 0 : err.message);\n                }\n              });\n\n            case 38:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _onRemove.apply(this, arguments);\n  }\n\n  var usdPrices = useTokensPrice([tokenA, tokenB]);\n  var estimatedUsdCurrencyA = parsedAmounts[Field.CURRENCY_A] && usdPrices[0] ? parseFloat(parsedAmounts[Field.CURRENCY_A].toSignificant(6)) * usdPrices[0] : 0;\n  var estimatedUsdCurrencyB = parsedAmounts[Field.CURRENCY_B] && usdPrices[1] ? parseFloat(parsedAmounts[Field.CURRENCY_B].toSignificant(6)) * usdPrices[1] : 0;\n  var pendingText = \"Removing \".concat((_parsedAmounts$Field$7 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.toSignificant(6), \" \").concat(nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol, \" and \").concat((_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(6), \" \").concat(nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol);\n  var liquidityPercentChangeCallback = useCallback(function (value) {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  var handleDismissConfirmation = useCallback(function () {\n    setShowConfirm(false);\n    setSignatureData(null); // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0');\n    }\n\n    setTxHash('');\n    setRemoveLiquidityError('');\n  }, [onUserInput, txHash]);\n\n  var _useDebouncedChangeHa = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback),\n      _useDebouncedChangeHa2 = _slicedToArray(_useDebouncedChangeHa, 2),\n      innerLiquidityPercentage = _useDebouncedChangeHa2[0],\n      setInnerLiquidityPercentage = _useDebouncedChangeHa2[1];\n\n  function modalHeader() {\n    var _parsedAmounts$Field$9, _parsedAmounts$Field$10;\n\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: 'md',\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        gap: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: currencyA,\n          size: '28px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 32,\n          fontWeight: 500,\n          children: (_parsedAmounts$Field$9 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 32,\n          fontWeight: 500,\n          children: nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), !!estimatedUsdCurrencyA && /*#__PURE__*/_jsxDEV(Text, {\n          color: theme.subText,\n          marginLeft: \"4px\",\n          fontSize: 18,\n          fontWeight: 500,\n          children: [\"(~\", formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n        gap: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: currencyB,\n          size: '28px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 32,\n          fontWeight: 500,\n          children: (_parsedAmounts$Field$10 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$10 === void 0 ? void 0 : _parsedAmounts$Field$10.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 32,\n          fontWeight: 500,\n          children: nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), !!estimatedUsdCurrencyB && /*#__PURE__*/_jsxDEV(Text, {\n          color: theme.subText,\n          marginLeft: \"4px\",\n          fontSize: 18,\n          fontWeight: 500,\n          children: [\"(~\", formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.italic, {\n        fontSize: 12,\n        fontWeight: 400,\n        color: theme.subText,\n        textAlign: \"left\",\n        children:\n        /*i18n*/\n        i18n._(\"Output is estimated. If the price changes by more than {0}% your transaction will revert.\", {\n          0: allowedSlippage / 100\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this);\n  }\n\n  function modalBottom() {\n    var _parsedAmounts$Field$11;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalDetailWrapper, {\n        children: pair && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CurrentPriceWrapper, {\n            style: {\n              paddingBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n              fontSize: 14,\n              fontWeight: 400,\n              color: theme.subText,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Current Price\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n              fontSize: 14,\n              fontWeight: 400,\n              children: /*#__PURE__*/_jsxDEV(CurrentPrice, {\n                price: price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n            style: {\n              paddingBottom: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: theme.subText,\n              fontSize: 14,\n              fontWeight: 400,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"LP Tokens Removed\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n                currency0: currencyA,\n                currency1: currencyB,\n                margin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                color: theme.text,\n                fontSize: 14,\n                fontWeight: 400,\n                children: (_parsedAmounts$Field$11 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$11 === void 0 ? void 0 : _parsedAmounts$Field$11.toSignificant(6)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this), amountsMin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              style: {\n                paddingBottom: '12px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                fontWeight: 400,\n                fontSize: 14,\n                color: theme.subText,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Minimum Received\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TokenWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                  currency: currencyA,\n                  size: \"16px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                  fontWeight: 400,\n                  fontSize: 14,\n                  children: [formatJSBIValue(amountsMin[Field.CURRENCY_A], currencyA === null || currencyA === void 0 ? void 0 : currencyA.decimals), \" \", nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TokenWrapper, {\n                children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                  currency: currencyB,\n                  size: \"16px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                  fontWeight: 400,\n                  fontSize: 14,\n                  children: [formatJSBIValue(amountsMin[Field.CURRENCY_B], currencyB === null || currencyB === void 0 ? void 0 : currencyB.decimals), \" \", nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        disabled: !(approval === ApprovalState.APPROVED || signatureData !== null),\n        onClick: onRemove,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 500,\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Confirm\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n        isOpen: showConfirm,\n        onDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash ? txHash : '',\n        content: function content() {\n          return removeLiquidityError ? /*#__PURE__*/_jsxDEV(TransactionErrorContent, {\n            onDismiss: handleDismissConfirmation,\n            message: removeLiquidityError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n            title: 'You will receive',\n            onDismiss: handleDismissConfirmation,\n            topContent: modalHeader,\n            bottomContent: modalBottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, _this);\n        },\n        pendingText: pendingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        children: /*#__PURE__*/_jsxDEV(GridColumn, {\n          children: [/*#__PURE__*/_jsxDEV(FirstColumn, {\n            children: [/*#__PURE__*/_jsxDEV(BlackCard, {\n              padding: \"1rem\",\n              borderRadius: \"4px\",\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"1rem\",\n                children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    fontWeight: 500,\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Amount\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    fontWeight: 500,\n                    children: [/*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Balance\"\n                    }, void 0, false, void 0, this), \": \", !userLiquidity ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 65\n                    }, this) : userLiquidity === null || userLiquidity === void 0 ? void 0 : userLiquidity.toSignificant(6), \" LP Tokens\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  style: {\n                    alignItems: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 72,\n                    fontWeight: 500,\n                    children: [formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Slider, {\n                    value: innerLiquidityPercentage,\n                    onChange: setInnerLiquidityPercentage,\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                    style: {\n                      gap: '4px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MaxButton, {\n                      onClick: function onClick() {\n                        return onUserInput(Field.LIQUIDITY_PERCENT, '25');\n                      },\n                      children: \"25%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                      onClick: function onClick() {\n                        return onUserInput(Field.LIQUIDITY_PERCENT, '50');\n                      },\n                      children: \"50%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                      onClick: function onClick() {\n                        return onUserInput(Field.LIQUIDITY_PERCENT, '75');\n                      },\n                      children: \"75%\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 605,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                      onClick: function onClick() {\n                        return onUserInput(Field.LIQUIDITY_PERCENT, '100');\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Max\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this), chainId && pair && /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              hideBalance: true,\n              hideLogo: true,\n              value: formattedAmounts[Field.LIQUIDITY],\n              onUserInput: onLiquidityInput,\n              showMaxButton: false,\n              disableCurrencySelect: true,\n              currency: new Token(chainId, (_pair$liquidityToken2 = pair.liquidityToken) === null || _pair$liquidityToken2 === void 0 ? void 0 : _pair$liquidityToken2.address, (_pair$liquidityToken3 = pair.liquidityToken) === null || _pair$liquidityToken3 === void 0 ? void 0 : _pair$liquidityToken3.decimals, \"LP Tokens\", \"LP Tokens\"),\n              id: \"liquidity-amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                  value: formattedAmounts[Field.CURRENCY_A],\n                  onUserInput: onCurrencyAInput,\n                  showMaxButton: false,\n                  currency: currencyA,\n                  label:\n                  /*i18n*/\n                  i18n._(\"Output\"),\n                  onCurrencySelect: function onCurrencySelect() {\n                    return null;\n                  },\n                  disableCurrencySelect: true,\n                  id: \"remove-liquidity-tokena\",\n                  estimatedUsd: formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  justifyContent: \"flex-end\",\n                  alignItems: \"center\",\n                  marginTop: \"0.5rem\",\n                  children: pairAddress && chainId && (currencyAIsETHER || currencyAIsWETH) && /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                    replace: true,\n                    to: \"/remove/\".concat(currencyAIsETHER ? currencyId(WETH[chainId], chainId) : nativeOnChain(chainId).symbol, \"/\").concat(currencyIdB, \"/\").concat(pairAddress),\n                    children: currencyAIsETHER ? /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Use Wrapped Token\"\n                    }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Use Native Token\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                  value: formattedAmounts[Field.CURRENCY_B],\n                  onUserInput: onCurrencyBInput,\n                  showMaxButton: false,\n                  currency: currencyB,\n                  onCurrencySelect: function onCurrencySelect() {\n                    return null;\n                  },\n                  disableCurrencySelect: true,\n                  id: \"remove-liquidity-tokenb\",\n                  estimatedUsd: formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  justifyContent: \"flex-end\",\n                  alignItems: \"center\",\n                  marginTop: \"0.5rem\",\n                  children: pairAddress && chainId && (currencyBIsWETH || currencyBIsETHER) && /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                    replace: true,\n                    to: \"/remove/\".concat(currencyIdA, \"/\").concat(currencyBIsETHER ? currencyId(WETH[chainId], chainId) : nativeOnChain(chainId).symbol, \"/\").concat(pairAddress),\n                    children: currencyBIsETHER ? /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Use Wrapped Token\"\n                    }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Use Native Token\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true), pair && /*#__PURE__*/_jsxDEV(DetailWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                justify: \"space-between\",\n                gap: \"4px\",\n                style: {\n                  paddingBottom: '12px'\n                },\n                children: /*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                  fontWeight: 500,\n                  fontSize: 12,\n                  color: theme.subText,\n                  children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Minimum Received\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this), amountsMin && /*#__PURE__*/_jsxDEV(DetailBox, {\n                style: {\n                  paddingBottom: '12px',\n                  borderBottom: \"1px dashed \".concat(theme.border)\n                },\n                children: [/*#__PURE__*/_jsxDEV(TokenWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                    currency: currencyA,\n                    size: \"16px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    children: [formatJSBIValue(amountsMin[Field.CURRENCY_A], currencyA === null || currencyA === void 0 ? void 0 : currencyA.decimals), \" \", nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TokenWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                    currency: currencyB,\n                    size: \"16px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    children: [formatJSBIValue(amountsMin[Field.CURRENCY_B], currencyB === null || currencyB === void 0 ? void 0 : currencyB.decimals), \" \", nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DetailBox, {\n                style: {\n                  paddingTop: '12px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                  fontWeight: 500,\n                  fontSize: 12,\n                  color: theme.subText,\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Current Price\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                  fontWeight: 400,\n                  fontSize: 14,\n                  children: /*#__PURE__*/_jsxDEV(CurrentPrice, {\n                    price: price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative'\n              },\n              children: !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n                onClick: toggleWalletModal,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Connect Wallet\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(RowBetween, {\n                children: [!error && /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                  onClick: onAttemptToApprove,\n                  confirmed: approval === ApprovalState.APPROVED || signatureData !== null,\n                  disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null || !userLiquidity || userLiquidity.equalTo('0'),\n                  margin: \"0 1rem 0 0\",\n                  fontWeight: 500,\n                  fontSize: 16,\n                  children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Approving\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 27\n                  }, this) : approval === ApprovalState.APPROVED || signatureData !== null ?\n                  /*i18n*/\n                  i18n._(\"Approved\") :\n                  /*i18n*/\n                  i18n._(\"Approve\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                  onClick: function onClick() {\n                    setShowConfirm(true);\n                  },\n                  disabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n                  error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 16,\n                    fontWeight: 500,\n                    children: error ||\n                    /*i18n*/\n                    i18n._(\"Remove\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 775,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TokenPair, \"oVEOVw0ANvd+eMT+dzMhD1XQO9s=\", false, function () {\n  return [useCurrency, useCurrency, useActiveWeb3React, useTheme, useWalletModalToggle, useBurnState, useDerivedBurnInfo, useBurnActionHandlers, useTransactionDeadline, useUserSlippageTolerance, usePairContract, useApproveCallback, useIsArgentWallet, useTransactionAdder, useTokensPrice, useDebouncedChangeHandler];\n});\n\n_c = TokenPair;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenPair\");","map":{"version":3,"names":["BigNumber","splitSignature","Fraction","Percent","Token","WETH","captureException","JSBI","useCallback","useEffect","useMemo","useState","Flex","Text","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","BlackCard","AutoColumn","CurrencyInputPanel","CurrencyLogo","CurrentPrice","DoubleCurrencyLogo","Loader","Row","AutoRow","RowBetween","RowFixed","Slider","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","Dots","NETWORKS_INFO","nativeOnChain","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","usePairContract","useIsArgentWallet","useTheme","useTransactionDeadline","useTokensPrice","useWalletModalToggle","Field","useBurnActionHandlers","useBurnState","useDerivedBurnInfo","useTransactionAdder","useUserSlippageTolerance","StyledInternalLink","TYPE","UppercaseText","calculateGasMargin","calculateSlippageAmount","formattedNum","getDynamicFeeRouterContract","getOldStaticFeeRouterContract","getStaticFeeRouterContract","currencyId","formatJSBIValue","useDebouncedChangeHandler","Wrapper","CurrentPriceWrapper","DetailBox","DetailWrapper","FirstColumn","GridColumn","MaxButton","ModalDetailWrapper","SecondColumn","TokenWrapper","TokenPair","currencyIdA","currencyIdB","pairAddress","currencyA","undefined","currencyB","account","chainId","library","nativeA","nativeB","wrapped","tokenA","tokenB","currencyAIsETHER","isNative","currencyAIsWETH","equals","currencyBIsETHER","currencyBIsWETH","theme","toggleWalletModal","independentField","typedValue","pair","userLiquidity","parsedAmounts","amountsMin","price","error","isStaticFeePair","isOldStaticFeeContract","contractAddress","classic","oldStatic","router","static","dynamic","amp","BigInt","_onUserInput","onUserInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","allowedSlippage","removeLiquidityError","setRemoveLiquidityError","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","pairContract","liquidityToken","address","signatureData","setSignatureData","approval","approveCallback","toExact","isArgentWallet","onAttemptToApprove","Error","liquidityAmount","nonces","nonce","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","quotient","toString","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","then","signature","v","r","s","catch","code","field","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransactionWithType","onRemove","currencyAmountA","currencyAmountB","routerContract","currencyBIsETH","oneCurrencyIsETH","APPROVED","methodNames","args","Promise","all","map","methodName","estimateGas","console","safeGasEstimates","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","summary","symbol","arbitrary","poolAddress","token_1","token_2","remove_liquidity_method","divide","hash","err","e","cause","extra","includes","usdPrices","estimatedUsdCurrencyA","parseFloat","estimatedUsdCurrencyB","pendingText","liquidityPercentChangeCallback","handleDismissConfirmation","Number","parseInt","innerLiquidityPercentage","setInnerLiquidityPercentage","modalHeader","marginTop","subText","modalBottom","paddingBottom","text","decimals","alignItems","gap","marginBottom","borderBottom","border","paddingTop","display","position","NOT_APPROVED","PENDING"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/RemoveLiquidity/TokenPair.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Fraction, Percent, Token, WETH } from '@kyberswap/ks-sdk-core'\nimport { Trans, t } from '@lingui/macro'\nimport { captureException } from '@sentry/react'\nimport JSBI from 'jsbi'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Flex, Text } from 'rebass'\n\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\nimport { BlackCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport CurrentPrice from 'components/CurrentPrice'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport Loader from 'components/Loader'\nimport Row, { AutoRow, RowBetween, RowFixed } from 'components/Row'\nimport Slider from 'components/Slider'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport { Dots } from 'components/swap/styleds'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { nativeOnChain } from 'constants/tokens'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { usePairContract } from 'hooks/useContract'\nimport useIsArgentWallet from 'hooks/useIsArgentWallet'\nimport useTheme from 'hooks/useTheme'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks'\nimport { Field } from 'state/burn/actions'\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from 'state/burn/hooks'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { StyledInternalLink, TYPE, UppercaseText } from 'theme'\nimport {\n  calculateGasMargin,\n  calculateSlippageAmount,\n  formattedNum,\n  getDynamicFeeRouterContract,\n  getOldStaticFeeRouterContract,\n  getStaticFeeRouterContract,\n} from 'utils'\nimport { currencyId } from 'utils/currencyId'\nimport { formatJSBIValue } from 'utils/formatBalance'\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler'\n\nimport { Wrapper } from '../Pool/styleds'\nimport {\n  CurrentPriceWrapper,\n  DetailBox,\n  DetailWrapper,\n  FirstColumn,\n  GridColumn,\n  MaxButton,\n  ModalDetailWrapper,\n  SecondColumn,\n  TokenWrapper,\n} from './styled'\n\nexport default function TokenPair({\n  currencyIdA,\n  currencyIdB,\n  pairAddress,\n}: {\n  currencyIdA: string\n  currencyIdB: string\n  pairAddress: string\n}) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const nativeA = currencyA as Currency\n  const nativeB = currencyB as Currency\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\n\n  const currencyAIsETHER = !!(chainId && currencyA && currencyA.isNative)\n  const currencyAIsWETH = !!(chainId && currencyA && currencyA.equals(WETH[chainId]))\n  const currencyBIsETHER = !!(chainId && currencyB && currencyB.isNative)\n  const currencyBIsWETH = !!(chainId && currencyB && currencyB.equals(WETH[chainId]))\n\n  const theme = useTheme()\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, userLiquidity, parsedAmounts, amountsMin, price, error, isStaticFeePair, isOldStaticFeeContract } =\n    useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined, pairAddress)\n  const contractAddress = chainId\n    ? isStaticFeePair\n      ? isOldStaticFeeContract\n        ? NETWORKS_INFO[chainId].classic.oldStatic?.router\n        : NETWORKS_INFO[chainId].classic.static.router\n      : NETWORKS_INFO[chainId].classic.dynamic?.router\n    : undefined\n  const amp = pair?.amp || JSBI.BigInt(0)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n  const [removeLiquidityError, setRemoveLiquidityError] = useState<string>('')\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], contractAddress)\n\n  // if user liquidity change => remove signature\n  useEffect(() => {\n    setSignatureData(null)\n    // eslint-disable-next-line\n  }, [userLiquidity?.toExact()])\n\n  const isArgentWallet = useIsArgentWallet()\n\n  async function onAttemptToApprove() {\n    if (!chainId) throw new Error('missing chain')\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    if (isArgentWallet) {\n      return approveCallback()\n    }\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ]\n    const domain = {\n      name: isStaticFeePair ? 'KyberSwap LP' : 'KyberDMM LP',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address,\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ]\n    const message = {\n      owner: account,\n      TransactionErrorContent,\n      spender: contractAddress,\n      value: liquidityAmount.quotient.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber(),\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: 'Permit',\n      message,\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then(signature => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber(),\n        })\n      })\n      .catch(error => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, typedValue)\n    },\n    [_onUserInput],\n  )\n\n  const onLiquidityInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n    [onUserInput],\n  )\n  const onCurrencyAInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\n    [onUserInput],\n  )\n  const onCurrencyBInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\n    [onUserInput],\n  )\n\n  // tx sending\n  const addTransactionWithType = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const routerContract = isStaticFeePair\n      ? isOldStaticFeeContract\n        ? getOldStaticFeeRouterContract(chainId, library, account)\n        : getStaticFeeRouterContract(chainId, library, account)\n      : getDynamicFeeRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB.isNative\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          pairAddress,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          pairAddress,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          pairAddress,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          pairAddress,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map(methodName =>\n        routerContract.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch(error => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          }),\n      ),\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate =>\n      BigNumber.isBigNumber(safeGasEstimate),\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await routerContract[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          if (!!currencyA && !!currencyB) {\n            setAttemptingTxn(false)\n\n            addTransactionWithType(response, {\n              type: 'Remove liquidity',\n              summary:\n                parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) +\n                ' ' +\n                (currencyAIsWETH ? nativeOnChain(chainId).symbol : currencyA.symbol) +\n                ' and ' +\n                parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) +\n                ' ' +\n                (currencyBIsWETH ? nativeOnChain(chainId).symbol : currencyB.symbol),\n              arbitrary: {\n                poolAddress: pairAddress,\n                token_1: currencyA.symbol,\n                token_2: currencyB.symbol,\n                remove_liquidity_method: 'token pair',\n                amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\n              },\n            })\n\n            setTxHash(response.hash)\n          }\n        })\n        .catch((err: Error) => {\n          setAttemptingTxn(false)\n          const e = new Error('Remove Liquidity Error', { cause: err })\n          e.name = 'RemoveLiquidityError'\n          captureException(e, { extra: { args } })\n          // we only care if the error is something _other_ than the user rejected the tx\n          if ((err as any)?.code !== 4001) {\n            console.error(err)\n          }\n\n          if (err.message.includes('INSUFFICIENT')) {\n            setRemoveLiquidityError(t`Insufficient liquidity available. Please reload page and try again!`)\n          } else {\n            setRemoveLiquidityError(err?.message)\n          }\n        })\n    }\n  }\n\n  const usdPrices = useTokensPrice([tokenA, tokenB])\n\n  const estimatedUsdCurrencyA =\n    parsedAmounts[Field.CURRENCY_A] && usdPrices[0]\n      ? parseFloat((parsedAmounts[Field.CURRENCY_A] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[0]\n      : 0\n\n  const estimatedUsdCurrencyB =\n    parsedAmounts[Field.CURRENCY_B] && usdPrices[1]\n      ? parseFloat((parsedAmounts[Field.CURRENCY_B] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[1]\n      : 0\n\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    nativeA?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${nativeB?.symbol}`\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n    setRemoveLiquidityError('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback,\n  )\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\n        <AutoRow gap=\"4px\">\n          <CurrencyLogo currency={currencyA} size={'28px'} />\n          <Text fontSize={32} fontWeight={500}>\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          </Text>\n          <Text fontSize={32} fontWeight={500}>\n            {nativeA?.symbol}\n          </Text>\n          {!!estimatedUsdCurrencyA && (\n            <Text color={theme.subText} marginLeft=\"4px\" fontSize={18} fontWeight={500}>\n              (~{formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined})\n            </Text>\n          )}\n        </AutoRow>\n\n        <AutoRow gap=\"4px\">\n          <CurrencyLogo currency={currencyB} size={'28px'} />\n          <Text fontSize={32} fontWeight={500}>\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n          </Text>\n          <Text fontSize={32} fontWeight={500}>\n            {nativeB?.symbol}\n          </Text>\n          {!!estimatedUsdCurrencyB && (\n            <Text color={theme.subText} marginLeft=\"4px\" fontSize={18} fontWeight={500}>\n              (~{formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined})\n            </Text>\n          )}\n        </AutoRow>\n\n        <TYPE.italic fontSize={12} fontWeight={400} color={theme.subText} textAlign=\"left\">\n          {t`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <ModalDetailWrapper>\n          {pair && (\n            <>\n              <CurrentPriceWrapper style={{ paddingBottom: '8px' }}>\n                <TYPE.subHeader fontSize={14} fontWeight={400} color={theme.subText}>\n                  <Trans>Current Price</Trans>\n                </TYPE.subHeader>\n                <TYPE.black fontSize={14} fontWeight={400}>\n                  <CurrentPrice price={price} />\n                </TYPE.black>\n              </CurrentPriceWrapper>\n\n              <RowBetween style={{ paddingBottom: '12px' }}>\n                <Text color={theme.subText} fontSize={14} fontWeight={400}>\n                  <Trans>LP Tokens Removed</Trans>\n                </Text>\n\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\n                  <Text color={theme.text} fontSize={14} fontWeight={400}>\n                    {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n                  </Text>\n                </RowFixed>\n              </RowBetween>\n\n              {amountsMin && (\n                <>\n                  <RowBetween style={{ paddingBottom: '12px' }}>\n                    <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\n                      <Trans>Minimum Received</Trans>\n                    </TYPE.subHeader>\n\n                    <TokenWrapper>\n                      <CurrencyLogo currency={currencyA} size=\"16px\" />\n                      <TYPE.black fontWeight={400} fontSize={14}>\n                        {formatJSBIValue(amountsMin[Field.CURRENCY_A], currencyA?.decimals)} {nativeA?.symbol}\n                      </TYPE.black>\n                    </TokenWrapper>\n                  </RowBetween>\n\n                  <RowBetween>\n                    <div />\n\n                    <TokenWrapper>\n                      <CurrencyLogo currency={currencyB} size=\"16px\" />\n                      <TYPE.black fontWeight={400} fontSize={14}>\n                        {formatJSBIValue(amountsMin[Field.CURRENCY_B], currencyB?.decimals)} {nativeB?.symbol}\n                      </TYPE.black>\n                    </TokenWrapper>\n                  </RowBetween>\n                </>\n              )}\n            </>\n          )}\n        </ModalDetailWrapper>\n\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          <Text fontWeight={500} fontSize={20}>\n            <Trans>Confirm</Trans>\n          </Text>\n        </ButtonPrimary>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash ? txHash : ''}\n          content={() =>\n            removeLiquidityError ? (\n              <TransactionErrorContent onDismiss={handleDismissConfirmation} message={removeLiquidityError} />\n            ) : (\n              <ConfirmationModalContent\n                title={'You will receive'}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )\n          }\n          pendingText={pendingText}\n        />\n        <AutoColumn gap=\"md\">\n          <GridColumn>\n            <FirstColumn>\n              <BlackCard padding=\"1rem\" borderRadius=\"4px\">\n                <AutoColumn gap=\"1rem\">\n                  <RowBetween>\n                    <Text fontSize={12} fontWeight={500}>\n                      <Trans>Amount</Trans>\n                    </Text>\n\n                    <Text fontSize={12} fontWeight={500}>\n                      <Trans>Balance</Trans>: {!userLiquidity ? <Loader /> : userLiquidity?.toSignificant(6)} LP Tokens\n                    </Text>\n                  </RowBetween>\n                  <Row style={{ alignItems: 'flex-end' }}>\n                    <Text fontSize={72} fontWeight={500}>\n                      {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                    </Text>\n                  </Row>\n\n                  <>\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} size={18} />\n                    <RowBetween style={{ gap: '4px' }}>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>25%</MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>50%</MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>75%</MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}>\n                        <Trans>Max</Trans>\n                      </MaxButton>\n                    </RowBetween>\n                  </>\n                </AutoColumn>\n              </BlackCard>\n\n              {chainId && pair && (\n                <CurrencyInputPanel\n                  hideBalance\n                  hideLogo\n                  value={formattedAmounts[Field.LIQUIDITY]}\n                  onUserInput={onLiquidityInput}\n                  showMaxButton={false}\n                  disableCurrencySelect\n                  currency={\n                    new Token(\n                      chainId,\n                      pair.liquidityToken?.address,\n                      pair.liquidityToken?.decimals,\n                      `LP Tokens`,\n                      `LP Tokens`,\n                    )\n                  }\n                  id=\"liquidity-amount\"\n                />\n              )}\n            </FirstColumn>\n\n            <SecondColumn>\n              <>\n                <div style={{ marginBottom: '1.5rem' }}>\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.CURRENCY_A]}\n                    onUserInput={onCurrencyAInput}\n                    showMaxButton={false}\n                    currency={currencyA}\n                    label={t`Output`}\n                    onCurrencySelect={() => null}\n                    disableCurrencySelect={true}\n                    id=\"remove-liquidity-tokena\"\n                    estimatedUsd={formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined}\n                  />\n                  <Flex justifyContent=\"flex-end\" alignItems=\"center\" marginTop=\"0.5rem\">\n                    {pairAddress && chainId && (currencyAIsETHER || currencyAIsWETH) && (\n                      <StyledInternalLink\n                        replace\n                        to={`/remove/${\n                          currencyAIsETHER ? currencyId(WETH[chainId], chainId) : nativeOnChain(chainId).symbol\n                        }/${currencyIdB}/${pairAddress}`}\n                      >\n                        {currencyAIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\n                      </StyledInternalLink>\n                    )}\n                  </Flex>\n                </div>\n\n                <div>\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.CURRENCY_B]}\n                    onUserInput={onCurrencyBInput}\n                    showMaxButton={false}\n                    currency={currencyB}\n                    onCurrencySelect={() => null}\n                    disableCurrencySelect={true}\n                    id=\"remove-liquidity-tokenb\"\n                    estimatedUsd={formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined}\n                  />\n                  <Flex justifyContent=\"flex-end\" alignItems=\"center\" marginTop=\"0.5rem\">\n                    {pairAddress && chainId && (currencyBIsWETH || currencyBIsETHER) && (\n                      <StyledInternalLink\n                        replace\n                        to={`/remove/${currencyIdA}/${\n                          currencyBIsETHER ? currencyId(WETH[chainId], chainId) : nativeOnChain(chainId).symbol\n                        }/${pairAddress}`}\n                      >\n                        {currencyBIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\n                      </StyledInternalLink>\n                    )}\n                  </Flex>\n                </div>\n              </>\n\n              {pair && (\n                <DetailWrapper>\n                  <AutoRow justify=\"space-between\" gap=\"4px\" style={{ paddingBottom: '12px' }}>\n                    <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\n                      <UppercaseText>\n                        <Trans>Minimum Received</Trans>\n                      </UppercaseText>\n                    </TYPE.subHeader>\n                  </AutoRow>\n\n                  {amountsMin && (\n                    <DetailBox style={{ paddingBottom: '12px', borderBottom: `1px dashed ${theme.border}` }}>\n                      <TokenWrapper>\n                        <CurrencyLogo currency={currencyA} size=\"16px\" />\n                        <TYPE.black fontWeight={400} fontSize={14}>\n                          {formatJSBIValue(amountsMin[Field.CURRENCY_A], currencyA?.decimals)} {nativeA?.symbol}\n                        </TYPE.black>\n                      </TokenWrapper>\n\n                      <TokenWrapper>\n                        <CurrencyLogo currency={currencyB} size=\"16px\" />\n                        <TYPE.black fontWeight={400} fontSize={14}>\n                          {formatJSBIValue(amountsMin[Field.CURRENCY_B], currencyB?.decimals)} {nativeB?.symbol}\n                        </TYPE.black>\n                      </TokenWrapper>\n                    </DetailBox>\n                  )}\n\n                  <DetailBox style={{ paddingTop: '12px' }}>\n                    <TYPE.subHeader\n                      fontWeight={500}\n                      fontSize={12}\n                      color={theme.subText}\n                      style={{ display: 'flex', alignItems: 'center' }}\n                    >\n                      <UppercaseText>\n                        <Trans>Current Price</Trans>\n                      </UppercaseText>\n                    </TYPE.subHeader>\n                    <TYPE.black fontWeight={400} fontSize={14}>\n                      <CurrentPrice price={price} />\n                    </TYPE.black>\n                  </DetailBox>\n                </DetailWrapper>\n              )}\n\n              <div style={{ position: 'relative' }}>\n                {!account ? (\n                  <ButtonLight onClick={toggleWalletModal}>\n                    <Trans>Connect Wallet</Trans>\n                  </ButtonLight>\n                ) : (\n                  <RowBetween>\n                    {!error && (\n                      <ButtonConfirmed\n                        onClick={onAttemptToApprove}\n                        confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                        disabled={\n                          approval !== ApprovalState.NOT_APPROVED ||\n                          signatureData !== null ||\n                          !userLiquidity ||\n                          userLiquidity.equalTo('0')\n                        }\n                        margin=\"0 1rem 0 0\"\n                        fontWeight={500}\n                        fontSize={16}\n                      >\n                        {approval === ApprovalState.PENDING ? (\n                          <Dots>\n                            <Trans>Approving</Trans>\n                          </Dots>\n                        ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                          t`Approved`\n                        ) : (\n                          t`Approve`\n                        )}\n                      </ButtonConfirmed>\n                    )}\n                    <ButtonError\n                      onClick={() => {\n                        setShowConfirm(true)\n                      }}\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                      error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                    >\n                      <Text fontSize={16} fontWeight={500}>\n                        {error || t`Remove`}\n                      </Text>\n                    </ButtonError>\n                  </RowBetween>\n                )}\n              </div>\n            </SecondColumn>\n          </GridColumn>\n        </AutoColumn>\n      </Wrapper>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}