{"ast":null,"code":"import _createClass from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\n\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /*#__PURE__*/function (_Error) {\n  _inherits(SentryError, _Error);\n\n  var _super = _createSuper(SentryError);\n\n  /** Display name of this error instance. */\n  function SentryError(message) {\n    var _this;\n\n    var logLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warn';\n\n    _classCallCheck(this, SentryError);\n\n    _this = _super.call(this, message);\n    _this.message = message;\n    ;\n    _this.name = (this instanceof SentryError ? this.constructor : void 0).prototype.constructor.name; // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof SentryError ? this.constructor : void 0).prototype);\n    _this.logLevel = logLevel;\n    return _this;\n  }\n\n  return _createClass(SentryError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { SentryError };","map":null,"metadata":{},"sourceType":"module"}