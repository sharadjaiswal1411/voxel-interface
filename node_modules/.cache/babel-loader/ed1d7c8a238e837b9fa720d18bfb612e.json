{"ast":null,"code":"import { ETHER_ADDRESS } from 'constants/index';\nimport { nativeOnChain } from 'constants/tokens';\nimport { getTokenLogoURL } from 'utils';\nimport { currencyId } from 'utils/currencyId';\nexport var isFavoritePair = function isFavoritePair(favoritePairs, item) {\n  return favoritePairs.some(function (_ref) {\n    var tokenIn = _ref.tokenIn,\n        tokenOut = _ref.tokenOut;\n    return item.tokenIn === tokenIn && item.tokenOut === tokenOut;\n  });\n}; // address is lowercase\n\nvar isTokenInWhiteList = function isTokenInWhiteList(activeTokens, address) {\n  return address.toLowerCase() === ETHER_ADDRESS.toLowerCase() ? true : !!activeTokens[address];\n}; // at least tokenIn or tokeOut not in whitelist\n\n\nexport var isActivePair = function isActivePair(activeTokens, pair) {\n  return isTokenInWhiteList(activeTokens, pair.tokenIn) && isTokenInWhiteList(activeTokens, pair.tokenOut);\n};\nexport var findLogoAndSortPair = function findLogoAndSortPair(activeTokens, list, chainId) {\n  return list.map(function (token) {\n    // find logo\n    if (!token.tokenInImgUrl) {\n      token.tokenInImgUrl = getTokenLogoURL(token.tokenIn, chainId);\n    }\n\n    if (!token.tokenOutImgUrl) {\n      token.tokenOutImgUrl = getTokenLogoURL(token.tokenOut, chainId);\n    }\n\n    return token;\n  }).sort(function (a, b) {\n    // sort token pair in whitelist appear first\n    var activeA = [isTokenInWhiteList(activeTokens, a.tokenIn), isTokenInWhiteList(activeTokens, a.tokenOut)];\n    var activeB = [isTokenInWhiteList(activeTokens, b.tokenIn), isTokenInWhiteList(activeTokens, b.tokenOut)];\n    return activeA.filter(Boolean).length > activeB.filter(Boolean).length ? -1 : 1;\n  });\n};\nexport var getAddressParam = function getAddressParam(address, chainId) {\n  return address.toLowerCase() === ETHER_ADDRESS.toLowerCase() && chainId ? currencyId(nativeOnChain(chainId), chainId) : address;\n};","map":{"version":3,"names":["ETHER_ADDRESS","nativeOnChain","getTokenLogoURL","currencyId","isFavoritePair","favoritePairs","item","some","tokenIn","tokenOut","isTokenInWhiteList","activeTokens","address","toLowerCase","isActivePair","pair","findLogoAndSortPair","list","chainId","map","token","tokenInImgUrl","tokenOutImgUrl","sort","a","b","activeA","activeB","filter","Boolean","length","getAddressParam"],"sources":["/Applications/XAMPP/voxel-interface/src/components/swapv2/PairSuggestion/utils.ts"],"sourcesContent":["import { ChainId } from '@kyberswap/ks-sdk-core'\n\nimport { ETHER_ADDRESS } from 'constants/index'\nimport { nativeOnChain } from 'constants/tokens'\nimport { AllTokenType } from 'hooks/Tokens'\nimport { getTokenLogoURL } from 'utils'\nimport { currencyId } from 'utils/currencyId'\n\nimport { SuggestionPairData } from './request'\n\nexport const isFavoritePair = (favoritePairs: SuggestionPairData[], item: SuggestionPairData) => {\n  return favoritePairs.some(({ tokenIn, tokenOut }) => item.tokenIn === tokenIn && item.tokenOut === tokenOut)\n}\n\n// address is lowercase\nconst isTokenInWhiteList = (activeTokens: AllTokenType, address: string) =>\n  address.toLowerCase() === ETHER_ADDRESS.toLowerCase() ? true : !!activeTokens[address]\n\n// at least tokenIn or tokeOut not in whitelist\nexport const isActivePair = (activeTokens: AllTokenType, pair: SuggestionPairData) =>\n  isTokenInWhiteList(activeTokens, pair.tokenIn) && isTokenInWhiteList(activeTokens, pair.tokenOut)\n\nexport const findLogoAndSortPair = (\n  activeTokens: AllTokenType,\n  list: SuggestionPairData[],\n  chainId: ChainId | undefined,\n) => {\n  return list\n    .map(token => {\n      // find logo\n      if (!token.tokenInImgUrl) {\n        token.tokenInImgUrl = getTokenLogoURL(token.tokenIn, chainId)\n      }\n      if (!token.tokenOutImgUrl) {\n        token.tokenOutImgUrl = getTokenLogoURL(token.tokenOut, chainId)\n      }\n      return token\n    })\n    .sort((a, b) => {\n      // sort token pair in whitelist appear first\n      const activeA = [isTokenInWhiteList(activeTokens, a.tokenIn), isTokenInWhiteList(activeTokens, a.tokenOut)]\n      const activeB = [isTokenInWhiteList(activeTokens, b.tokenIn), isTokenInWhiteList(activeTokens, b.tokenOut)]\n      return activeA.filter(Boolean).length > activeB.filter(Boolean).length ? -1 : 1\n    })\n}\n\nexport const getAddressParam = (address: string, chainId: ChainId | undefined) =>\n  address.toLowerCase() === ETHER_ADDRESS.toLowerCase() && chainId\n    ? currencyId(nativeOnChain(chainId), chainId)\n    : address\n"],"mappings":"AAEA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAIA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,aAAD,EAAsCC,IAAtC,EAAmE;EAC/F,OAAOD,aAAa,CAACE,IAAd,CAAmB;IAAA,IAAGC,OAAH,QAAGA,OAAH;IAAA,IAAYC,QAAZ,QAAYA,QAAZ;IAAA,OAA2BH,IAAI,CAACE,OAAL,KAAiBA,OAAjB,IAA4BF,IAAI,CAACG,QAAL,KAAkBA,QAAzE;EAAA,CAAnB,CAAP;AACD,CAFM,C,CAIP;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,YAAD,EAA6BC,OAA7B;EAAA,OACzBA,OAAO,CAACC,WAAR,OAA0Bb,aAAa,CAACa,WAAd,EAA1B,GAAwD,IAAxD,GAA+D,CAAC,CAACF,YAAY,CAACC,OAAD,CADpD;AAAA,CAA3B,C,CAGA;;;AACA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACH,YAAD,EAA6BI,IAA7B;EAAA,OAC1BL,kBAAkB,CAACC,YAAD,EAAeI,IAAI,CAACP,OAApB,CAAlB,IAAkDE,kBAAkB,CAACC,YAAD,EAAeI,IAAI,CAACN,QAApB,CAD1C;AAAA,CAArB;AAGP,OAAO,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCL,YADiC,EAEjCM,IAFiC,EAGjCC,OAHiC,EAI9B;EACH,OAAOD,IAAI,CACRE,GADI,CACA,UAAAC,KAAK,EAAI;IACZ;IACA,IAAI,CAACA,KAAK,CAACC,aAAX,EAA0B;MACxBD,KAAK,CAACC,aAAN,GAAsBnB,eAAe,CAACkB,KAAK,CAACZ,OAAP,EAAgBU,OAAhB,CAArC;IACD;;IACD,IAAI,CAACE,KAAK,CAACE,cAAX,EAA2B;MACzBF,KAAK,CAACE,cAAN,GAAuBpB,eAAe,CAACkB,KAAK,CAACX,QAAP,EAAiBS,OAAjB,CAAtC;IACD;;IACD,OAAOE,KAAP;EACD,CAVI,EAWJG,IAXI,CAWC,UAACC,CAAD,EAAIC,CAAJ,EAAU;IACd;IACA,IAAMC,OAAO,GAAG,CAAChB,kBAAkB,CAACC,YAAD,EAAea,CAAC,CAAChB,OAAjB,CAAnB,EAA8CE,kBAAkB,CAACC,YAAD,EAAea,CAAC,CAACf,QAAjB,CAAhE,CAAhB;IACA,IAAMkB,OAAO,GAAG,CAACjB,kBAAkB,CAACC,YAAD,EAAec,CAAC,CAACjB,OAAjB,CAAnB,EAA8CE,kBAAkB,CAACC,YAAD,EAAec,CAAC,CAAChB,QAAjB,CAAhE,CAAhB;IACA,OAAOiB,OAAO,CAACE,MAAR,CAAeC,OAAf,EAAwBC,MAAxB,GAAiCH,OAAO,CAACC,MAAR,CAAeC,OAAf,EAAwBC,MAAzD,GAAkE,CAAC,CAAnE,GAAuE,CAA9E;EACD,CAhBI,CAAP;AAiBD,CAtBM;AAwBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACnB,OAAD,EAAkBM,OAAlB;EAAA,OAC7BN,OAAO,CAACC,WAAR,OAA0Bb,aAAa,CAACa,WAAd,EAA1B,IAAyDK,OAAzD,GACIf,UAAU,CAACF,aAAa,CAACiB,OAAD,CAAd,EAAyBA,OAAzB,CADd,GAEIN,OAHyB;AAAA,CAAxB"},"metadata":{},"sourceType":"module"}