{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _toConsumableArray = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _regeneratorRuntime = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\n\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\n\nvar DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\n\nvar Session_1 = require(\"../relay/Session\");\n\nvar WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\n\nvar util_1 = require(\"../util\");\n\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\n\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nvar JSONRPC_1 = require(\"./JSONRPC\");\n\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\n\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\"; // Indicates chain has been switched by switchEthereumChain or addEthereumChain request\n\nvar HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nvar HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\n\nvar CoinbaseWalletProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(CoinbaseWalletProvider, _safe_event_emitter_);\n\n  var _super = _createSuper(CoinbaseWalletProvider);\n\n  function CoinbaseWalletProvider(options) {\n    var _this;\n\n    _classCallCheck(this, CoinbaseWalletProvider);\n\n    var _a, _b;\n\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send.bind(_assertThisInitialized(_this));\n    _this._sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this.diagnostic = options.diagnosticLogger;\n    _this.reloadOnDisconnect = true;\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    _this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    _this.qrUrl = options.qrUrl;\n    _this.supportsAddressSwitching = options.supportsAddressSwitching;\n\n    var chainId = _this.getChainId();\n\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16)); // indicate that we've connected, for EIP-1193 compliance\n\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n\n    var cachedAddresses = _this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n\n      if (event.data.data.action === \"defaultChainChanged\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n    return _this;\n  }\n\n  _createClass(CoinbaseWalletProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      // backward compatibility\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"isChainOverridden\",\n    get: function get() {\n      return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    },\n    set: function set(value) {\n      this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n  }, {\n    key: \"disableReloadOnDisconnect\",\n    value: function disableReloadOnDisconnect() {\n      this.reloadOnDisconnect = false;\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      if (this.isChainOverridden) return;\n      this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n      var hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n      if (hasChainSwitched && fromRelay) return;\n\n      if (fromRelay) {\n        this.isChainOverridden = true;\n      }\n\n      this.jsonRpcUrl = jsonRpcUrl; // emit chainChanged event if necessary\n\n      var originalChainId = this.getChainId();\n\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, address, symbol, decimals, image, chainId) {\n        var relay, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context.sent;\n                _context.next = 5;\n                return relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n\n              case 5:\n                result = _context.sent;\n                return _context.abrupt(\"return\", !!result.result);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function watchAsset(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _watchAsset.apply(this, arguments);\n      }\n\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, isWhitelistedNetworkOrStandalone, res;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", false);\n\n              case 2:\n                _context2.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context2.sent;\n                isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n\n                if (!(!this._isAuthorized() && !isWhitelistedNetworkOrStandalone)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 9;\n                return relay.requestEthereumAccounts().promise;\n\n              case 9:\n                _context2.next = 11;\n                return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n\n              case 11:\n                res = _context2.sent;\n\n                if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                  this.updateProviderInfo(rpcUrls[0], chainId, false);\n                }\n\n                return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addEthereumChain(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context3.sent;\n                _context3.next = 7;\n                return relay.switchEthereumChain(chainId.toString(10)).promise;\n\n              case 7:\n                res = _context3.sent;\n\n                if (!res.errorCode) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: res.errorCode\n                });\n\n              case 10:\n                switchResponse = res.result;\n\n                if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n                  this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n                }\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function switchEthereumChain(_x13) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _a;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::enable\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n                });\n\n                if (!(this._addresses.length > 0)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n\n              case 3:\n                _context4.next = 5;\n                return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n\n              case 5:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var relay;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context5.sent;\n                relay.resetAndReload();\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      } // send(JSONRPCRequest): JSONRPCResponse\n\n\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function () {\n      var _sendAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request, callback) {\n        var arrayCb, cb;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(typeof callback !== \"function\")) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                throw new Error(\"callback is required\");\n\n              case 2:\n                if (!Array.isArray(request)) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                arrayCb = callback;\n\n                this._sendMultipleRequestsAsync(request).then(function (responses) {\n                  return arrayCb(null, responses);\n                }).catch(function (err) {\n                  return arrayCb(err, null);\n                });\n\n                return _context6.abrupt(\"return\");\n\n              case 6:\n                // send(JSONRPCRequest, callback): void\n                cb = callback;\n                return _context6.abrupt(\"return\", this._sendRequestAsync(request).then(function (response) {\n                  return cb(null, response);\n                }).catch(function (err) {\n                  return cb(err, null);\n                }));\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function sendAsync(_x14, _x15) {\n        return _sendAsync.apply(this, arguments);\n      }\n\n      return sendAsync;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"Expected a single, non-array, object argument.\",\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.method' must be a non-empty string.\",\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.params' must be an object or array if provided.\",\n                  data: args\n                });\n\n              case 7:\n                newParams = params === undefined ? [] : params; // Coinbase Wallet Requests\n\n                id = this._relayEventManager.makeRequestId();\n                _context7.next = 11;\n                return this._sendRequestAsync({\n                  method: method,\n                  params: newParams,\n                  jsonrpc: \"2.0\",\n                  id: id\n                });\n\n              case 11:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", result.result);\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function request(_x16) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(match) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context8.sent;\n                _context8.next = 5;\n                return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n\n              case 5:\n                res = _context8.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context8.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function scanQRCode(_x17) {\n        return _scanQRCode.apply(this, arguments);\n      }\n\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(data, action) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context9.sent;\n                _context9.next = 5;\n                return relay.genericRequest(data, action).promise;\n\n              case 5:\n                res = _context9.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context9.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function genericRequest(_x18, _x19) {\n        return _genericRequest.apply(this, arguments);\n      }\n\n      return genericRequest;\n    }()\n  }, {\n    key: \"selectProvider\",\n    value: function () {\n      var _selectProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(providerOptions) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context10.sent;\n                _context10.next = 5;\n                return relay.selectProvider(providerOptions).promise;\n\n              case 5:\n                res = _context10.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context10.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context10.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function selectProvider(_x20) {\n        return _selectProvider.apply(this, arguments);\n      }\n\n      return selectProvider;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n\n      if (response.result === undefined) {\n        throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses, isDisconnect) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n\n      if (this._addresses.length > 0 && this.supportsAddressSwitching === false && !isDisconnect) {\n        /**\n         * The extension currently doesn't support switching selected wallet index\n         * make sure walletlink doesn't update it's address in this case\n         */\n        return;\n      }\n\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n\n      this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request) {\n        var method, params, relay;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                method = request.method;\n                params = request.params || [];\n                _context11.t0 = method;\n                _context11.next = _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary ? 17 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n                break;\n\n              case 5:\n                return _context11.abrupt(\"return\", this._eth_requestAccounts());\n\n              case 6:\n                return _context11.abrupt(\"return\", this._eth_sign(params));\n\n              case 7:\n                return _context11.abrupt(\"return\", this._eth_ecRecover(params));\n\n              case 8:\n                return _context11.abrupt(\"return\", this._personal_sign(params));\n\n              case 9:\n                return _context11.abrupt(\"return\", this._personal_ecRecover(params));\n\n              case 10:\n                return _context11.abrupt(\"return\", this._eth_signTransaction(params));\n\n              case 11:\n                return _context11.abrupt(\"return\", this._eth_sendRawTransaction(params));\n\n              case 12:\n                return _context11.abrupt(\"return\", this._eth_sendTransaction(params));\n\n              case 13:\n                return _context11.abrupt(\"return\", this._eth_signTypedData_v1(params));\n\n              case 14:\n                return _context11.abrupt(\"return\", this._throwUnsupportedMethodError());\n\n              case 15:\n                return _context11.abrupt(\"return\", this._eth_signTypedData_v3(params));\n\n              case 16:\n                return _context11.abrupt(\"return\", this._eth_signTypedData_v4(params));\n\n              case 17:\n                return _context11.abrupt(\"return\", this._cbwallet_arbitrary(params));\n\n              case 18:\n                return _context11.abrupt(\"return\", this._wallet_addEthereumChain(params));\n\n              case 19:\n                return _context11.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n\n              case 20:\n                return _context11.abrupt(\"return\", this._wallet_watchAsset(params));\n\n              case 21:\n                _context11.next = 23;\n                return this.initializeRelay();\n\n              case 23:\n                relay = _context11.sent;\n                return _context11.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n\n              case 25:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _handleAsynchronousMethods(_x21) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var addressStr = (0, util_1.ensureAddressString)(addressString);\n\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n\n        return lowercaseAddresses.includes(addressStr);\n      } catch (_a) {}\n\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      var _a;\n\n      if (!this._isKnownAddress(addressString)) {\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n\n      this._ensureKnownAddress(fromAddress);\n\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_isAuthorized\",\n    value: function _isAuthorized() {\n      return this._addresses.length > 0;\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (!this._isAuthorized()) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this._ensureKnownAddress(address);\n\n                _context12.prev = 1;\n                _context12.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context12.sent;\n                _context12.next = 7;\n                return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n\n              case 7:\n                res = _context12.sent;\n                return _context12.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 11:\n                _context12.prev = 11;\n                _context12.t0 = _context12[\"catch\"](1);\n\n                if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                  _context12.next = 15;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n\n              case 15:\n                throw _context12.t0;\n\n              case 16:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[1, 11]]);\n      }));\n\n      function _signEthereumMessage(_x22, _x23, _x24, _x25) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context13.sent;\n                _context13.next = 5;\n                return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n\n              case 5:\n                res = _context13.sent;\n                return _context13.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _ethereumAddressFromSignedMessage(_x26, _x27, _x28) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var _a, res, relay;\n\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::_eth_requestAccounts\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n                });\n\n                if (!(this._addresses.length > 0)) {\n                  _context14.next = 3;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", Promise.resolve({\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                }));\n\n              case 3:\n                _context14.prev = 3;\n                _context14.next = 6;\n                return this.initializeRelay();\n\n              case 6:\n                relay = _context14.sent;\n                _context14.next = 9;\n                return relay.requestEthereumAccounts().promise;\n\n              case 9:\n                res = _context14.sent;\n                _context14.next = 17;\n                break;\n\n              case 12:\n                _context14.prev = 12;\n                _context14.t0 = _context14[\"catch\"](3);\n\n                if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                  _context14.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n\n              case 16:\n                throw _context14.t0;\n\n              case 17:\n                if (res.result) {\n                  _context14.next = 19;\n                  break;\n                }\n\n                throw new Error(\"accounts received is empty\");\n\n              case 19:\n                this._setAddresses(res.result);\n\n                return _context14.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                });\n\n              case 21:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[3, 12]]);\n      }));\n\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context15.prev = 2;\n                _context15.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context15.sent;\n                _context15.next = 8;\n                return relay.signEthereumTransaction(tx).promise;\n\n              case 8:\n                res = _context15.sent;\n                return _context15.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context15.prev = 12;\n                _context15.t0 = _context15[\"catch\"](2);\n\n                if (!(typeof _context15.t0.message === \"string\" && _context15.t0.message.match(/(denied|rejected)/i))) {\n                  _context15.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context15.t0;\n\n              case 17:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[2, 12]]);\n      }));\n\n      function _eth_signTransaction(_x29) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n                _context16.next = 3;\n                return this.initializeRelay();\n\n              case 3:\n                relay = _context16.sent;\n                _context16.next = 6;\n                return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n\n              case 6:\n                res = _context16.sent;\n                return _context16.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 8:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _eth_sendRawTransaction(_x30) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context17.prev = 2;\n                _context17.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context17.sent;\n                _context17.next = 8;\n                return relay.signAndSubmitEthereumTransaction(tx).promise;\n\n              case 8:\n                res = _context17.sent;\n                return _context17.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context17.prev = 12;\n                _context17.t0 = _context17[\"catch\"](2);\n\n                if (!(typeof _context17.t0.message === \"string\" && _context17.t0.message.match(/(denied|rejected)/i))) {\n                  _context17.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context17.t0;\n\n              case 17:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[2, 12]]);\n      }));\n\n      function _eth_sendTransaction(_x31) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                this._requireAuthorization();\n\n                typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n                address = (0, util_1.ensureAddressString)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context18.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function _eth_signTypedData_v1(_x32) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context19.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function _eth_signTypedData_v3(_x33) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context20.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function _eth_signTypedData_v4(_x34) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v4;\n    }()\n    /** @deprecated */\n\n  }, {\n    key: \"_cbwallet_arbitrary\",\n    value: function () {\n      var _cbwallet_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var action, data, result;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                action = params[0];\n                data = params[1];\n\n                if (!(typeof data !== \"string\")) {\n                  _context21.next = 4;\n                  break;\n                }\n\n                throw new Error(\"parameter must be a string\");\n\n              case 4:\n                if (!(typeof action !== \"object\" || action === null)) {\n                  _context21.next = 6;\n                  break;\n                }\n\n                throw new Error(\"parameter must be an object\");\n\n              case 6:\n                _context21.next = 8;\n                return this.genericRequest(action, data);\n\n              case 8:\n                result = _context21.sent;\n                return _context21.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: result\n                });\n\n              case 10:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function _cbwallet_arbitrary(_x35) {\n        return _cbwallet_arbitrary2.apply(this, arguments);\n      }\n\n      return _cbwallet_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                request = params[0];\n\n                if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                  _context22.next = 3;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"please pass in at least 1 rpcUrl\"\n                  }\n                });\n\n              case 3:\n                if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                  _context22.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: 0,\n                  message: \"chainName is a required field\"\n                });\n\n              case 5:\n                if (request.nativeCurrency) {\n                  _context22.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: 0,\n                  message: \"nativeCurrency is a required field\"\n                });\n\n              case 7:\n                chainIdNumber = parseInt(request.chainId, 16);\n                _context22.next = 10;\n                return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n\n              case 10:\n                success = _context22.sent;\n\n                if (!success) {\n                  _context22.next = 15;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n\n              case 15:\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"unable to add ethereum chain\"\n                  }\n                });\n\n              case 16:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function _wallet_addEthereumChain(_x36) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(params) {\n        var request;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                request = params[0];\n                _context23.next = 3;\n                return this.switchEthereumChain(parseInt(request.chainId, 16));\n\n              case 3:\n                return _context23.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n\n              case 4:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function _wallet_switchEthereumChain(_x37) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(params) {\n        var request, chainId, _request$options, address, symbol, image, decimals, res;\n\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                request = Array.isArray(params) ? params[0] : params;\n\n                if (request.type) {\n                  _context24.next = 3;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Type is required\"\n                });\n\n              case 3:\n                if (!((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\")) {\n                  _context24.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Asset of type '\".concat(request.type, \"' is not supported\")\n                });\n\n              case 5:\n                if (request === null || request === void 0 ? void 0 : request.options) {\n                  _context24.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Options are required\"\n                });\n\n              case 7:\n                if (request === null || request === void 0 ? void 0 : request.options.address) {\n                  _context24.next = 9;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Address is required\"\n                });\n\n              case 9:\n                chainId = this.getChainId();\n                _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n                _context24.next = 13;\n                return this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n\n              case 13:\n                res = _context24.sent;\n                return _context24.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res\n                });\n\n              case 15:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function _wallet_watchAsset(_x38) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(params) {\n        var param, filterId;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                param = params[0];\n                _context25.next = 3;\n                return this._filterPolyfill.newFilter(param);\n\n              case 3:\n                filterId = _context25.sent;\n                return _context25.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function _eth_newFilter(_x39) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return this._filterPolyfill.newBlockFilter();\n\n              case 2:\n                filterId = _context26.sent;\n                return _context26.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return this._filterPolyfill.newPendingTransactionFilter();\n\n              case 2:\n                filterId = _context27.sent;\n                return _context27.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts, isDisconnect) {\n          return _this5._setAddresses(accounts, isDisconnect);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n        });\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n\n  return CoinbaseWalletProvider;\n}(safe_event_emitter_1.default);\n\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":null,"metadata":{},"sourceType":"script"}