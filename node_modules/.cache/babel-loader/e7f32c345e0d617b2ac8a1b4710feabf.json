{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        activeIndex = swiper.activeIndex;\n    var params = swiper.params.cardsEffect;\n    var _swiper$touchEventsDa = swiper.touchEventsData,\n        startTranslate = _swiper$touchEventsDa.startTranslate,\n        isTouched = _swiper$touchEventsDa.isTouched;\n    var currentTranslate = swiper.translate;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var $slideEl = slides.eq(i);\n      var slideProgress = $slideEl[0].progress;\n      var progress = Math.min(Math.max(slideProgress, -4), 4);\n      var offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(\"translateX(\".concat(swiper.minTranslate(), \"px)\"));\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      var tY = 0;\n      var tZ = -100 * Math.abs(progress);\n      var scale = 1;\n      var rotate = -2 * progress;\n      var tXAdd = 8 - Math.abs(progress) * 0.75;\n      var slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      var isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      var isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n      }\n\n      if (progress < 0) {\n        // next\n        tX = \"calc(\".concat(tX, \"px + (\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else if (progress > 0) {\n        // prev\n        tX = \"calc(\".concat(tX, \"px + (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else {\n        tX = \"\".concat(tX, \"px\");\n      }\n\n      if (!swiper.isHorizontal()) {\n        var prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n      var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(rotate, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n\n      if (params.slideShadows) {\n        // Set shadows\n        var $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformEl = swiper.params.cardsEffect.transformEl;\n    var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformEl: transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return true;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}