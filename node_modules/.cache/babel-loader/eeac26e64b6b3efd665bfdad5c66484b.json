{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/Vesting/ProMMVesting.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { CurrencyAmount } from '@kyberswap/ks-sdk-core';\nimport { BigNumber } from 'ethers';\nimport { Text } from 'rebass';\nimport LocalLoader from 'components/LocalLoader';\nimport useTheme from 'hooks/useTheme';\nimport { usePrommSchedules } from 'state/vesting/hooks';\nimport ScheduleCard from './ScheduleCard';\nimport VestingSummary from './VestingSummary';\nimport { ScheduleGrid } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProMMVesting = function ProMMVesting() {\n  _s();\n\n  var theme = useTheme();\n\n  var _usePrommSchedules = usePrommSchedules(),\n      loading = _usePrommSchedules.loading,\n      schedulesByRewardLocker = _usePrommSchedules.schedulesByRewardLocker;\n\n  var totalHarvested = {\n    value: 0,\n    amountByAddress: {}\n  };\n  var locked = {\n    value: 0,\n    amountByAddress: {}\n  };\n  var unlocked = {\n    value: 0,\n    amountByAddress: {}\n  };\n  var claimed = {\n    value: 0,\n    amountByAddress: {}\n  };\n  var currentTimestamp = Math.floor(+new Date() / 1000);\n  Object.values(schedulesByRewardLocker).forEach(function (schedule) {\n    schedule.forEach(function (item) {\n      var address = item.token.isNative ? item.token.symbol : item.token.address; // total\n\n      var harvested = CurrencyAmount.fromRawAmount(item.token, item.quantity.toString());\n      var harvestedUsd = item.tokenPrice * parseFloat(harvested.toExact());\n      totalHarvested.value += harvestedUsd;\n      if (!totalHarvested.amountByAddress[address]) totalHarvested.amountByAddress[address] = harvested;else totalHarvested.amountByAddress[address] = totalHarvested.amountByAddress[address].add(harvested); // claimed\n\n      var vested = CurrencyAmount.fromRawAmount(item.token, item.vestedQuantity.toString());\n      var vestedUsd = item.tokenPrice * parseFloat(vested.toExact());\n      claimed.value += vestedUsd;\n      if (!claimed.amountByAddress[address]) claimed.amountByAddress[address] = vested;else claimed.amountByAddress[address] = claimed.amountByAddress[address].add(vested);\n      var isEnd = currentTimestamp > item.endTime;\n      var timePeriod = BigNumber.from(item.endTime - item.startTime);\n      var unlockedBigint = isEnd ? item.quantity : item.quantity.mul(BigNumber.from(currentTimestamp).sub(BigNumber.from(item.startTime)).div(timePeriod)); // unlocked\n\n      var vestableAmount = CurrencyAmount.fromRawAmount(item.token, unlockedBigint.sub(BigNumber.from(item.vestedQuantity)).toString()); // vestableAmount = unlock - vestedQuanitty\n\n      var unlockedUsd = item.tokenPrice * parseFloat(vestableAmount.toExact());\n      unlocked.value += unlockedUsd;\n      if (!unlocked.amountByAddress[address]) unlocked.amountByAddress[address] = vestableAmount;else unlocked.amountByAddress[address] = unlocked.amountByAddress[address].add(vestableAmount); // locked = total - unlocked\n\n      var lockedAmount = CurrencyAmount.fromRawAmount(item.token, item.quantity.sub(unlockedBigint).toString());\n      locked.value += item.tokenPrice * parseFloat(lockedAmount.toExact());\n      if (!locked.amountByAddress[address]) locked.amountByAddress[address] = lockedAmount;else locked.amountByAddress[address] = locked.amountByAddress[address].add(lockedAmount);\n    });\n  });\n  var noVesting = Object.keys(schedulesByRewardLocker).every(function (rewardLockerAddress) {\n    var _schedulesByRewardLoc;\n\n    return !((_schedulesByRewardLoc = schedulesByRewardLocker[rewardLockerAddress]) !== null && _schedulesByRewardLoc !== void 0 && _schedulesByRewardLoc.length);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VestingSummary, {\n      loading: loading,\n      totalHarvested: totalHarvested,\n      locked: locked,\n      unlocked: unlocked,\n      claimed: claimed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: 16,\n      fontWeight: \"500\",\n      marginTop: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Vesting Schedules\"\n      }, void 0, false, void 0, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), noVesting ? loading ? /*#__PURE__*/_jsxDEV(LocalLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, _this) : /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      color: theme.subText,\n      marginTop: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"No vesting schedule!\"\n      }, void 0, false, void 0, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, _this) : /*#__PURE__*/_jsxDEV(ScheduleGrid, {\n      children: Object.keys(schedulesByRewardLocker).map(function (rewardLocker) {\n        if (schedulesByRewardLocker[rewardLocker].length) return /*#__PURE__*/_jsxDEV(ScheduleCard, {\n          schedules: schedulesByRewardLocker[rewardLocker]\n        }, rewardLocker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 22\n        }, _this);\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ProMMVesting, \"kzmNu7g29WleqaBHq8yH6cKBpD8=\", false, function () {\n  return [useTheme, usePrommSchedules];\n});\n\n_c = ProMMVesting;\nexport default ProMMVesting;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProMMVesting\");","map":{"version":3,"names":["CurrencyAmount","BigNumber","Text","LocalLoader","useTheme","usePrommSchedules","ScheduleCard","VestingSummary","ScheduleGrid","ProMMVesting","theme","loading","schedulesByRewardLocker","totalHarvested","value","amountByAddress","locked","unlocked","claimed","currentTimestamp","Math","floor","Date","Object","values","forEach","schedule","item","address","token","isNative","symbol","harvested","fromRawAmount","quantity","toString","harvestedUsd","tokenPrice","parseFloat","toExact","add","vested","vestedQuantity","vestedUsd","isEnd","endTime","timePeriod","from","startTime","unlockedBigint","mul","sub","div","vestableAmount","unlockedUsd","lockedAmount","noVesting","keys","every","rewardLockerAddress","length","subText","map","rewardLocker"],"sources":["/Applications/XAMPP/voxel-interface/src/components/Vesting/ProMMVesting.tsx"],"sourcesContent":["import { CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\nimport { Trans } from '@lingui/macro'\nimport { BigNumber } from 'ethers'\nimport { Text } from 'rebass'\n\nimport LocalLoader from 'components/LocalLoader'\nimport useTheme from 'hooks/useTheme'\nimport { usePrommSchedules } from 'state/vesting/hooks'\n\nimport ScheduleCard from './ScheduleCard'\nimport VestingSummary from './VestingSummary'\nimport { ScheduleGrid } from './styleds'\n\nconst ProMMVesting = () => {\n  const theme = useTheme()\n  const { loading, schedulesByRewardLocker } = usePrommSchedules()\n\n  const totalHarvested: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\n    value: 0,\n    amountByAddress: {},\n  }\n  const locked: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\n    value: 0,\n    amountByAddress: {},\n  }\n  const unlocked: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\n    value: 0,\n    amountByAddress: {},\n  }\n  const claimed: { value: number; amountByAddress: { [tokenAddress: string]: CurrencyAmount<Token> } } = {\n    value: 0,\n    amountByAddress: {},\n  }\n\n  const currentTimestamp = Math.floor(+new Date() / 1000)\n  Object.values(schedulesByRewardLocker).forEach(schedule => {\n    schedule.forEach(item => {\n      const address = (item.token.isNative ? item.token.symbol : item.token.address) as string\n      // total\n      const harvested = CurrencyAmount.fromRawAmount(item.token, item.quantity.toString())\n      const harvestedUsd = item.tokenPrice * parseFloat(harvested.toExact())\n      totalHarvested.value += harvestedUsd\n      if (!totalHarvested.amountByAddress[address]) totalHarvested.amountByAddress[address] = harvested\n      else totalHarvested.amountByAddress[address] = totalHarvested.amountByAddress[address].add(harvested)\n\n      // claimed\n      const vested = CurrencyAmount.fromRawAmount(item.token, item.vestedQuantity.toString())\n      const vestedUsd = item.tokenPrice * parseFloat(vested.toExact())\n      claimed.value += vestedUsd\n      if (!claimed.amountByAddress[address]) claimed.amountByAddress[address] = vested\n      else claimed.amountByAddress[address] = claimed.amountByAddress[address].add(vested)\n\n      const isEnd = currentTimestamp > item.endTime\n      const timePeriod = BigNumber.from(item.endTime - item.startTime)\n      const unlockedBigint = isEnd\n        ? item.quantity\n        : item.quantity.mul(BigNumber.from(currentTimestamp).sub(BigNumber.from(item.startTime)).div(timePeriod))\n      // unlocked\n      const vestableAmount = CurrencyAmount.fromRawAmount(\n        item.token,\n        unlockedBigint.sub(BigNumber.from(item.vestedQuantity)).toString(),\n      ) // vestableAmount = unlock - vestedQuanitty\n      const unlockedUsd = item.tokenPrice * parseFloat(vestableAmount.toExact())\n      unlocked.value += unlockedUsd\n      if (!unlocked.amountByAddress[address]) unlocked.amountByAddress[address] = vestableAmount\n      else unlocked.amountByAddress[address] = unlocked.amountByAddress[address].add(vestableAmount)\n\n      // locked = total - unlocked\n      const lockedAmount = CurrencyAmount.fromRawAmount(item.token, item.quantity.sub(unlockedBigint).toString())\n      locked.value += item.tokenPrice * parseFloat(lockedAmount.toExact())\n      if (!locked.amountByAddress[address]) locked.amountByAddress[address] = lockedAmount\n      else locked.amountByAddress[address] = locked.amountByAddress[address].add(lockedAmount)\n    })\n  })\n\n  const noVesting = Object.keys(schedulesByRewardLocker).every(\n    rewardLockerAddress => !schedulesByRewardLocker[rewardLockerAddress]?.length,\n  )\n\n  return (\n    <>\n      <VestingSummary\n        loading={loading}\n        totalHarvested={totalHarvested}\n        locked={locked}\n        unlocked={unlocked}\n        claimed={claimed}\n      />\n\n      <Text fontSize={16} fontWeight=\"500\" marginTop=\"24px\">\n        <Trans>Vesting Schedules</Trans>\n      </Text>\n\n      {noVesting ? (\n        loading ? (\n          <LocalLoader />\n        ) : (\n          <Text textAlign=\"center\" color={theme.subText} marginTop=\"24px\">\n            <Trans>No vesting schedule!</Trans>\n          </Text>\n        )\n      ) : (\n        <ScheduleGrid>\n          {Object.keys(schedulesByRewardLocker).map(rewardLocker => {\n            if (schedulesByRewardLocker[rewardLocker].length)\n              return <ScheduleCard key={rewardLocker} schedules={schedulesByRewardLocker[rewardLocker]} />\n            return null\n          })}\n        </ScheduleGrid>\n      )}\n    </>\n  )\n}\n\nexport default ProMMVesting\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}