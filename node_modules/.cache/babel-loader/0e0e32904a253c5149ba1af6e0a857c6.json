{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar pointer_1 = require(\"../../calldata/blocks/pointer\");\n\nvar constants_1 = require(\"../../utils/constants\");\n\nvar data_type_1 = require(\"../data_type\");\n\nvar AbstractPointerDataType =\n/** @class */\nfunction (_super) {\n  __extends(AbstractPointerDataType, _super);\n\n  function AbstractPointerDataType(dataItem, factory, destination, parent) {\n    var _this = _super.call(this, dataItem, factory) || this;\n\n    _this._destination = destination;\n    _this._parent = parent;\n    return _this;\n  }\n\n  AbstractPointerDataType.prototype.generateCalldataBlock = function (value, parentBlock) {\n    if (parentBlock === undefined) {\n      throw new Error(\"DependentDataType requires a parent block to generate its block\");\n    }\n\n    var destinationBlock = this._destination.generateCalldataBlock(value, parentBlock);\n\n    var name = this.getDataItem().name;\n    var signature = this.getSignature();\n    var parentName = parentBlock.getName();\n    var block = new pointer_1.PointerCalldataBlock(name, signature, parentName, destinationBlock, parentBlock);\n    return block;\n  };\n\n  AbstractPointerDataType.prototype.generateValue = function (calldata, rules) {\n    var destinationOffsetBuf = calldata.popWord();\n    var destinationOffsetHex = ethUtil.bufferToHex(destinationOffsetBuf);\n    var destinationOffsetRelative = parseInt(destinationOffsetHex, constants_1.constants.HEX_BASE);\n    var destinationOffsetAbsolute = calldata.toAbsoluteOffset(destinationOffsetRelative);\n    var currentOffset = calldata.getOffset();\n    calldata.setOffset(destinationOffsetAbsolute);\n\n    var value = this._destination.generateValue(calldata, rules);\n\n    calldata.setOffset(currentOffset);\n    return value;\n  }; // Disable prefer-function-over-method for inherited abstract method.\n\n  /* tslint:disable prefer-function-over-method */\n\n\n  AbstractPointerDataType.prototype.isStatic = function () {\n    return true;\n  };\n\n  return AbstractPointerDataType;\n}(data_type_1.DataType);\n\nexports.AbstractPointerDataType = AbstractPointerDataType;","map":null,"metadata":{},"sourceType":"script"}