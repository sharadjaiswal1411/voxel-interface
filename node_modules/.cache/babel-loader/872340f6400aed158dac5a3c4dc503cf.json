{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { useState, useMemo, useCallback } from 'react';\n\nvar useMap = function useMap(initialMap) {\n  if (initialMap === void 0) {\n    initialMap = {};\n  }\n\n  var _a = useState(initialMap),\n      map = _a[0],\n      _set = _a[1];\n\n  var stableActions = useMemo(function () {\n    return {\n      set: function set(key, entry) {\n        _set(function (prevMap) {\n          var _a;\n\n          return __assign(__assign({}, prevMap), (_a = {}, _a[key] = entry, _a));\n        });\n      },\n      setAll: function setAll(newMap) {\n        _set(newMap);\n      },\n      remove: function remove(key) {\n        _set(function (prevMap) {\n          var _a = prevMap,\n              _b = key,\n              omit = _a[_b],\n              rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n\n          return rest;\n        });\n      },\n      reset: function reset() {\n        return _set(initialMap);\n      }\n    };\n  }, [_set]);\n\n  var utils = __assign({\n    get: useCallback(function (key) {\n      return map[key];\n    }, [map])\n  }, stableActions);\n\n  return [map, utils];\n};\n\nexport default useMap;","map":null,"metadata":{},"sourceType":"module"}