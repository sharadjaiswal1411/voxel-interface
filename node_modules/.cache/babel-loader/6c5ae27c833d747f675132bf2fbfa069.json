{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport var updatePools = createAction('pools/updatePools');\nexport var setLoading = createAction('pools/setLoading');\nexport var setError = createAction('pools/setError');\nexport var setSelectedPool = createAction('pools/setSelectedPool');\nexport var setSharedPoolId = createAction('pools/setSharedPoolId');\nexport var setUrlOnEthPowAck = createAction('pools/setUrlOnEthPowAck');","map":{"version":3,"names":["createAction","updatePools","setLoading","setError","setSelectedPool","setSharedPoolId","setUrlOnEthPowAck"],"sources":["/Applications/XAMPP/voxel-interface/src/state/pools/actions.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\nimport { SubgraphPoolData, UserLiquidityPosition } from './hooks'\n\nexport const updatePools = createAction<{ pools: SubgraphPoolData[] }>('pools/updatePools')\nexport const setLoading = createAction<boolean>('pools/setLoading')\nexport const setError = createAction<Error | undefined>('pools/setError')\nexport const setSelectedPool = createAction<{\n  poolData: SubgraphPoolData\n  myLiquidity?: UserLiquidityPosition\n}>('pools/setSelectedPool')\nexport const setSharedPoolId = createAction<{ poolId: string | undefined }>('pools/setSharedPoolId')\nexport const setUrlOnEthPowAck = createAction<string>('pools/setUrlOnEthPowAck')\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAIA,OAAO,IAAMC,WAAW,GAAGD,YAAY,CAAgC,mBAAhC,CAAhC;AACP,OAAO,IAAME,UAAU,GAAGF,YAAY,CAAU,kBAAV,CAA/B;AACP,OAAO,IAAMG,QAAQ,GAAGH,YAAY,CAAoB,gBAApB,CAA7B;AACP,OAAO,IAAMI,eAAe,GAAGJ,YAAY,CAGxC,uBAHwC,CAApC;AAIP,OAAO,IAAMK,eAAe,GAAGL,YAAY,CAAiC,uBAAjC,CAApC;AACP,OAAO,IAAMM,iBAAiB,GAAGN,YAAY,CAAS,yBAAT,CAAtC"},"metadata":{},"sourceType":"module"}