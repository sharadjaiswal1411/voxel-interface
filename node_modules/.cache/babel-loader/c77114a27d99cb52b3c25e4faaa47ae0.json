{"ast":null,"code":"import _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/Swap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { Token } from '@kyberswap/ks-sdk-core';\nimport JSBI from 'jsbi';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport styled from 'styled-components';\nimport SwapIcon from \"assets/svg/swap.svg\";\nimport AddressInputPanel from 'components/AddressInputPanel';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button';\nimport Card, { GreyCard } from 'components/Card/index';\nimport Column, { AutoColumn } from 'components/Column/index';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport Loader from 'components/Loader';\nimport { SwapPoolTabs } from 'components/NavigationTabs';\nimport ProgressSteps from 'components/ProgressSteps';\nimport { AutoRow, RowBetween } from 'components/Row';\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink';\nimport TokenWarningModal from 'components/TokenWarningModal';\nimport TransactionSettings from 'components/TransactionSettings';\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown';\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal';\nimport TradePrice from 'components/swap/TradePrice';\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, Dots, Wrapper } from 'components/swap/styleds';\nimport { SwapCallbackError } from 'components/swapv2/styleds';\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens, useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useTheme from 'hooks/useTheme';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport AppBodyRaw from 'pages/AppBody';\nimport { ClickableText } from 'pages/Pool/styleds';\nimport { useToggleSettingsMenu, useWalletModalToggle } from 'state/application/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks';\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks';\nimport { LinkStyledButton, TYPE } from 'theme';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar AppBody = styled(AppBodyRaw).withConfig({\n  displayName: \"Swap__AppBody\",\n  componentId: \"sc-1rsm36k-0\"\n})([\"padding-top:24px;\"]);\n_c = AppBody;\nexport default function Swap(_ref) {\n  _s();\n\n  var _ref4, _ref5, _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _formattedAmounts, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n\n  var history = _ref.history;\n  var loadedUrlParams = useDefaultsFromURLSearch(); // token warning stuff\n\n  var _ref2 = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)],\n      loadedInputCurrency = _ref2[0],\n      loadedOutputCurrency = _ref2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dismissTokenWarning = _useState2[0],\n      setDismissTokenWarning = _useState2[1];\n\n  var urlLoadedTokens = useMemo(function () {\n    var _filter, _ref3;\n\n    return (_filter = (_ref3 = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref3 === void 0 ? void 0 : _ref3.filter(function (c) {\n      return c instanceof Token;\n    })) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  var handleConfirmTokenWarning = useCallback(function () {\n    setDismissTokenWarning(true);\n  }, []); // dismiss warning if all imported tokens are in active lists\n\n  var defaultTokens = useAllTokens();\n  var importTokensNotInDefault = urlLoadedTokens && urlLoadedTokens.filter(function (token) {\n    return !Boolean(token.address in defaultTokens);\n  });\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account;\n\n  var theme = useTheme(); // toggle wallet when disconnected\n\n  var toggleWalletModal = useWalletModalToggle(); // for expert mode\n\n  var toggleSettings = useToggleSettingsMenu();\n\n  var _useExpertModeManager = useExpertModeManager(),\n      _useExpertModeManager2 = _slicedToArray(_useExpertModeManager, 1),\n      isExpertMode = _useExpertModeManager2[0]; // get custom setting values for user\n\n\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n      _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n      allowedSlippage = _useUserSlippageToler2[0]; // swap state\n\n\n  var _useSwapState = useSwapState(),\n      independentField = _useSwapState.independentField,\n      typedValue = _useSwapState.typedValue,\n      recipient = _useSwapState.recipient;\n\n  var _useDerivedSwapInfo = useDerivedSwapInfo(),\n      v2Trade = _useDerivedSwapInfo.v2Trade,\n      currencyBalances = _useDerivedSwapInfo.currencyBalances,\n      parsedAmount = _useDerivedSwapInfo.parsedAmount,\n      currencies = _useDerivedSwapInfo.currencies,\n      swapInputError = _useDerivedSwapInfo.inputError;\n\n  var _useWrapCallback = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue),\n      wrapType = _useWrapCallback.wrapType,\n      onWrap = _useWrapCallback.execute,\n      wrapInputError = _useWrapCallback.inputError;\n\n  var showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  var trade = showWrap ? undefined : v2Trade;\n  var parsedAmounts = showWrap ? (_ref4 = {}, _defineProperty(_ref4, Field.INPUT, parsedAmount), _defineProperty(_ref4, Field.OUTPUT, parsedAmount), _ref4) : (_ref5 = {}, _defineProperty(_ref5, Field.INPUT, independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount), _defineProperty(_ref5, Field.OUTPUT, independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount), _ref5);\n\n  var _useSwapActionHandler = useSwapActionHandlers(),\n      onSwitchTokens = _useSwapActionHandler.onSwitchTokens,\n      onCurrencySelection = _useSwapActionHandler.onCurrencySelection,\n      onUserInput = _useSwapActionHandler.onUserInput,\n      onChangeRecipient = _useSwapActionHandler.onChangeRecipient;\n\n  var isValid = !swapInputError;\n  var dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  var handleTypeInput = useCallback(function (value) {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  var handleTypeOutput = useCallback(function (value) {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // reset if they close warning without tokens in params\n\n  var handleDismissTokenWarning = useCallback(function () {\n    setDismissTokenWarning(true);\n    history.push('/swap-legacy');\n  }, [history]); // modal and loading\n\n  var _useState3 = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _useState4$ = _useState4[0],\n      showConfirm = _useState4$.showConfirm,\n      tradeToConfirm = _useState4$.tradeToConfirm,\n      swapErrorMessage = _useState4$.swapErrorMessage,\n      attemptingTxn = _useState4$.attemptingTxn,\n      txHash = _useState4$.txHash,\n      setSwapState = _useState4[1];\n\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts);\n  var route = trade === null || trade === void 0 ? void 0 : trade.route;\n  var userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  var noRoute = !route; // check whether the user has approved the router on the input token\n\n  var _useApproveCallbackFr = useApproveCallbackFromTrade(trade, allowedSlippage),\n      _useApproveCallbackFr2 = _slicedToArray(_useApproveCallbackFr, 2),\n      approval = _useApproveCallbackFr2[0],\n      approveCallback = _useApproveCallbackFr2[1]; // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      approvalSubmitted = _useState6[0],\n      setApprovalSubmitted = _useState6[1]; // mark when a user has submitted an approval, reset onTokenSelection for input field\n\n\n  useEffect(function () {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n\n    if (approval === ApprovalState.NOT_APPROVED) {\n      setApprovalSubmitted(false);\n    }\n  }, [approval, approvalSubmitted]);\n  var maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  var atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput))); // the callback to execute the swap\n\n  var _useSwapCallback = useSwapCallback(trade, allowedSlippage, recipient),\n      swapCallback = _useSwapCallback.callback,\n      swapCallbackError = _useSwapCallback.error;\n\n  var _computeTradePriceBre = computeTradePriceBreakdown(trade),\n      priceImpactWithoutFee = _computeTradePriceBre.priceImpactWithoutFee;\n\n  var handleSwap = useCallback(function () {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n\n    if (!swapCallback) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm: tradeToConfirm,\n      showConfirm: showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(function (hash) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n    }).catch(function (error) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [tradeToConfirm, priceImpactWithoutFee, showConfirm, swapCallback]); // errors\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showInverted = _useState8[0],\n      setShowInverted = _useState8[1]; // warnings on slippage\n\n\n  var priceImpactSeverity = warningSeverity(priceImpactWithoutFee); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  var showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  var handleConfirmDismiss = useCallback(function () {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm: tradeToConfirm,\n      attemptingTxn: attemptingTxn,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash\n    }); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  var handleAcceptChanges = useCallback(function () {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash,\n      attemptingTxn: attemptingTxn,\n      showConfirm: showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  var handleInputSelect = useCallback(function (inputCurrency) {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  var handleMaxInput = useCallback(function () {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n  var handleOutputSelect = useCallback(function (outputCurrency) {\n    return onCurrencySelection(Field.OUTPUT, outputCurrency);\n  }, [onCurrencySelection]);\n  var isLoading = (!currencyBalances[Field.INPUT] || !currencyBalances[Field.OUTPUT]) && userHasSpecifiedInputOutput && !v2Trade;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: importTokensNotInDefault.length > 0 && !dismissTokenWarning,\n      tokens: importTokensNotInDefault,\n      onConfirm: handleConfirmTokenWarning,\n      onDismiss: handleDismissTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(SwapPoolTabs, {\n        active: 'swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        mb: '16px',\n        children: [/*#__PURE__*/_jsxDEV(TYPE.black, {\n          color: theme.text,\n          fontSize: 20,\n          fontWeight: 500,\n          children:\n          /*i18n*/\n          i18n._(\"Swap\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TransactionSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: trade,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: allowedSlippage,\n          onConfirm: handleSwap,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss,\n          tokenAddToMetaMask: currencies[Field.OUTPUT]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: '7px',\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            label: independentField === Field.OUTPUT && !showWrap && trade ?\n            /*i18n*/\n            i18n._(\"From (estimated)\") :\n            /*i18n*/\n            i18n._(\"From\"),\n            value: formattedAmounts[Field.INPUT],\n            showMaxButton: !atMaxAmountInput,\n            currency: currencies[Field.INPUT],\n            onUserInput: handleTypeInput,\n            onMax: handleMaxInput,\n            onCurrencySelect: handleInputSelect,\n            otherCurrency: currencies[Field.OUTPUT],\n            id: \"swap-currency-input\",\n            showCommonBases: true,\n            positionMax: \"top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"space-between\",\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: isExpertMode ? 'space-between' : 'center',\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: true,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: SwapIcon,\n                  alt: \"SwapIcon\",\n                  width: \"22\",\n                  onClick: function onClick() {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n                    onSwitchTokens();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"add-recipient-button\",\n                onClick: function onClick() {\n                  return onChangeRecipient('');\n                },\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"+ Add a send (optional)\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.OUTPUT],\n            onUserInput: handleTypeOutput,\n            label: independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To',\n            showMaxButton: false,\n            currency: currencies[Field.OUTPUT],\n            onCurrencySelect: handleOutputSelect,\n            otherCurrency: currencies[Field.INPUT],\n            id: \"swap-currency-output\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"remove-recipient-button\",\n                onClick: function onClick() {\n                  return onChangeRecipient(null);\n                },\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"- Remove send\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, showWrap ? null : /*#__PURE__*/_jsxDEV(Card, {\n            padding: '0 .75rem 0 .75rem',\n            borderRadius: '20px',\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"4px\",\n              children: [Boolean(trade) && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  alignItems: 'center',\n                  display: 'flex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  children: [/*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Price:\"\n                  }, void 0, false, void 0, this), \"\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                  price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n                  showInverted: showInverted,\n                  setShowInverted: setShowInverted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  alignItems: 'center',\n                  display: 'flex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  onClick: toggleSettings,\n                  children: [/*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Max Slippage:\"\n                  }, void 0, false, void 0, this), \"\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  onClick: toggleSettings,\n                  children: [allowedSlippage / 100, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomGrouping, {\n          children: [!account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n            onClick: toggleWalletModal,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Connect Wallet\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this) : isLoading ? /*#__PURE__*/_jsxDEV(GreyCard, {\n            style: {\n              textAlign: 'center',\n              borderRadius: '5.5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: /*#__PURE__*/_jsxDEV(Dots, {\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Calculating best route\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this) : showWrap ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabled: Boolean(wrapInputError),\n            onClick: onWrap,\n            children: wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n            style: {\n              textAlign: 'center',\n              borderRadius: '5.5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Insufficient liquidity for this trade.\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n              onClick: approveCallback,\n              disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n              width: \"48%\",\n              altDisabledStyle: approval === ApprovalState.PENDING // show solid button while waiting\n              ,\n              confirmed: approval === ApprovalState.APPROVED,\n              children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                gap: \"6px\",\n                justify: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Approving\"\n                }, void 0, false, void 0, this), \" \", /*#__PURE__*/_jsxDEV(Loader, {\n                  stroke: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this) : approvalSubmitted && approval === ApprovalState.APPROVED ?\n              /*i18n*/\n              i18n._(\"Approved\") :\n              /*i18n*/\n              i18n._(\"Approve {0}\", {\n                0: (_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: function onClick() {\n                if (isExpertMode) {\n                  handleSwap();\n                } else {\n                  setSwapState({\n                    tradeToConfirm: trade,\n                    attemptingTxn: false,\n                    swapErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined\n                  });\n                }\n              },\n              width: \"48%\",\n              id: \"swap-button\",\n              disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n              error: isValid && priceImpactSeverity > 2,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 16,\n                fontWeight: 500,\n                children: priceImpactSeverity > 3 && !isExpertMode ?\n                /*i18n*/\n                i18n._(\"Price Impact High\") : priceImpactSeverity > 2 ?\n                /*i18n*/\n                i18n._(\"Swap Anyway\") :\n                /*i18n*/\n                i18n._(\"Swap\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ButtonError, {\n            onClick: function onClick() {\n              if (isExpertMode) {\n                handleSwap();\n              } else {\n                setSwapState({\n                  tradeToConfirm: trade,\n                  attemptingTxn: false,\n                  swapErrorMessage: undefined,\n                  showConfirm: true,\n                  txHash: undefined\n                });\n              }\n            },\n            id: \"swap-button\",\n            disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError || approval !== ApprovalState.APPROVED,\n            error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: 20,\n              fontWeight: 500,\n              children: swapInputError ? swapInputError : priceImpactSeverity > 3 && !isExpertMode ?\n              /*i18n*/\n              i18n._(\"Price Impact Too High\") : approval !== ApprovalState.APPROVED ?\n              /*i18n*/\n              i18n._(\"Checking allowance...\") : priceImpactSeverity > 2 ?\n              /*i18n*/\n              i18n._(\"Swap Anyway\") :\n              /*i18n*/\n              i18n._(\"Swap\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(Column, {\n            style: {\n              marginTop: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(ProgressSteps, {\n              steps: [approval === ApprovalState.APPROVED]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n            error: swapErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 49\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdvancedSwapDetailsDropdown, {\n      trade: trade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Swap, \"ui/AwsTOR5eAcwkERCAMW5eJSBA=\", false, function () {\n  return [useDefaultsFromURLSearch, useCurrency, useCurrency, useAllTokens, useActiveWeb3React, useTheme, useWalletModalToggle, useToggleSettingsMenu, useExpertModeManager, useUserSlippageTolerance, useSwapState, useDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useApproveCallbackFromTrade, useSwapCallback];\n});\n\n_c2 = Swap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBody\");\n$RefreshReg$(_c2, \"Swap\");","map":{"version":3,"names":["Token","JSBI","React","useCallback","useEffect","useMemo","useState","ArrowDown","Text","styled","AddressInputPanel","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","Card","GreyCard","Column","AutoColumn","CurrencyInputPanel","Loader","SwapPoolTabs","ProgressSteps","AutoRow","RowBetween","SwitchLocaleLink","TokenWarningModal","TransactionSettings","AdvancedSwapDetailsDropdown","ConfirmSwapModal","TradePrice","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","Dots","Wrapper","SwapCallbackError","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useAllTokens","useCurrency","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useTheme","useWrapCallback","WrapType","AppBodyRaw","ClickableText","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","Swap","history","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","account","theme","toggleWalletModal","toggleSettings","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","handleDismissTokenWarning","push","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","NOT_APPROVED","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","handleSwap","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","isLoading","length","text","padding","SwapIcon","text2","alignItems","display","executionPrice","textAlign","borderRadius","WRAP","UNWRAP","symbol","marginTop"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/Swap/index.tsx"],"sourcesContent":["import { Trade } from '@kyberswap/ks-sdk-classic'\nimport { Currency, CurrencyAmount, Token, TradeType } from '@kyberswap/ks-sdk-core'\nimport { Trans, t } from '@lingui/macro'\nimport JSBI from 'jsbi'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport SwapIcon from 'assets/svg/swap.svg'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\nimport Card, { GreyCard } from 'components/Card/index'\nimport Column, { AutoColumn } from 'components/Column/index'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport Loader from 'components/Loader'\nimport { SwapPoolTabs } from 'components/NavigationTabs'\nimport ProgressSteps from 'components/ProgressSteps'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport TransactionSettings from 'components/TransactionSettings'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport TradePrice from 'components/swap/TradePrice'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, Dots, Wrapper } from 'components/swap/styleds'\nimport { SwapCallbackError } from 'components/swapv2/styleds'\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTokens, useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useTheme from 'hooks/useTheme'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport AppBodyRaw from 'pages/AppBody'\nimport { ClickableText } from 'pages/Pool/styleds'\nimport { useToggleSettingsMenu, useWalletModalToggle } from 'state/application/hooks'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance } from 'state/user/hooks'\nimport { LinkStyledButton, TYPE } from 'theme'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\n\nconst AppBody = styled(AppBodyRaw)`\n  padding-top: 24px;\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !Boolean(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n  const theme = useTheme()\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n    history.push('/swap-legacy')\n  }, [history])\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n\n    if (approval === ApprovalState.NOT_APPROVED) {\n      setApprovalSubmitted(false)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount<Currency> | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [tradeToConfirm, priceImpactWithoutFee, showConfirm, swapCallback])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency: Currency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency: Currency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection],\n  )\n\n  const isLoading =\n    (!currencyBalances[Field.INPUT] || !currencyBalances[Field.OUTPUT]) && userHasSpecifiedInputOutput && !v2Trade\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n        onDismiss={handleDismissTokenWarning}\n      />\n      <AppBody>\n        <SwapPoolTabs active={'swap'} />\n        <RowBetween mb={'16px'}>\n          <TYPE.black color={theme.text} fontSize={20} fontWeight={500}>{t`Swap`}</TYPE.black>\n          <TransactionSettings />\n        </RowBetween>\n\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n            tokenAddToMetaMask={currencies[Field.OUTPUT]}\n          />\n\n          <AutoColumn gap={'7px'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t`From (estimated)` : t`From`}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n              showCommonBases={true}\n              positionMax=\"top\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <img\n                    src={SwapIcon}\n                    alt=\"SwapIcon\"\n                    width=\"22\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    <Trans>+ Add a send (optional)</Trans>\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n              showCommonBases={true}\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    <Trans>- Remove send</Trans>\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={'0 .75rem 0 .75rem'} borderRadius={'20px'}>\n                <AutoColumn gap=\"4px\">\n                  {Boolean(trade) && (\n                    <div style={{ alignItems: 'center', display: 'flex' }}>\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                        <Trans>Price:</Trans>&nbsp;\n                      </Text>\n                      <TradePrice\n                        price={trade?.executionPrice}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </div>\n                  )}\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <div style={{ alignItems: 'center', display: 'flex' }}>\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        <Trans>Max Slippage:</Trans>&nbsp;\n                      </ClickableText>\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        {allowedSlippage / 100}%\n                      </ClickableText>\n                    </div>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                <Trans>Connect Wallet</Trans>\n              </ButtonLight>\n            ) : isLoading ? (\n              <GreyCard style={{ textAlign: 'center', borderRadius: '5.5px' }}>\n                <TYPE.main mb=\"4px\">\n                  <Dots>\n                    <Trans>Calculating best route</Trans>\n                  </Dots>\n                </TYPE.main>\n              </GreyCard>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center', borderRadius: '5.5px' }}>\n                <TYPE.main mb=\"4px\">\n                  <Trans>Insufficient liquidity for this trade.</Trans>\n                </TYPE.main>\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonConfirmed\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                  confirmed={approval === ApprovalState.APPROVED}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      <Trans>Approving</Trans> <Loader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t`Approved`\n                  ) : (\n                    t`Approve ${currencies[Field.INPUT]?.symbol}`\n                  )}\n                </ButtonConfirmed>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? t`Price Impact High`\n                      : priceImpactSeverity > 2\n                      ? t`Swap Anyway`\n                      : t`Swap`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined,\n                    })\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={\n                  !isValid ||\n                  (priceImpactSeverity > 3 && !isExpertMode) ||\n                  !!swapCallbackError ||\n                  approval !== ApprovalState.APPROVED\n                }\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? t`Price Impact Too High`\n                    : approval !== ApprovalState.APPROVED\n                    ? t`Checking allowance...`\n                    : priceImpactSeverity > 2\n                    ? t`Swap Anyway`\n                    : t`Swap`}\n                </Text>\n              </ButtonError>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n      <SwitchLocaleLink />\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}