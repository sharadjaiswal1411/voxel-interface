{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require(\"lodash\");\n\nvar ethereum_types_1 = require(\"ethereum-types\");\n\nvar EthereumTx = require(\"ethereumjs-tx\");\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar providerEngineUtils = require(\"web3-provider-engine/util/rpc-cache-utils\");\n\nvar types_1 = require(\"../types\");\n\nvar subprovider_1 = require(\"./subprovider\");\n\nvar NONCE_TOO_LOW_ERROR_MESSAGE = 'Transaction nonce is too low';\n/**\n * This class implements the [web3-provider-engine](https://github.com/MetaMask/provider-engine) subprovider interface.\n * It is heavily inspired by the [NonceSubprovider](https://github.com/MetaMask/provider-engine/blob/master/subproviders/nonce-tracker.js).\n * We added the additional feature of clearing the cached nonce value when a `nonce value too low` error occurs.\n */\n\nvar NonceTrackerSubprovider =\n/** @class */\nfunction (_super) {\n  __extends(NonceTrackerSubprovider, _super);\n\n  function NonceTrackerSubprovider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._nonceCache = {};\n    return _this;\n  }\n\n  NonceTrackerSubprovider._reconstructTransaction = function (payload) {\n    var raw = payload.params[0];\n\n    if (raw === undefined) {\n      throw new Error(types_1.NonceSubproviderErrors.EmptyParametersFound);\n    }\n\n    var rawData = ethUtil.toBuffer(raw);\n    var transaction = new EthereumTx(rawData);\n    return transaction;\n  };\n\n  NonceTrackerSubprovider._determineAddress = function (payload) {\n    var address;\n\n    switch (payload.method) {\n      case 'eth_getTransactionCount':\n        address = payload.params[0].toLowerCase();\n        return address;\n\n      case 'eth_sendRawTransaction':\n        var transaction = NonceTrackerSubprovider._reconstructTransaction(payload);\n\n        var addressRaw = transaction.getSenderAddress().toString('hex').toLowerCase();\n        address = \"0x\" + addressRaw;\n        return address;\n\n      default:\n        throw new Error(types_1.NonceSubproviderErrors.CannotDetermineAddressFromPayload);\n    }\n  };\n  /**\n   * This method conforms to the web3-provider-engine interface.\n   * It is called internally by the ProviderEngine when it is this subproviders\n   * turn to handle a JSON RPC request.\n   * @param payload JSON RPC payload\n   * @param next Callback to call if this subprovider decides not to handle the request\n   * @param end Callback to call if subprovider handled the request and wants to pass back the request.\n   */\n  // tslint:disable-next-line:async-suffix\n\n\n  NonceTrackerSubprovider.prototype.handleRequest = function (payload, next, end) {\n    return __awaiter(this, void 0, void 0, function () {\n      var requestDefaultBlock, address_1, cachedResult;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (payload.method) {\n          case 'eth_getTransactionCount':\n            requestDefaultBlock = providerEngineUtils.blockTagForPayload(payload);\n\n            if (requestDefaultBlock === ethereum_types_1.BlockParamLiteral.Pending) {\n              address_1 = NonceTrackerSubprovider._determineAddress(payload);\n              cachedResult = this._nonceCache[address_1];\n\n              if (cachedResult !== undefined) {\n                return [2\n                /*return*/\n                , end(null, cachedResult)];\n              } else {\n                return [2\n                /*return*/\n                , next(function (requestError, requestResult, cb) {\n                  if (requestError === null) {\n                    _this._nonceCache[address_1] = requestResult;\n                  }\n\n                  cb();\n                })];\n              }\n            } else {\n              return [2\n              /*return*/\n              , next()];\n            }\n\n          case 'eth_sendRawTransaction':\n            return [2\n            /*return*/\n            , next(function (sendTransactionError, _txResult, cb) {\n              if (sendTransactionError === null) {\n                _this._handleSuccessfulTransaction(payload);\n              } else {\n                _this._handleSendTransactionError(payload, sendTransactionError);\n              }\n\n              cb();\n            })];\n\n          default:\n            return [2\n            /*return*/\n            , next()];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  NonceTrackerSubprovider.prototype._handleSuccessfulTransaction = function (payload) {\n    var address = NonceTrackerSubprovider._determineAddress(payload);\n\n    var transaction = NonceTrackerSubprovider._reconstructTransaction(payload); // Increment the nonce from the previous successfully submitted transaction\n\n\n    var nonce = ethUtil.bufferToInt(transaction.nonce);\n    nonce++;\n    var hexBase = 16;\n    var nextHexNonce = nonce.toString(hexBase);\n\n    if (nextHexNonce.length % 2) {\n      nextHexNonce = \"0\" + nextHexNonce;\n    }\n\n    var nextPrefixedHexNonce = \"0x\" + nextHexNonce;\n    this._nonceCache[address] = nextPrefixedHexNonce;\n  };\n\n  NonceTrackerSubprovider.prototype._handleSendTransactionError = function (payload, err) {\n    var address = NonceTrackerSubprovider._determineAddress(payload);\n\n    if (this._nonceCache[address] && _.includes(err.message, NONCE_TOO_LOW_ERROR_MESSAGE)) {\n      delete this._nonceCache[address];\n    }\n  };\n\n  return NonceTrackerSubprovider;\n}(subprovider_1.Subprovider);\n\nexports.NonceTrackerSubprovider = NonceTrackerSubprovider;","map":null,"metadata":{},"sourceType":"script"}