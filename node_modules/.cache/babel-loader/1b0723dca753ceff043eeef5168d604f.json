{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar _excluded = [\"library\", \"chainId\"];\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useSelector } from 'react-redux';\nimport { useLocalStorage } from 'react-use';\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks';\nimport { injected } from '../connectors';\nexport var providers = SUPPORTED_NETWORKS.reduce(function (acc, val) {\n  acc[val] = new ethers.providers.JsonRpcProvider(NETWORKS_INFO[val].rpcUrl);\n  return acc;\n}, {});\nexport function useActiveWeb3React() {\n  _s();\n\n  var context = useWeb3ReactCore(); // const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n\n  var library = context.library,\n      chainId = context.chainId,\n      web3React = _objectWithoutProperties(context, _excluded);\n\n  var chainIdWhenNotConnected = useSelector(function (state) {\n    return state.application.chainIdWhenNotConnected;\n  });\n\n  if (context.active && context.chainId) {\n    // const provider = providers[context.chainId as ChainId].cl\n    // provider.provider = { isMetaMask: true }\n    // provider.send = context.library.__proto__.send\n    // provider.jsonRpcFetchFunc = context.library.jsonRpcFetchFunc\n    // return {\n    //   library: provider,\n    //   chainId: context.chainId as ChainId,\n    //   ...web3React\n    // } as Web3ReactContextInterface\n    return context;\n  } else {\n    return _objectSpread({\n      library: providers[chainIdWhenNotConnected],\n      chainId: chainIdWhenNotConnected\n    }, web3React);\n  }\n}\n\n_s(useActiveWeb3React, \"K+Eql/6uIR2rh+CM75OpxpnidIM=\", false, function () {\n  return [useWeb3ReactCore, useSelector];\n});\n\nfunction isAuthorized() {\n  return _isAuthorized.apply(this, arguments);\n}\n\nfunction _isAuthorized() {\n  _isAuthorized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var accounts;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (window.ethereum) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return window.ethereum.request({\n              method: 'eth_accounts'\n            });\n\n          case 5:\n            accounts = _context.sent;\n\n            if (!((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", true);\n\n          case 8:\n            return _context.abrupt(\"return\", false);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n  return _isAuthorized.apply(this, arguments);\n}\n\nvar globalTried = false;\nexport function useEagerConnect() {\n  _s2();\n\n  var _useWeb3ReactCore = useWeb3ReactCore(),\n      activate = _useWeb3ReactCore.activate,\n      active = _useWeb3ReactCore.active; // specifically using useWeb3ReactCore because of what this hook does\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      tried = _useState2[0],\n      setTried = _useState2[1];\n\n  var _useLocalStorage = useLocalStorage('user-manually-disconnect'),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 1),\n      isManuallyDisconnect = _useLocalStorage2[0];\n\n  useEffect(function () {\n    globalTried = tried;\n  }, [tried]);\n  useEffect(function () {\n    var timeout = setTimeout(function () {\n      if (!globalTried) setTried(true);\n    }, 3000);\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, []);\n  useEffect(function () {\n    try {\n      isAuthorized().then(function (isAuthorized) {\n        if (isAuthorized && !isManuallyDisconnect) {\n          activate(injected, undefined, true).catch(function () {\n            setTried(true);\n          });\n        } else {\n          if (isMobile && window.ethereum) {\n            activate(injected, undefined, true).catch(function () {\n              setTried(true);\n            });\n          } else {\n            setTried(true);\n          }\n        }\n      }).catch(function (e) {\n        console.log('Eagerly connect: authorize error', e);\n        setTried(true);\n      });\n    } catch (e) {\n      console.log('Eagerly connect: authorize error', e);\n      setTried(true);\n    }\n  }, [activate, isManuallyDisconnect]); // intentionally only running on mount (make sure it's only mounted once :))\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n\n  useEffect(function () {\n    if (active) {\n      setTried(true);\n    }\n  }, [active]);\n  return tried;\n}\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\n\n_s2(useEagerConnect, \"Fev6fsSD7ZMfOI+gXx8Hf4mP+qw=\", false, function () {\n  return [useWeb3ReactCore, useLocalStorage];\n});\n\nexport function useInactiveListener() {\n  _s3();\n\n  var suppress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _useWeb3ReactCore2 = useWeb3ReactCore(),\n      active = _useWeb3ReactCore2.active,\n      error = _useWeb3ReactCore2.error,\n      activate = _useWeb3ReactCore2.activate; // specifically using useWeb3React because of what this hook does\n\n\n  useEffect(function () {\n    var _window = window,\n        ethereum = _window.ethereum;\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      var handleChainChanged = function handleChainChanged() {\n        // eat errors\n        activate(injected, undefined, true).catch(function (error) {\n          console.error('Failed to activate after chain changed', error);\n        });\n      };\n\n      var handleAccountsChanged = function handleAccountsChanged(accounts) {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(function (error) {\n            console.error('Failed to activate after accounts changed', error);\n          });\n        }\n      };\n\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      return function () {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        }\n      };\n    }\n\n    return undefined;\n  }, [active, error, suppress, activate]);\n}\n\n_s3(useInactiveListener, \"jN4RZ0OvqgaQw3T0lu1/qJ1z0K8=\", false, function () {\n  return [useWeb3ReactCore];\n});","map":{"version":3,"names":["useWeb3React","useWeb3ReactCore","ethers","useEffect","useState","isMobile","useSelector","useLocalStorage","NETWORKS_INFO","SUPPORTED_NETWORKS","injected","providers","reduce","acc","val","JsonRpcProvider","rpcUrl","useActiveWeb3React","context","library","chainId","web3React","chainIdWhenNotConnected","state","application","active","isAuthorized","window","ethereum","request","method","accounts","length","globalTried","useEagerConnect","activate","tried","setTried","isManuallyDisconnect","timeout","setTimeout","clearTimeout","then","undefined","catch","e","console","log","useInactiveListener","suppress","error","on","handleChainChanged","handleAccountsChanged","removeListener"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/index.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@kyberswap/ks-sdk-core'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { ethers } from 'ethers'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useSelector } from 'react-redux'\nimport { useLocalStorage } from 'react-use'\n\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks'\n\nimport { injected } from '../connectors'\nimport { AppState } from '../state'\n\nexport const providers: {\n  [chainId in ChainId]: ethers.providers.JsonRpcProvider\n} = SUPPORTED_NETWORKS.reduce(\n  (acc, val) => {\n    acc[val] = new ethers.providers.JsonRpcProvider(NETWORKS_INFO[val].rpcUrl)\n    return acc\n  },\n  {} as {\n    [chainId in ChainId]: ethers.providers.JsonRpcProvider\n  },\n)\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore()\n  // const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n\n  const { library, chainId, ...web3React } = context\n  const chainIdWhenNotConnected = useSelector<AppState, ChainId>(state => state.application.chainIdWhenNotConnected)\n  if (context.active && context.chainId) {\n    // const provider = providers[context.chainId as ChainId].cl\n    // provider.provider = { isMetaMask: true }\n    // provider.send = context.library.__proto__.send\n    // provider.jsonRpcFetchFunc = context.library.jsonRpcFetchFunc\n    // return {\n    //   library: provider,\n    //   chainId: context.chainId as ChainId,\n    //   ...web3React\n    // } as Web3ReactContextInterface\n    return context\n  } else {\n    return {\n      library: providers[chainIdWhenNotConnected],\n      chainId: chainIdWhenNotConnected,\n      ...web3React,\n    } as Web3ReactContextInterface\n  }\n}\n\nasync function isAuthorized(): Promise<boolean> {\n  if (!window.ethereum) {\n    return false\n  }\n\n  try {\n    const accounts = await window.ethereum.request({ method: 'eth_accounts' })\n\n    if (accounts?.length > 0) {\n      return true\n    }\n    return false\n  } catch {\n    return false\n  }\n}\n\nlet globalTried = false\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n  const [isManuallyDisconnect] = useLocalStorage('user-manually-disconnect')\n\n  useEffect(() => {\n    globalTried = tried\n  }, [tried])\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (!globalTried) setTried(true)\n    }, 3000)\n\n    return () => clearTimeout(timeout)\n  }, [])\n\n  useEffect(() => {\n    try {\n      isAuthorized()\n        .then(isAuthorized => {\n          if (isAuthorized && !isManuallyDisconnect) {\n            activate(injected, undefined, true).catch(() => {\n              setTried(true)\n            })\n          } else {\n            if (isMobile && window.ethereum) {\n              activate(injected, undefined, true).catch(() => {\n                setTried(true)\n              })\n            } else {\n              setTried(true)\n            }\n          }\n        })\n        .catch(e => {\n          console.log('Eagerly connect: authorize error', e)\n          setTried(true)\n        })\n    } catch (e) {\n      console.log('Eagerly connect: authorize error', e)\n      setTried(true)\n    }\n  }, [activate, isManuallyDisconnect]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n"],"mappings":";;;;;;;;;;;AAEA,SAASA,YAAY,IAAIC,gBAAzB,QAAiD,kBAAjD;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,oBAAlD;AAEA,SAASC,QAAT,QAAyB,eAAzB;AAGA,OAAO,IAAMC,SAEZ,GAAGF,kBAAkB,CAACG,MAAnB,CACF,UAACC,GAAD,EAAMC,GAAN,EAAc;EACZD,GAAG,CAACC,GAAD,CAAH,GAAW,IAAIZ,MAAM,CAACS,SAAP,CAAiBI,eAArB,CAAqCP,aAAa,CAACM,GAAD,CAAb,CAAmBE,MAAxD,CAAX;EACA,OAAOH,GAAP;AACD,CAJC,EAKF,EALE,CAFG;AAYP,OAAO,SAASI,kBAAT,GAA+F;EAAA;;EACpG,IAAMC,OAAO,GAAGjB,gBAAgB,EAAhC,CADoG,CAEpG;;EAEA,IAAQkB,OAAR,GAA2CD,OAA3C,CAAQC,OAAR;EAAA,IAAiBC,OAAjB,GAA2CF,OAA3C,CAAiBE,OAAjB;EAAA,IAA6BC,SAA7B,4BAA2CH,OAA3C;;EACA,IAAMI,uBAAuB,GAAGhB,WAAW,CAAoB,UAAAiB,KAAK;IAAA,OAAIA,KAAK,CAACC,WAAN,CAAkBF,uBAAtB;EAAA,CAAzB,CAA3C;;EACA,IAAIJ,OAAO,CAACO,MAAR,IAAkBP,OAAO,CAACE,OAA9B,EAAuC;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAOF,OAAP;EACD,CAXD,MAWO;IACL;MACEC,OAAO,EAAER,SAAS,CAACW,uBAAD,CADpB;MAEEF,OAAO,EAAEE;IAFX,GAGKD,SAHL;EAKD;AACF;;GAxBeJ,kB;UACEhB,gB,EAIgBK,W;;;SAqBnBoB,Y;;;;;6EAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IACOC,MAAM,CAACC,QADd;cAAA;cAAA;YAAA;;YAAA,iCAEW,KAFX;;UAAA;YAAA;YAAA;YAAA,OAM2BD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;cAAEC,MAAM,EAAE;YAAV,CAAxB,CAN3B;;UAAA;YAMUC,QANV;;YAAA,MAQQ,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,IAAmB,CAR3B;cAAA;cAAA;YAAA;;YAAA,iCASa,IATb;;UAAA;YAAA,iCAWW,KAXX;;UAAA;YAAA;YAAA;YAAA,iCAaW,KAbX;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAiBA,IAAIC,WAAW,GAAG,KAAlB;AAEA,OAAO,SAASC,eAAT,GAA2B;EAAA;;EAChC,wBAA6BjC,gBAAgB,EAA7C;EAAA,IAAQkC,QAAR,qBAAQA,QAAR;EAAA,IAAkBV,MAAlB,qBAAkBA,MAAlB,CADgC,CACgB;;;EAChD,gBAA0BrB,QAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAOgC,KAAP;EAAA,IAAcC,QAAd;;EACA,uBAA+B9B,eAAe,CAAC,0BAAD,CAA9C;EAAA;EAAA,IAAO+B,oBAAP;;EAEAnC,SAAS,CAAC,YAAM;IACd8B,WAAW,GAAGG,KAAd;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIAjC,SAAS,CAAC,YAAM;IACd,IAAMoC,OAAO,GAAGC,UAAU,CAAC,YAAM;MAC/B,IAAI,CAACP,WAAL,EAAkBI,QAAQ,CAAC,IAAD,CAAR;IACnB,CAFyB,EAEvB,IAFuB,CAA1B;IAIA,OAAO;MAAA,OAAMI,YAAY,CAACF,OAAD,CAAlB;IAAA,CAAP;EACD,CANQ,EAMN,EANM,CAAT;EAQApC,SAAS,CAAC,YAAM;IACd,IAAI;MACFuB,YAAY,GACTgB,IADH,CACQ,UAAAhB,YAAY,EAAI;QACpB,IAAIA,YAAY,IAAI,CAACY,oBAArB,EAA2C;UACzCH,QAAQ,CAACzB,QAAD,EAAWiC,SAAX,EAAsB,IAAtB,CAAR,CAAoCC,KAApC,CAA0C,YAAM;YAC9CP,QAAQ,CAAC,IAAD,CAAR;UACD,CAFD;QAGD,CAJD,MAIO;UACL,IAAIhC,QAAQ,IAAIsB,MAAM,CAACC,QAAvB,EAAiC;YAC/BO,QAAQ,CAACzB,QAAD,EAAWiC,SAAX,EAAsB,IAAtB,CAAR,CAAoCC,KAApC,CAA0C,YAAM;cAC9CP,QAAQ,CAAC,IAAD,CAAR;YACD,CAFD;UAGD,CAJD,MAIO;YACLA,QAAQ,CAAC,IAAD,CAAR;UACD;QACF;MACF,CAfH,EAgBGO,KAhBH,CAgBS,UAAAC,CAAC,EAAI;QACVC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,CAAhD;QACAR,QAAQ,CAAC,IAAD,CAAR;MACD,CAnBH;IAoBD,CArBD,CAqBE,OAAOQ,CAAP,EAAU;MACVC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,CAAhD;MACAR,QAAQ,CAAC,IAAD,CAAR;IACD;EACF,CA1BQ,EA0BN,CAACF,QAAD,EAAWG,oBAAX,CA1BM,CAAT,CAjBgC,CA2CK;EAErC;;EACAnC,SAAS,CAAC,YAAM;IACd,IAAIsB,MAAJ,EAAY;MACVY,QAAQ,CAAC,IAAD,CAAR;IACD;EACF,CAJQ,EAIN,CAACZ,MAAD,CAJM,CAAT;EAMA,OAAOW,KAAP;AACD;AAED;AACA;AACA;AACA;;IA1DgBF,e;UACejC,gB,EAEEM,e;;;AAwDjC,OAAO,SAASyC,mBAAT,GAA+C;EAAA;;EAAA,IAAlBC,QAAkB,uEAAP,KAAO;;EACpD,yBAAoChD,gBAAgB,EAApD;EAAA,IAAQwB,MAAR,sBAAQA,MAAR;EAAA,IAAgByB,KAAhB,sBAAgBA,KAAhB;EAAA,IAAuBf,QAAvB,sBAAuBA,QAAvB,CADoD,CACG;;;EAEvDhC,SAAS,CAAC,YAAM;IACd,cAAqBwB,MAArB;IAAA,IAAQC,QAAR,WAAQA,QAAR;;IACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACuB,EAArB,IAA2B,CAAC1B,MAA5B,IAAsC,CAACyB,KAAvC,IAAgD,CAACD,QAArD,EAA+D;MAC7D,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;QAC/B;QACAjB,QAAQ,CAACzB,QAAD,EAAWiC,SAAX,EAAsB,IAAtB,CAAR,CAAoCC,KAApC,CAA0C,UAAAM,KAAK,EAAI;UACjDJ,OAAO,CAACI,KAAR,CAAc,wCAAd,EAAwDA,KAAxD;QACD,CAFD;MAGD,CALD;;MAOA,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACtB,QAAD,EAAwB;QACpD,IAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;UACvB;UACAG,QAAQ,CAACzB,QAAD,EAAWiC,SAAX,EAAsB,IAAtB,CAAR,CAAoCC,KAApC,CAA0C,UAAAM,KAAK,EAAI;YACjDJ,OAAO,CAACI,KAAR,CAAc,2CAAd,EAA2DA,KAA3D;UACD,CAFD;QAGD;MACF,CAPD;;MASAtB,QAAQ,CAACuB,EAAT,CAAY,cAAZ,EAA4BC,kBAA5B;MACAxB,QAAQ,CAACuB,EAAT,CAAY,iBAAZ,EAA+BE,qBAA/B;MAEA,OAAO,YAAM;QACX,IAAIzB,QAAQ,CAAC0B,cAAb,EAA6B;UAC3B1B,QAAQ,CAAC0B,cAAT,CAAwB,cAAxB,EAAwCF,kBAAxC;UACAxB,QAAQ,CAAC0B,cAAT,CAAwB,iBAAxB,EAA2CD,qBAA3C;QACD;MACF,CALD;IAMD;;IACD,OAAOV,SAAP;EACD,CA9BQ,EA8BN,CAAClB,MAAD,EAASyB,KAAT,EAAgBD,QAAhB,EAA0Bd,QAA1B,CA9BM,CAAT;AA+BD;;IAlCea,mB;UACsB/C,gB"},"metadata":{},"sourceType":"module"}