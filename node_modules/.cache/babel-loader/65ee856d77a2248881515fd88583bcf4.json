{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Token } from '@kyberswap/ks-sdk-core';\nimport { isAddress } from '../../utils';\nvar LIST_DEFAULT = {\n  name: '',\n  timestamp: '',\n  version: {\n    major: 0,\n    minor: 0,\n    patch: 0\n  },\n  keywords: [],\n  tags: [],\n  logoURI: ''\n};\nexport var WrappedTokenInfo = /*#__PURE__*/function (_Token) {\n  _inherits(WrappedTokenInfo, _Token);\n\n  var _super = _createSuper(WrappedTokenInfo);\n\n  function WrappedTokenInfo(tokenInfo) {\n    var _this;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LIST_DEFAULT;\n\n    _classCallCheck(this, WrappedTokenInfo);\n\n    _this = _super.call(this, tokenInfo.chainId, isAddress(tokenInfo.address) || tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    _this.isNative = false;\n    _this.isToken = true;\n    _this.list = void 0;\n    _this.isWhitelisted = false;\n    _this.tokenInfo = void 0;\n    _this._tags = null;\n    _this.tokenInfo = tokenInfo;\n    if (tokenInfo.isWhitelisted) _this.isWhitelisted = tokenInfo.isWhitelisted;\n    var name = list.name,\n        timestamp = list.timestamp,\n        version = list.version,\n        keywords = list.keywords,\n        tags = list.tags,\n        logoURI = list.logoURI;\n    _this.list = {\n      name: name,\n      timestamp: timestamp,\n      version: version,\n      keywords: keywords,\n      tags: tags,\n      logoURI: logoURI\n    };\n    return _this;\n  }\n\n  _createClass(WrappedTokenInfo, [{\n    key: \"logoURI\",\n    get: function get() {\n      return this.tokenInfo.logoURI;\n    }\n  }, {\n    key: \"tags\",\n    get: function get() {\n      if (this._tags !== null) return this._tags;\n      if (!this.tokenInfo.tags) return this._tags = [];\n      var listTags = this.list.tags;\n      if (!listTags) return this._tags = [];\n      return this._tags = this.tokenInfo.tags.map(function (tagId) {\n        return _objectSpread(_objectSpread({}, listTags[tagId]), {}, {\n          id: tagId\n        });\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return other.chainId === this.chainId && other.isToken && other.address.toLowerCase() === this.address.toLowerCase();\n    }\n  }, {\n    key: \"sortsBefore\",\n    value: function sortsBefore(other) {\n      if (this.equals(other)) throw new Error('Addresses should not be equal');\n      return this.address.toLowerCase() < other.address.toLowerCase();\n    }\n  }, {\n    key: \"wrapped\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return WrappedTokenInfo;\n}(Token);","map":{"version":3,"names":["Token","isAddress","LIST_DEFAULT","name","timestamp","version","major","minor","patch","keywords","tags","logoURI","WrappedTokenInfo","tokenInfo","list","chainId","address","decimals","symbol","isNative","isToken","isWhitelisted","_tags","listTags","map","tagId","id","other","toLowerCase","equals","Error"],"sources":["/Applications/XAMPP/voxel-interface/src/state/lists/wrappedTokenInfo.ts"],"sourcesContent":["import { Token } from '@kyberswap/ks-sdk-core'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\n\nimport { isAddress } from '../../utils'\n\ntype TagDetails = Tags[keyof Tags]\ninterface TagInfo extends TagDetails {\n  id: string\n}\n/**\n * Token instances created from token info on a token list.\n */\n\nexport type LiteTokenList = Omit<TokenList, 'tokens'>\n\nconst LIST_DEFAULT = {\n  name: '',\n  timestamp: '',\n  version: { major: 0, minor: 0, patch: 0 },\n  keywords: [],\n  tags: [] as unknown as Tags,\n  logoURI: '',\n}\n\nexport class WrappedTokenInfo extends Token {\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n  public readonly list: LiteTokenList\n  public readonly isWhitelisted: boolean = false\n\n  public readonly tokenInfo: TokenInfo\n\n  constructor(tokenInfo: TokenInfo & { isWhitelisted?: boolean }, list: LiteTokenList = LIST_DEFAULT) {\n    super(\n      tokenInfo.chainId,\n      isAddress(tokenInfo.address) || tokenInfo.address,\n      tokenInfo.decimals,\n      tokenInfo.symbol,\n      tokenInfo.name,\n    )\n    this.tokenInfo = tokenInfo\n    if (tokenInfo.isWhitelisted) this.isWhitelisted = tokenInfo.isWhitelisted\n    const { name, timestamp, version, keywords, tags, logoURI } = list\n    this.list = { name, timestamp, version, keywords, tags, logoURI }\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n\n  private _tags: TagInfo[] | null = null\n  public get tags(): TagInfo[] {\n    if (this._tags !== null) return this._tags\n    if (!this.tokenInfo.tags) return (this._tags = [])\n    const listTags = this.list.tags\n    if (!listTags) return (this._tags = [])\n\n    return (this._tags = this.tokenInfo.tags.map(tagId => {\n      return {\n        ...listTags[tagId],\n        id: tagId,\n      }\n    }))\n  }\n\n  equals(other: Token): boolean {\n    return other.chainId === this.chainId && other.isToken && other.address.toLowerCase() === this.address.toLowerCase()\n  }\n\n  sortsBefore(other: Token): boolean {\n    if (this.equals(other)) throw new Error('Addresses should not be equal')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  public get wrapped(): Token {\n    return this\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}