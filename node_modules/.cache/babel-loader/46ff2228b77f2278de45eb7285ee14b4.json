{"ast":null,"code":"import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n/**\n * Configures global error listeners\n */\n\nfunction registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\n\n\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n\n  if (activeTransaction) {\n    var status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(\"[Tracing] Transaction: \".concat(status, \" -> Global error occured\"));\n    activeTransaction.setStatus(status);\n  }\n}\n\nexport { registerErrorInstrumentation };","map":null,"metadata":{},"sourceType":"module"}