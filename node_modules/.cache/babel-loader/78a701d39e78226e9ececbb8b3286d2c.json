{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nvar VISIBILITY_STATE_SUPPORTED = ('visibilityState' in document);\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\n}\n/**\n * Returns whether the window is currently visible to the user.\n */\n\n\nexport default function useIsWindowVisible() {\n  _s();\n\n  var _useState = useState(isWindowVisible()),\n      _useState2 = _slicedToArray(_useState, 2),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var listener = useCallback(function () {\n    setFocused(isWindowVisible());\n  }, [setFocused]);\n  useEffect(function () {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\n    document.addEventListener('visibilitychange', listener);\n    return function () {\n      document.removeEventListener('visibilitychange', listener);\n    };\n  }, [listener]);\n  return focused;\n}\n\n_s(useIsWindowVisible, \"YTZXx2+X9K/wAcfl+YFpqZyuiX0=\");","map":{"version":3,"names":["useCallback","useEffect","useState","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","undefined","addEventListener","removeEventListener"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useIsWindowVisible.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,IAAMC,0BAA0B,IAAG,qBAAqBC,QAAxB,CAAhC;;AAEA,SAASC,eAAT,GAA2B;EACzB,OAAO,CAACF,0BAAD,IAA+BC,QAAQ,CAACE,eAAT,KAA6B,QAAnE;AACD;AAED;AACA;AACA;;;AACA,eAAe,SAASC,kBAAT,GAAuC;EAAA;;EACpD,gBAA8BL,QAAQ,CAAUG,eAAe,EAAzB,CAAtC;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,QAAQ,GAAGV,WAAW,CAAC,YAAM;IACjCS,UAAU,CAACJ,eAAe,EAAhB,CAAV;EACD,CAF2B,EAEzB,CAACI,UAAD,CAFyB,CAA5B;EAIAR,SAAS,CAAC,YAAM;IACd,IAAI,CAACE,0BAAL,EAAiC,OAAOQ,SAAP;IAEjCP,QAAQ,CAACQ,gBAAT,CAA0B,kBAA1B,EAA8CF,QAA9C;IACA,OAAO,YAAM;MACXN,QAAQ,CAACS,mBAAT,CAA6B,kBAA7B,EAAiDH,QAAjD;IACD,CAFD;EAGD,CAPQ,EAON,CAACA,QAAD,CAPM,CAAT;EASA,OAAOF,OAAP;AACD;;GAhBuBD,kB"},"metadata":{},"sourceType":"module"}