{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { setError, setLoading, setSelectedPool, setSharedPoolId, setUrlOnEthPowAck, updatePools } from './actions';\nvar initialState = {\n  pools: [],\n  loading: false,\n  error: undefined,\n  selectedPool: undefined,\n  sharedPoolId: undefined,\n  urlOnEthPoWAckModal: ''\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(updatePools, function (state, _ref) {\n    var pools = _ref.payload.pools;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      pools: pools,\n      selectedPool: undefined\n    });\n  }).addCase(setLoading, function (state, _ref2) {\n    var loading = _ref2.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: loading,\n      selectedPool: undefined\n    });\n  }).addCase(setError, function (state, _ref3) {\n    var error = _ref3.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      error: error,\n      selectedPool: undefined\n    });\n  }).addCase(setSelectedPool, function (state, _ref4) {\n    var _ref4$payload = _ref4.payload,\n        poolData = _ref4$payload.poolData,\n        myLiquidity = _ref4$payload.myLiquidity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      selectedPool: {\n        poolData: poolData,\n        myLiquidity: myLiquidity\n      }\n    });\n  }).addCase(setSharedPoolId, function (state, _ref5) {\n    var poolId = _ref5.payload.poolId;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      sharedPoolId: poolId\n    });\n  }).addCase(setUrlOnEthPowAck, function (state, _ref6) {\n    var url = _ref6.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      urlOnEthPoWAckModal: url\n    });\n  });\n});","map":{"version":3,"names":["createReducer","setError","setLoading","setSelectedPool","setSharedPoolId","setUrlOnEthPowAck","updatePools","initialState","pools","loading","error","undefined","selectedPool","sharedPoolId","urlOnEthPoWAckModal","builder","addCase","state","payload","poolData","myLiquidity","poolId","url"],"sources":["/Applications/XAMPP/voxel-interface/src/state/pools/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport { setError, setLoading, setSelectedPool, setSharedPoolId, setUrlOnEthPowAck, updatePools } from './actions'\nimport { SubgraphPoolData, UserLiquidityPosition } from './hooks'\n\ninterface SelectedPool {\n  poolData: SubgraphPoolData\n  myLiquidity: UserLiquidityPosition | undefined\n}\n\nexport interface PoolsState {\n  readonly pools: SubgraphPoolData[]\n  readonly loading: boolean\n  readonly error: Error | undefined\n  readonly selectedPool: SelectedPool | undefined\n  readonly sharedPoolId: string | undefined\n  readonly urlOnEthPoWAckModal: string\n}\n\nconst initialState: PoolsState = {\n  pools: [],\n  loading: false,\n  error: undefined,\n  selectedPool: undefined,\n  sharedPoolId: undefined,\n  urlOnEthPoWAckModal: '',\n}\n\nexport default createReducer<PoolsState>(initialState, builder =>\n  builder\n    .addCase(updatePools, (state, { payload: { pools } }) => {\n      return {\n        ...state,\n        pools,\n        selectedPool: undefined,\n      }\n    })\n    .addCase(setLoading, (state, { payload: loading }) => {\n      return {\n        ...state,\n        loading,\n        selectedPool: undefined,\n      }\n    })\n    .addCase(setError, (state, { payload: error }) => {\n      return {\n        ...state,\n        error,\n        selectedPool: undefined,\n      }\n    })\n    .addCase(setSelectedPool, (state, { payload: { poolData, myLiquidity } }) => {\n      return {\n        ...state,\n        selectedPool: {\n          poolData,\n          myLiquidity,\n        },\n      }\n    })\n    .addCase(setSharedPoolId, (state, { payload: { poolId } }) => {\n      return {\n        ...state,\n        sharedPoolId: poolId,\n      }\n    })\n    .addCase(setUrlOnEthPowAck, (state, { payload: url }) => {\n      return {\n        ...state,\n        urlOnEthPoWAckModal: url,\n      }\n    }),\n)\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,eAA/B,EAAgDC,eAAhD,EAAiEC,iBAAjE,EAAoFC,WAApF,QAAuG,WAAvG;AAiBA,IAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE,EADwB;EAE/BC,OAAO,EAAE,KAFsB;EAG/BC,KAAK,EAAEC,SAHwB;EAI/BC,YAAY,EAAED,SAJiB;EAK/BE,YAAY,EAAEF,SALiB;EAM/BG,mBAAmB,EAAE;AANU,CAAjC;AASA,eAAed,aAAa,CAAaO,YAAb,EAA2B,UAAAQ,OAAO;EAAA,OAC5DA,OAAO,CACJC,OADH,CACWV,WADX,EACwB,UAACW,KAAD,QAAmC;IAAA,IAAdT,KAAc,QAAzBU,OAAyB,CAAdV,KAAc;IACvD,uCACKS,KADL;MAEET,KAAK,EAALA,KAFF;MAGEI,YAAY,EAAED;IAHhB;EAKD,CAPH,EAQGK,OARH,CAQWd,UARX,EAQuB,UAACe,KAAD,SAAiC;IAAA,IAAdR,OAAc,SAAvBS,OAAuB;IACpD,uCACKD,KADL;MAEER,OAAO,EAAPA,OAFF;MAGEG,YAAY,EAAED;IAHhB;EAKD,CAdH,EAeGK,OAfH,CAeWf,QAfX,EAeqB,UAACgB,KAAD,SAA+B;IAAA,IAAZP,KAAY,SAArBQ,OAAqB;IAChD,uCACKD,KADL;MAEEP,KAAK,EAALA,KAFF;MAGEE,YAAY,EAAED;IAHhB;EAKD,CArBH,EAsBGK,OAtBH,CAsBWb,eAtBX,EAsB4B,UAACc,KAAD,SAAmD;IAAA,0BAAzCC,OAAyC;IAAA,IAA9BC,QAA8B,iBAA9BA,QAA8B;IAAA,IAApBC,WAAoB,iBAApBA,WAAoB;IAC3E,uCACKH,KADL;MAEEL,YAAY,EAAE;QACZO,QAAQ,EAARA,QADY;QAEZC,WAAW,EAAXA;MAFY;IAFhB;EAOD,CA9BH,EA+BGJ,OA/BH,CA+BWZ,eA/BX,EA+B4B,UAACa,KAAD,SAAoC;IAAA,IAAfI,MAAe,SAA1BH,OAA0B,CAAfG,MAAe;IAC5D,uCACKJ,KADL;MAEEJ,YAAY,EAAEQ;IAFhB;EAID,CApCH,EAqCGL,OArCH,CAqCWX,iBArCX,EAqC8B,UAACY,KAAD,SAA6B;IAAA,IAAVK,GAAU,SAAnBJ,OAAmB;IACvD,uCACKD,KADL;MAEEH,mBAAmB,EAAEQ;IAFvB;EAID,CA1CH,CAD4D;AAAA,CAAlC,CAA5B"},"metadata":{},"sourceType":"module"}