{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { ChainId, WETH } from '@kyberswap/ks-sdk-core';\nimport useSWR from 'swr';\nimport { COINGECKO_API_URL } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { useActiveWeb3React } from 'hooks';\nexport default function useTokenInfo(token) {\n  _s();\n\n  var _data$market_data, _data$market_data$cur, _data$market_data2, _data$market_data2$ma, _data$market_data3, _data$market_data4, _data$market_data5, _data$market_data6, _data$market_data6$at, _data$market_data7, _data$market_data7$at, _data$market_data8, _data$market_data8$to;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId;\n\n  var fetcher = function fetcher(url) {\n    return url ? fetch(url).then(function (r) {\n      return r.json();\n    }) : Promise.reject({\n      data: {},\n      error: ''\n    });\n  };\n\n  var tokenAddress = ((token === null || token === void 0 ? void 0 : token.address) || '').toLowerCase();\n  var url = '';\n\n  if (tokenAddress === WETH[chainId].address.toLowerCase()) {\n    // If the token is native token, we have to use different endpoint\n    url = \"\".concat(COINGECKO_API_URL, \"/coins/\").concat(NETWORKS_INFO[chainId || ChainId.MAINNET].coingeckoNativeTokenId);\n  } else if (tokenAddress) {\n    url = \"\".concat(COINGECKO_API_URL, \"/coins/\").concat(NETWORKS_INFO[chainId || ChainId.MAINNET].coingeckoNetworkId, \"/contract/\").concat(tokenAddress);\n  }\n\n  var _useSWR = useSWR(url, fetcher, {\n    refreshInterval: 60000,\n    onErrorRetry: function onErrorRetry(error, key, config, revalidate, _ref) {\n      var retryCount = _ref.retryCount;\n      // Never retry on 404.\n      if (error.status === 404) return; // Only retry up to 10 times.\n\n      if (retryCount >= 10) return;\n\n      if (error.status === 403) {\n        // If API return 403, retry after 30 seconds.\n        setTimeout(function () {\n          return revalidate({\n            retryCount: retryCount\n          });\n        }, 30000);\n        return;\n      } // Retry after 20 seconds.\n\n\n      setTimeout(function () {\n        return revalidate({\n          retryCount: retryCount\n        });\n      }, 20000);\n    }\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error && process.env.NODE_ENV === 'development') {\n    console.error(error);\n  }\n\n  var loading = !data;\n  var result = {\n    price: (data === null || data === void 0 ? void 0 : (_data$market_data = data.market_data) === null || _data$market_data === void 0 ? void 0 : (_data$market_data$cur = _data$market_data.current_price) === null || _data$market_data$cur === void 0 ? void 0 : _data$market_data$cur.usd) || 0,\n    marketCap: (data === null || data === void 0 ? void 0 : (_data$market_data2 = data.market_data) === null || _data$market_data2 === void 0 ? void 0 : (_data$market_data2$ma = _data$market_data2.market_cap) === null || _data$market_data2$ma === void 0 ? void 0 : _data$market_data2$ma.usd) || 0,\n    marketCapRank: (data === null || data === void 0 ? void 0 : (_data$market_data3 = data.market_data) === null || _data$market_data3 === void 0 ? void 0 : _data$market_data3.market_cap_rank) || 0,\n    circulatingSupply: (data === null || data === void 0 ? void 0 : (_data$market_data4 = data.market_data) === null || _data$market_data4 === void 0 ? void 0 : _data$market_data4.circulating_supply) || 0,\n    totalSupply: (data === null || data === void 0 ? void 0 : (_data$market_data5 = data.market_data) === null || _data$market_data5 === void 0 ? void 0 : _data$market_data5.total_supply) || 0,\n    allTimeHigh: (data === null || data === void 0 ? void 0 : (_data$market_data6 = data.market_data) === null || _data$market_data6 === void 0 ? void 0 : (_data$market_data6$at = _data$market_data6.ath) === null || _data$market_data6$at === void 0 ? void 0 : _data$market_data6$at.usd) || 0,\n    allTimeLow: (data === null || data === void 0 ? void 0 : (_data$market_data7 = data.market_data) === null || _data$market_data7 === void 0 ? void 0 : (_data$market_data7$at = _data$market_data7.atl) === null || _data$market_data7$at === void 0 ? void 0 : _data$market_data7$at.usd) || 0,\n    tradingVolume: (data === null || data === void 0 ? void 0 : (_data$market_data8 = data.market_data) === null || _data$market_data8 === void 0 ? void 0 : (_data$market_data8$to = _data$market_data8.total_volume) === null || _data$market_data8$to === void 0 ? void 0 : _data$market_data8$to.usd) || 0,\n    description: (data === null || data === void 0 ? void 0 : data.description) || {\n      en: ''\n    },\n    name: (data === null || data === void 0 ? void 0 : data.name) || ''\n  };\n  return {\n    data: result,\n    loading: loading,\n    error: error\n  };\n}\n\n_s(useTokenInfo, \"WMl7BrBoSBRcBxV3os8PDCcPV1I=\", false, function () {\n  return [useActiveWeb3React, useSWR];\n});","map":{"version":3,"names":["ChainId","WETH","useSWR","COINGECKO_API_URL","NETWORKS_INFO","useActiveWeb3React","useTokenInfo","token","chainId","fetcher","url","fetch","then","r","json","Promise","reject","data","error","tokenAddress","address","toLowerCase","MAINNET","coingeckoNativeTokenId","coingeckoNetworkId","refreshInterval","onErrorRetry","key","config","revalidate","retryCount","status","setTimeout","process","env","NODE_ENV","console","loading","result","price","market_data","current_price","usd","marketCap","market_cap","marketCapRank","market_cap_rank","circulatingSupply","circulating_supply","totalSupply","total_supply","allTimeHigh","ath","allTimeLow","atl","tradingVolume","total_volume","description","en","name"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useTokenInfo.ts"],"sourcesContent":["import { ChainId, Token, WETH } from '@kyberswap/ks-sdk-core'\nimport useSWR from 'swr'\n\nimport { COINGECKO_API_URL } from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { useActiveWeb3React } from 'hooks'\n\nexport interface TokenInfo {\n  price: number\n  marketCap: number\n  marketCapRank: number\n  circulatingSupply: number\n  totalSupply: number\n  allTimeHigh: number\n  allTimeLow: number\n  tradingVolume: number\n  description: { en: string }\n  name: string\n}\n\nexport default function useTokenInfo(token: Token | undefined): { data: TokenInfo; loading: boolean; error: any } {\n  const { chainId } = useActiveWeb3React()\n\n  const fetcher = (url: string) => (url ? fetch(url).then(r => r.json()) : Promise.reject({ data: {}, error: '' }))\n\n  const tokenAddress = (token?.address || '').toLowerCase()\n\n  let url = ''\n\n  if (tokenAddress === WETH[chainId as ChainId].address.toLowerCase()) {\n    // If the token is native token, we have to use different endpoint\n    url = `${COINGECKO_API_URL}/coins/${NETWORKS_INFO[chainId || ChainId.MAINNET].coingeckoNativeTokenId}`\n  } else if (tokenAddress) {\n    url = `${COINGECKO_API_URL}/coins/${\n      NETWORKS_INFO[chainId || ChainId.MAINNET].coingeckoNetworkId\n    }/contract/${tokenAddress}`\n  }\n\n  const { data, error } = useSWR(url, fetcher, {\n    refreshInterval: 60000,\n    onErrorRetry: (error, key, config, revalidate, { retryCount }) => {\n      // Never retry on 404.\n      if (error.status === 404) return\n\n      // Only retry up to 10 times.\n      if (retryCount >= 10) return\n\n      if (error.status === 403) {\n        // If API return 403, retry after 30 seconds.\n        setTimeout(() => revalidate({ retryCount }), 30000)\n        return\n      }\n\n      // Retry after 20 seconds.\n      setTimeout(() => revalidate({ retryCount }), 20000)\n    },\n  })\n\n  if (error && process.env.NODE_ENV === 'development') {\n    console.error(error)\n  }\n\n  const loading = !data\n\n  const result = {\n    price: data?.market_data?.current_price?.usd || 0,\n    marketCap: data?.market_data?.market_cap?.usd || 0,\n    marketCapRank: data?.market_data?.market_cap_rank || 0,\n    circulatingSupply: data?.market_data?.circulating_supply || 0,\n    totalSupply: data?.market_data?.total_supply || 0,\n    allTimeHigh: data?.market_data?.ath?.usd || 0,\n    allTimeLow: data?.market_data?.atl?.usd || 0,\n    tradingVolume: data?.market_data?.total_volume?.usd || 0,\n    description: data?.description || { en: '' },\n    name: data?.name || '',\n  }\n\n  return { data: result, loading, error }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}