{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _asyncToGenerator = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriptionManager = void 0;\n\nvar PollingBlockTracker = require(\"eth-block-tracker\");\n\nvar createSubscriptionManager = require(\"eth-json-rpc-filters/subscriptionManager\");\n\nvar noop = function noop() {};\n\nvar SubscriptionManager = /*#__PURE__*/function () {\n  function SubscriptionManager(provider) {\n    _classCallCheck(this, SubscriptionManager);\n\n    var blockTracker = new PollingBlockTracker({\n      provider: provider,\n      pollingInterval: 15 * 1000,\n      setSkipCacheFlag: true\n    });\n\n    var _createSubscriptionMa = createSubscriptionManager({\n      blockTracker: blockTracker,\n      provider: provider\n    }),\n        events = _createSubscriptionMa.events,\n        middleware = _createSubscriptionMa.middleware;\n\n    this.events = events;\n    this.subscriptionMiddleware = middleware;\n  }\n\n  _createClass(SubscriptionManager, [{\n    key: \"handleRequest\",\n    value: function () {\n      var _handleRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = {};\n                _context.next = 3;\n                return this.subscriptionMiddleware(request, result, noop, noop);\n\n              case 3:\n                return _context.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleRequest(_x) {\n        return _handleRequest.apply(this, arguments);\n      }\n\n      return handleRequest;\n    }()\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.subscriptionMiddleware.destroy();\n    }\n  }]);\n\n  return SubscriptionManager;\n}();\n\nexports.SubscriptionManager = SubscriptionManager;","map":null,"metadata":{},"sourceType":"script"}