{"ast":null,"code":"import _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray(items, maxChunkSize) {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1');\n  if (items.length <= maxChunkSize) return [items];\n  var numChunks = Math.ceil(items.length / maxChunkSize);\n  var chunkSize = Math.ceil(items.length / numChunks);\n  return _toConsumableArray(Array(numChunks).keys()).map(function (ix) {\n    return items.slice(ix * chunkSize, ix * chunkSize + chunkSize);\n  });\n}","map":{"version":3,"names":["chunkArray","items","maxChunkSize","Error","length","numChunks","Math","ceil","chunkSize","Array","keys","map","ix","slice"],"sources":["/Applications/XAMPP/voxel-interface/src/utils/chunkArray.ts"],"sourcesContent":["// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map(ix => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n"],"mappings":";AAAA;AACA;AACA,eAAe,SAASA,UAAT,CAAuBC,KAAvB,EAAmCC,YAAnC,EAAgE;EAC7E,IAAIA,YAAY,GAAG,CAAnB,EAAsB,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;EACtB,IAAIF,KAAK,CAACG,MAAN,IAAgBF,YAApB,EAAkC,OAAO,CAACD,KAAD,CAAP;EAElC,IAAMI,SAAiB,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,CAACG,MAAN,GAAeF,YAAzB,CAA1B;EACA,IAAMM,SAAS,GAAGF,IAAI,CAACC,IAAL,CAAUN,KAAK,CAACG,MAAN,GAAeC,SAAzB,CAAlB;EAEA,OAAO,mBAAII,KAAK,CAACJ,SAAD,CAAL,CAAiBK,IAAjB,EAAJ,EAA6BC,GAA7B,CAAiC,UAAAC,EAAE;IAAA,OAAIX,KAAK,CAACY,KAAN,CAAYD,EAAE,GAAGJ,SAAjB,EAA4BI,EAAE,GAAGJ,SAAL,GAAiBA,SAA7C,CAAJ;EAAA,CAAnC,CAAP;AACD"},"metadata":{},"sourceType":"module"}