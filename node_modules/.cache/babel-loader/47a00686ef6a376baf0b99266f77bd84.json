{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/YieldPools/FairLaunchPools.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { ChainId } from '@kyberswap/ks-sdk-core';\nimport { useEffect, useState } from 'react';\nimport { Text } from 'rebass';\nimport ShareModal from 'components/ShareModal';\nimport { OUTSIDE_FAIRLAUNCH_ADDRESSES } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { useActiveWeb3React } from 'hooks';\nimport { useFairLaunchVersion } from 'hooks/useContract';\nimport useFairLaunch from 'hooks/useFairLaunch';\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel';\nimport useTheme from 'hooks/useTheme';\nimport { ApplicationModal } from 'state/application/actions';\nimport { useBlockNumber, useModalOpen, useOpenModal } from 'state/application/hooks';\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setYieldPoolsError } from 'state/farms/actions';\nimport { FairLaunchVersion } from 'state/farms/types';\nimport { useAppDispatch } from 'state/hooks';\nimport { ExternalLink } from 'theme';\nimport { useFarmRewards } from 'utils/dmm';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport { getFormattedTimeFromSecond } from 'utils/formatTime';\nimport HarvestAll from './HarvestAll';\nimport ListItem from './ListItem';\nimport { FairLaunchPoolsTitle, FairLaunchPoolsWrapper, ListItemWrapper } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar FairLaunchPools = function FairLaunchPools(_ref) {\n  _s();\n\n  var fairLaunchAddress = _ref.fairLaunchAddress,\n      farms = _ref.farms;\n  var dispatch = useAppDispatch();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId,\n      account = _useActiveWeb3React.account;\n\n  var networkRoute = chainId ? NETWORKS_INFO[chainId].route : undefined;\n  var theme = useTheme();\n  var blockNumber = useBlockNumber();\n  var totalRewards = useFarmRewards(farms);\n  var fairLaunchVersion = useFairLaunchVersion(fairLaunchAddress);\n\n  var _useFairLaunch = useFairLaunch(fairLaunchAddress),\n      harvestMultiplePools = _useFairLaunch.harvestMultiplePools;\n\n  var _useMixpanel = useMixpanel(),\n      mixpanelHandler = _useMixpanel.mixpanelHandler;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      sharedPoolAddress = _useState2[0],\n      setSharedPoolAddress = _useState2[1];\n\n  var openShareModal = useOpenModal(ApplicationModal.SHARE);\n  var isShareModalOpen = useModalOpen(ApplicationModal.SHARE);\n  var shareUrl = sharedPoolAddress ? window.location.origin + '/farms?search=' + sharedPoolAddress + '&tab=classic&networkId=' + networkRoute : undefined;\n\n  var handleHarvestAll = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var poolsHaveReward, txHash;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!chainId || !account)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              dispatch(setShowConfirm(true));\n              dispatch(setAttemptingTxn(true));\n              dispatch(setTxHash(''));\n              _context.prev = 5;\n              poolsHaveReward = (farms || []).filter(function (farm) {\n                var _farm$userData, _farm$userData2, _farm$userData2$rewar;\n\n                if (!((_farm$userData = farm.userData) !== null && _farm$userData !== void 0 && _farm$userData.rewards)) {\n                  return false;\n                }\n\n                var hasReward = (_farm$userData2 = farm.userData) === null || _farm$userData2 === void 0 ? void 0 : (_farm$userData2$rewar = _farm$userData2.rewards) === null || _farm$userData2$rewar === void 0 ? void 0 : _farm$userData2$rewar.some(function (value) {\n                  return BigNumber.from(value).gt(0);\n                });\n                return hasReward;\n              });\n              _context.next = 9;\n              return harvestMultiplePools(poolsHaveReward.map(function (farm) {\n                return farm.pid;\n              }));\n\n            case 9:\n              txHash = _context.sent;\n\n              if (txHash) {\n                mixpanelHandler(MIXPANEL_TYPE.ALL_REWARDS_HARVESTED, {\n                  reward_tokens_and_amounts: totalRewards && Object.assign.apply(Object, [{}].concat(_toConsumableArray(totalRewards.map(function (reward) {\n                    var _reward$token;\n\n                    if (reward !== null && reward !== void 0 && (_reward$token = reward.token) !== null && _reward$token !== void 0 && _reward$token.symbol) return _defineProperty({}, reward.token.symbol, getFullDisplayBalance(reward.amount, reward.token.decimals));\n                    return {};\n                  }))))\n                });\n              }\n\n              dispatch(setTxHash(txHash));\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0);\n              dispatch(setYieldPoolsError(_context.t0));\n\n            case 18:\n              dispatch(setAttemptingTxn(false));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 14]]);\n    }));\n\n    return function handleHarvestAll() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var currentTimestamp = Math.floor(Date.now() / 1000);\n  var farmsList = fairLaunchVersion === FairLaunchVersion.V1 ? (farms || []).map(function (farm) {\n    // TODO: hard code for SIPHER. Need to be remove later\n    var isSipherFarm = farm.fairLaunchAddress.toLowerCase() === '0xc0601973451d9369252Aee01397c0270CD2Ecd60'.toLowerCase() && chainId === ChainId.MAINNET;\n    var isFarmStarted = farm && blockNumber && farm.startBlock < blockNumber;\n    var isFarmEnded = farm && blockNumber && farm.endBlock < blockNumber;\n    var remainingBlocks;\n    var estimatedRemainingSeconds;\n    var formattedEstimatedRemainingTime;\n\n    if (!isFarmStarted) {\n      remainingBlocks = farm && blockNumber && farm.startBlock - blockNumber;\n      estimatedRemainingSeconds = remainingBlocks && remainingBlocks * NETWORKS_INFO[chainId || ChainId.MAINNET].averageBlockTimeInSeconds;\n      formattedEstimatedRemainingTime = estimatedRemainingSeconds && getFormattedTimeFromSecond(estimatedRemainingSeconds);\n    } else {\n      remainingBlocks = farm && blockNumber && farm.endBlock - blockNumber;\n      estimatedRemainingSeconds = remainingBlocks && remainingBlocks * NETWORKS_INFO[chainId || ChainId.MAINNET].averageBlockTimeInSeconds;\n      formattedEstimatedRemainingTime = estimatedRemainingSeconds && getFormattedTimeFromSecond(estimatedRemainingSeconds);\n    }\n\n    return _objectSpread(_objectSpread({}, farm), {}, {\n      time: \"\".concat(isSipherFarm ? '' : isFarmEnded ? 'Ended' : (isFarmStarted ? '' : 'Starting in ') + formattedEstimatedRemainingTime)\n    });\n  }) : (farms || []).map(function (farm) {\n    var isFarmStarted = farm && currentTimestamp && farm.startTime < currentTimestamp;\n    var isFarmEnded = farm && currentTimestamp && farm.endTime < currentTimestamp;\n    var formattedEstimatedRemainingTime;\n\n    if (!isFarmStarted) {\n      formattedEstimatedRemainingTime = getFormattedTimeFromSecond(farm.startTime - currentTimestamp);\n    } else {\n      formattedEstimatedRemainingTime = getFormattedTimeFromSecond(farm.endTime - currentTimestamp);\n    }\n\n    return _objectSpread(_objectSpread({}, farm), {}, {\n      time: \"\".concat(isFarmEnded ? 'Ended' : (isFarmStarted ? '' : 'Starting in ') + formattedEstimatedRemainingTime)\n    });\n  });\n  var displayFarms = farmsList.sort(function (a, b) {\n    return b.endBlock - a.endBlock;\n  });\n  var outsideFarm = OUTSIDE_FAIRLAUNCH_ADDRESSES[fairLaunchAddress];\n  useEffect(function () {\n    if (sharedPoolAddress) {\n      openShareModal();\n    }\n  }, [openShareModal, sharedPoolAddress]);\n  useEffect(function () {\n    setSharedPoolAddress(function (addr) {\n      if (!isShareModalOpen) {\n        return '';\n      }\n\n      return addr;\n    });\n  }, [isShareModalOpen, setSharedPoolAddress]);\n  return /*#__PURE__*/_jsxDEV(FairLaunchPoolsWrapper, {\n    children: [!!displayFarms.length && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FairLaunchPoolsTitle, {\n        justify: outsideFarm ? 'space-between' : 'flex-end',\n        children: [outsideFarm && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 14,\n          fontStyle: \"italic\",\n          color: theme.subText,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"This pool require {0} LP Tokens. Get the LP Tokens <0>here \\u2197</0>\",\n            values: {\n              0: outsideFarm.name\n            },\n            components: {\n              0: /*#__PURE__*/_jsxDEV(ExternalLink, {\n                href: outsideFarm.getLPTokenLink\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, _this)\n            }\n          }, void 0, false, void 0, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(HarvestAll, {\n          totalRewards: totalRewards,\n          onHarvestAll: handleHarvestAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(ListItemWrapper, {\n        children: displayFarms.map(function (farm, index) {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            farm: farm,\n            oddRow: (index + 1) % 2 !== 0,\n            setSharedPoolAddress: setSharedPoolAddress\n          }, \"\".concat(farm.fairLaunchAddress, \"_\").concat(farm.stakeToken), false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ShareModal, {\n      title:\n      /*i18n*/\n      i18n._(\"Share this farm with your friends!\"),\n      url: shareUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FairLaunchPools, \"84c4lWoy8rrlq6IyRXisrSFNe6Y=\", false, function () {\n  return [useAppDispatch, useActiveWeb3React, useTheme, useBlockNumber, useFarmRewards, useFairLaunchVersion, useFairLaunch, useMixpanel, useOpenModal, useModalOpen];\n});\n\n_c = FairLaunchPools;\nexport default FairLaunchPools;\n\nvar _c;\n\n$RefreshReg$(_c, \"FairLaunchPools\");","map":{"version":3,"names":["BigNumber","ChainId","useEffect","useState","Text","ShareModal","OUTSIDE_FAIRLAUNCH_ADDRESSES","NETWORKS_INFO","useActiveWeb3React","useFairLaunchVersion","useFairLaunch","useMixpanel","MIXPANEL_TYPE","useTheme","ApplicationModal","useBlockNumber","useModalOpen","useOpenModal","setAttemptingTxn","setShowConfirm","setTxHash","setYieldPoolsError","FairLaunchVersion","useAppDispatch","ExternalLink","useFarmRewards","getFullDisplayBalance","getFormattedTimeFromSecond","HarvestAll","ListItem","FairLaunchPoolsTitle","FairLaunchPoolsWrapper","ListItemWrapper","FairLaunchPools","fairLaunchAddress","farms","dispatch","chainId","account","networkRoute","route","undefined","theme","blockNumber","totalRewards","fairLaunchVersion","harvestMultiplePools","mixpanelHandler","sharedPoolAddress","setSharedPoolAddress","openShareModal","SHARE","isShareModalOpen","shareUrl","window","location","origin","handleHarvestAll","poolsHaveReward","filter","farm","userData","rewards","hasReward","some","value","from","gt","map","pid","txHash","ALL_REWARDS_HARVESTED","reward_tokens_and_amounts","Object","assign","reward","token","symbol","amount","decimals","console","error","currentTimestamp","Math","floor","Date","now","farmsList","V1","isSipherFarm","toLowerCase","MAINNET","isFarmStarted","startBlock","isFarmEnded","endBlock","remainingBlocks","estimatedRemainingSeconds","formattedEstimatedRemainingTime","averageBlockTimeInSeconds","time","startTime","endTime","displayFarms","sort","a","b","outsideFarm","addr","length","subText","name","getLPTokenLink","index","stakeToken"],"sources":["/Applications/XAMPP/voxel-interface/src/components/YieldPools/FairLaunchPools.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId } from '@kyberswap/ks-sdk-core'\nimport { Trans, t } from '@lingui/macro'\nimport { useEffect, useState } from 'react'\nimport { Text } from 'rebass'\n\nimport ShareModal from 'components/ShareModal'\nimport { OUTSIDE_FAIRLAUNCH_ADDRESSES } from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { useActiveWeb3React } from 'hooks'\nimport { useFairLaunchVersion } from 'hooks/useContract'\nimport useFairLaunch from 'hooks/useFairLaunch'\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\nimport useTheme from 'hooks/useTheme'\nimport { ApplicationModal } from 'state/application/actions'\nimport { useBlockNumber, useModalOpen, useOpenModal } from 'state/application/hooks'\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setYieldPoolsError } from 'state/farms/actions'\nimport { FairLaunchVersion, Farm } from 'state/farms/types'\nimport { useAppDispatch } from 'state/hooks'\nimport { ExternalLink } from 'theme'\nimport { useFarmRewards } from 'utils/dmm'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getFormattedTimeFromSecond } from 'utils/formatTime'\n\nimport HarvestAll from './HarvestAll'\nimport ListItem from './ListItem'\nimport { FairLaunchPoolsTitle, FairLaunchPoolsWrapper, ListItemWrapper } from './styleds'\n\ninterface FarmsListProps {\n  fairLaunchAddress: string\n  farms?: Farm[]\n}\n\nconst FairLaunchPools = ({ fairLaunchAddress, farms }: FarmsListProps) => {\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const networkRoute = chainId ? NETWORKS_INFO[chainId].route : undefined\n  const theme = useTheme()\n  const blockNumber = useBlockNumber()\n  const totalRewards = useFarmRewards(farms)\n  const fairLaunchVersion = useFairLaunchVersion(fairLaunchAddress)\n  const { harvestMultiplePools } = useFairLaunch(fairLaunchAddress)\n  const { mixpanelHandler } = useMixpanel()\n\n  const [sharedPoolAddress, setSharedPoolAddress] = useState('')\n  const openShareModal = useOpenModal(ApplicationModal.SHARE)\n  const isShareModalOpen = useModalOpen(ApplicationModal.SHARE)\n\n  const shareUrl = sharedPoolAddress\n    ? window.location.origin + '/farms?search=' + sharedPoolAddress + '&tab=classic&networkId=' + networkRoute\n    : undefined\n\n  const handleHarvestAll = async () => {\n    if (!chainId || !account) {\n      return\n    }\n\n    dispatch(setShowConfirm(true))\n    dispatch(setAttemptingTxn(true))\n    dispatch(setTxHash(''))\n\n    try {\n      const poolsHaveReward = (farms || []).filter(farm => {\n        if (!farm.userData?.rewards) {\n          return false\n        }\n\n        const hasReward = farm.userData?.rewards?.some(value => BigNumber.from(value).gt(0))\n\n        return hasReward\n      })\n\n      const txHash = await harvestMultiplePools(poolsHaveReward.map(farm => farm.pid))\n      if (txHash) {\n        mixpanelHandler(MIXPANEL_TYPE.ALL_REWARDS_HARVESTED, {\n          reward_tokens_and_amounts:\n            totalRewards &&\n            Object.assign(\n              {},\n              ...totalRewards.map(reward => {\n                if (reward?.token?.symbol)\n                  return { [reward.token.symbol]: getFullDisplayBalance(reward.amount, reward.token.decimals) }\n                return {}\n              }),\n            ),\n        })\n      }\n      dispatch(setTxHash(txHash))\n    } catch (err) {\n      console.error(err)\n      dispatch(setYieldPoolsError(err as Error))\n    }\n\n    dispatch(setAttemptingTxn(false))\n  }\n\n  const currentTimestamp = Math.floor(Date.now() / 1000)\n\n  const farmsList =\n    fairLaunchVersion === FairLaunchVersion.V1\n      ? (farms || []).map(farm => {\n          // TODO: hard code for SIPHER. Need to be remove later\n          const isSipherFarm =\n            farm.fairLaunchAddress.toLowerCase() === '0xc0601973451d9369252Aee01397c0270CD2Ecd60'.toLowerCase() &&\n            chainId === ChainId.MAINNET\n\n          const isFarmStarted = farm && blockNumber && farm.startBlock < blockNumber\n          const isFarmEnded = farm && blockNumber && farm.endBlock < blockNumber\n\n          let remainingBlocks: number | false | undefined\n          let estimatedRemainingSeconds: number | false | undefined\n          let formattedEstimatedRemainingTime: string | false | 0 | undefined\n\n          if (!isFarmStarted) {\n            remainingBlocks = farm && blockNumber && farm.startBlock - blockNumber\n            estimatedRemainingSeconds =\n              remainingBlocks && remainingBlocks * NETWORKS_INFO[chainId || ChainId.MAINNET].averageBlockTimeInSeconds\n            formattedEstimatedRemainingTime =\n              estimatedRemainingSeconds && getFormattedTimeFromSecond(estimatedRemainingSeconds)\n          } else {\n            remainingBlocks = farm && blockNumber && farm.endBlock - blockNumber\n            estimatedRemainingSeconds =\n              remainingBlocks && remainingBlocks * NETWORKS_INFO[chainId || ChainId.MAINNET].averageBlockTimeInSeconds\n            formattedEstimatedRemainingTime =\n              estimatedRemainingSeconds && getFormattedTimeFromSecond(estimatedRemainingSeconds)\n          }\n\n          return {\n            ...farm,\n            time: `${\n              isSipherFarm\n                ? ''\n                : isFarmEnded\n                ? 'Ended'\n                : (isFarmStarted ? '' : 'Starting in ') + formattedEstimatedRemainingTime\n            }`,\n          }\n        })\n      : (farms || []).map(farm => {\n          const isFarmStarted = farm && currentTimestamp && farm.startTime < currentTimestamp\n          const isFarmEnded = farm && currentTimestamp && farm.endTime < currentTimestamp\n\n          let formattedEstimatedRemainingTime: string\n\n          if (!isFarmStarted) {\n            formattedEstimatedRemainingTime = getFormattedTimeFromSecond(farm.startTime - currentTimestamp)\n          } else {\n            formattedEstimatedRemainingTime = getFormattedTimeFromSecond(farm.endTime - currentTimestamp)\n          }\n\n          return {\n            ...farm,\n            time: `${isFarmEnded ? 'Ended' : (isFarmStarted ? '' : 'Starting in ') + formattedEstimatedRemainingTime}`,\n          }\n        })\n\n  const displayFarms = farmsList.sort((a, b) => b.endBlock - a.endBlock)\n\n  const outsideFarm = OUTSIDE_FAIRLAUNCH_ADDRESSES[fairLaunchAddress]\n\n  useEffect(() => {\n    if (sharedPoolAddress) {\n      openShareModal()\n    }\n  }, [openShareModal, sharedPoolAddress])\n\n  useEffect(() => {\n    setSharedPoolAddress(addr => {\n      if (!isShareModalOpen) {\n        return ''\n      }\n\n      return addr\n    })\n  }, [isShareModalOpen, setSharedPoolAddress])\n\n  return (\n    <FairLaunchPoolsWrapper>\n      {!!displayFarms.length && (\n        <>\n          <FairLaunchPoolsTitle justify={outsideFarm ? 'space-between' : 'flex-end'}>\n            {outsideFarm && (\n              <Text fontSize={14} fontStyle=\"italic\" color={theme.subText}>\n                <Trans>\n                  This pool require {outsideFarm.name} LP Tokens. Get the LP Tokens{' '}\n                  <ExternalLink href={outsideFarm.getLPTokenLink}>here ↗</ExternalLink>{' '}\n                </Trans>\n              </Text>\n            )}\n\n            <HarvestAll totalRewards={totalRewards} onHarvestAll={handleHarvestAll} />\n          </FairLaunchPoolsTitle>\n\n          <ListItemWrapper>\n            {displayFarms.map((farm, index) => {\n              return (\n                <ListItem\n                  key={`${farm.fairLaunchAddress}_${farm.stakeToken}`}\n                  farm={farm}\n                  oddRow={(index + 1) % 2 !== 0}\n                  setSharedPoolAddress={setSharedPoolAddress}\n                />\n              )\n            })}\n          </ListItemWrapper>\n        </>\n      )}\n\n      <ShareModal title={t`Share this farm with your friends!`} url={shareUrl} />\n    </FairLaunchPoolsWrapper>\n  )\n}\n\nexport default FairLaunchPools\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}