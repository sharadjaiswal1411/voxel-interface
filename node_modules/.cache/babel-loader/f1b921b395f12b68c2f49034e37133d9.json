{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _taggedTemplateLiteral from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _templateObject,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _templateObject2,\n    _s6 = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { ChainId, CurrencyAmount, Token } from '@kyberswap/ks-sdk-core';\nimport { Pool, Position } from '@kyberswap/ks-sdk-elastic';\nimport dayjs from 'dayjs';\nimport JSBI from 'jsbi';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PROMM_POOLS_BULK } from 'apollo/queries/promm';\nimport { ELASTIC_BASE_FEE_UNIT } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { useActiveWeb3React } from 'hooks';\nimport { getBlocksFromTimestamps } from 'utils';\nimport { get2DayChange } from 'utils/data';\nimport { setSharedPoolId } from './actions';\nvar PROMM_USER_POSITIONS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query positions($owner: Bytes!) {\\n    bundles {\\n      ethPriceUSD\\n    }\\n    positions(where: { owner: $owner }) {\\n      id\\n      owner\\n      liquidity\\n      tickLower {\\n        tickIdx\\n      }\\n      tickUpper {\\n        tickIdx\\n      }\\n      pool {\\n        id\\n        feeTier\\n        tick\\n        liquidity\\n        reinvestL\\n        sqrtPrice\\n        token0 {\\n          id\\n          derivedETH\\n          symbol\\n          decimals\\n        }\\n        token1 {\\n          id\\n          derivedETH\\n          symbol\\n          decimals\\n        }\\n      }\\n    }\\n  }\\n\"])));\n\n/**\n * Get my liquidity for all pools\n */\nexport function useUserProMMPositions() {\n  _s();\n\n  var _data$bundles, _data$bundles$;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId,\n      account = _useActiveWeb3React.account;\n\n  var _useQuery = useQuery(PROMM_USER_POSITIONS, {\n    client: NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient,\n    variables: {\n      owner: account === null || account === void 0 ? void 0 : account.toLowerCase()\n    },\n    fetchPolicy: 'no-cache'\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var ethPriceUSD = Number(data === null || data === void 0 ? void 0 : (_data$bundles = data.bundles) === null || _data$bundles === void 0 ? void 0 : (_data$bundles$ = _data$bundles[0]) === null || _data$bundles$ === void 0 ? void 0 : _data$bundles$.ethPriceUSD);\n  var positions = useMemo(function () {\n    return ((data === null || data === void 0 ? void 0 : data.positions) || []).map(function (p) {\n      var token0 = new Token(chainId, p.pool.token0.id, Number(p.pool.token0.decimals), p.pool.token0.symbol);\n      var token1 = new Token(chainId, p.pool.token1.id, Number(p.pool.token1.decimals), p.pool.token1.symbol);\n      var pool = new Pool(token0, token1, Number(p.pool.feeTier), JSBI.BigInt(p.pool.sqrtPrice), JSBI.BigInt(p.pool.liquidity), JSBI.BigInt(p.pool.reinvestL), Number(p.pool.tick));\n      var position = new Position({\n        pool: pool,\n        liquidity: p.liquidity,\n        tickLower: Number(p.tickLower.tickIdx),\n        tickUpper: Number(p.tickUpper.tickIdx)\n      });\n      var token0Amount = CurrencyAmount.fromRawAmount(position.pool.token0, position.amount0.quotient);\n      var token1Amount = CurrencyAmount.fromRawAmount(position.pool.token1, position.amount1.quotient);\n      var token0Usd = parseFloat(token0Amount.toFixed()) * ethPriceUSD * parseFloat(p.pool.token0.derivedETH);\n      var token1Usd = parseFloat(token1Amount.toFixed()) * ethPriceUSD * parseFloat(p.pool.token1.derivedETH);\n      var userPositionUSD = token0Usd + token1Usd;\n      return {\n        tokenId: p.id,\n        address: p.pool.id,\n        valueUSD: userPositionUSD\n      };\n    });\n  }, [data, chainId, ethPriceUSD]);\n  var userLiquidityUsdByPool = useMemo(function () {\n    return positions.reduce(function (acc, cur) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur.address, cur.valueUSD + (acc[cur.address] || 0)));\n    }, {});\n  }, [positions]);\n  return useMemo(function () {\n    return {\n      loading: loading,\n      error: error,\n      userLiquidityUsdByPool: userLiquidityUsdByPool,\n      positions: positions\n    };\n  }, [positions, error, loading, userLiquidityUsdByPool]);\n}\n\n_s(useUserProMMPositions, \"iDcRlWXlOQu5WcIUprim75Pzghw=\", false, function () {\n  return [useActiveWeb3React, useQuery];\n});\n\nexport var usePoolBlocks = function usePoolBlocks() {\n  _s2();\n\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React2.chainId;\n\n  var utcCurrentTime = dayjs();\n  var t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix();\n  var t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix();\n  var tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      blocks = _useState2[0],\n      setBlocks = _useState2[1];\n\n  useEffect(function () {\n    var getBlocks = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var blocks;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getBlocksFromTimestamps([t1, t2, tWeek], chainId);\n\n              case 2:\n                blocks = _context.sent;\n                setBlocks(blocks);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getBlocks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getBlocks();\n  }, [t1, t2, tWeek, chainId]); // get blocks from historic timestamps\n\n  var _ref2 = blocks !== null && blocks !== void 0 ? blocks : [],\n      _ref3 = _slicedToArray(_ref2, 3),\n      block24 = _ref3[0],\n      block48 = _ref3[1],\n      blockWeek = _ref3[2];\n\n  return {\n    block24: block24 === null || block24 === void 0 ? void 0 : block24.number,\n    block48: block48 === null || block48 === void 0 ? void 0 : block48.number,\n    blockWeek: blockWeek === null || blockWeek === void 0 ? void 0 : blockWeek.number\n  };\n};\n\n_s2(usePoolBlocks, \"E4cMVeDgDe8oWUuBZV4EOl9iwaI=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport var parsedPoolData = function parsedPoolData(poolAddresses, data, data24, data48, chainId // dataWeek: PoolDataResponse | undefined,\n) {\n  var parsed = data !== null && data !== void 0 && data.pools ? data.pools.reduce(function (accum, poolData) {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {};\n  var parsed24 = data24 !== null && data24 !== void 0 && data24.pools ? data24.pools.reduce(function (accum, poolData) {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {};\n  var parsed48 = data48 !== null && data48 !== void 0 && data48.pools ? data48.pools.reduce(function (accum, poolData) {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {}; // const parsedWeek = dataWeek?.pools\n  //   ? dataWeek.pools.reduce((accum: { [address: string]: ProMMPoolFields }, poolData) => {\n  //       accum[poolData.id] = poolData\n  //       return accum\n  //     }, {})\n  //   : {}\n  // format data and calculate daily changes\n\n  var formatted = poolAddresses.reduce(function (accum, address) {\n    var current = parsed[address];\n    var oneDay = parsed24[address];\n    var twoDay = parsed48[address]; // const week: ProMMPoolFields | undefined = parsedWeek[address]\n\n    var _ref4 = current && oneDay && twoDay ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD) : current ? [parseFloat(current.volumeUSD), 0] : [0, 0],\n        _ref5 = _slicedToArray(_ref4, 2),\n        volumeUSD = _ref5[0],\n        volumeUSDChange = _ref5[1]; // const volumeUSDWeek =\n    //   current && week\n    //     ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n    //     : current\n    //     ? parseFloat(current.volumeUSD)\n    //     : 0\n\n\n    var tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0;\n    var tvlUSDChange = current && oneDay ? (parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) / parseFloat(oneDay.totalValueLockedUSD === '0' ? '1' : oneDay.totalValueLockedUSD) * 100 : 0;\n    var tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) : 0;\n    var tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) : 0;\n    var feeTier = current ? parseInt(current.feeTier) : 0;\n\n    if (current) {\n      accum[address] = {\n        address: address,\n        feeTier: feeTier,\n        liquidity: current.liquidity,\n        sqrtPrice: current.sqrtPrice,\n        reinvestL: current.reinvestL,\n        tick: parseFloat(current.tick),\n        tokenA: new Token(chainId, current.token0.id, Number(current.token0.decimals), current.token0.symbol),\n        tokenB: new Token(chainId, current.token1.id, Number(current.token1.decimals), current.token1.symbol),\n        token0: {\n          address: current.token0.id,\n          name: current.token0.name,\n          symbol: current.token0.symbol,\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token0.derivedETH)\n        },\n        token1: {\n          address: current.token1.id,\n          name: current.token1.name,\n          symbol: current.token1.symbol,\n          decimals: parseInt(current.token1.decimals),\n          derivedETH: parseFloat(current.token1.derivedETH)\n        },\n        token0Price: parseFloat(current.token0Price),\n        token1Price: parseFloat(current.token1Price),\n        volumeUSD: volumeUSD,\n        volumeUSDChange: volumeUSDChange,\n        // volumeUSDWeek,\n        tvlUSD: tvlUSD,\n        tvlUSDChange: tvlUSDChange,\n        tvlToken0: tvlToken0,\n        tvlToken1: tvlToken1,\n        apr: tvlUSD > 0 ? volumeUSD * (feeTier / ELASTIC_BASE_FEE_UNIT) * 100 * 365 / tvlUSD : 0\n      };\n    }\n\n    return accum;\n  }, {});\n  return formatted;\n};\n/**\n * Fetch top addresses by volume\n */\n\nexport function usePoolDatas(poolAddresses) {\n  _s3();\n\n  var _useActiveWeb3React3 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React3.chainId;\n\n  var dataClient = NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient;\n\n  var _usePoolBlocks = usePoolBlocks(),\n      block24 = _usePoolBlocks.block24,\n      block48 = _usePoolBlocks.block48;\n\n  console.log(\"block24, block48block24, block48\", block24, block48);\n\n  var _useQuery2 = useQuery(PROMM_POOLS_BULK(undefined, poolAddresses), {\n    client: dataClient,\n    fetchPolicy: 'no-cache'\n  }),\n      loading = _useQuery2.loading,\n      error = _useQuery2.error,\n      data = _useQuery2.data;\n\n  var _useQuery3 = useQuery(PROMM_POOLS_BULK(block24, poolAddresses), {\n    client: dataClient,\n    fetchPolicy: 'no-cache'\n  }),\n      loading24 = _useQuery3.loading,\n      error24 = _useQuery3.error,\n      data24 = _useQuery3.data;\n\n  var _useQuery4 = useQuery(PROMM_POOLS_BULK(block48, poolAddresses), {\n    client: dataClient,\n    fetchPolicy: 'no-cache'\n  }),\n      loading48 = _useQuery4.loading,\n      error48 = _useQuery4.error,\n      data48 = _useQuery4.data; // const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<PoolDataResponse>(\n  //   PROMM_POOLS_BULK(blockWeek, poolAddresses),\n  //   { client: dataClient, fetchPolicy: 'no-cache' },\n  // )\n\n\n  var anyError = Boolean(error || error24 || error48);\n  var anyLoading = Boolean(loading || loading24 || loading48); // return early if not all data yet\n\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined\n    };\n  }\n\n  var formatted = parsedPoolData(poolAddresses, data, data24, data48, chainId);\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted\n  };\n}\n\n_s3(usePoolDatas, \"f/0cJ/TUY/BOnmekdNj5OR8qxSM=\", false, function () {\n  return [useActiveWeb3React, usePoolBlocks, useQuery, useQuery, useQuery];\n});\n\nexport function useSelectedPool() {\n  _s4();\n\n  return useSelector(function (state) {\n    return state.pools.selectedPool;\n  });\n}\n\n_s4(useSelectedPool, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport function useSharedPoolIdManager() {\n  _s5();\n\n  var dispatch = useDispatch();\n  var sharedPoolId = useSelector(function (state) {\n    return state.pools.sharedPoolId;\n  });\n  var onSetSharedPoolId = useCallback(function (newSharedPoolId) {\n    dispatch(setSharedPoolId({\n      poolId: newSharedPoolId\n    }));\n  }, [dispatch]);\n  return useMemo(function () {\n    return [sharedPoolId, onSetSharedPoolId];\n  }, [onSetSharedPoolId, sharedPoolId]);\n}\n\n_s5(useSharedPoolIdManager, \"3JOJrZyWwJyWqrcPiCVLeKSjeUI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport var TOP_POOLS = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query topPools {\\n    pools(first: 500, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\\n      id\\n    }\\n  }\\n\"])));\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTopPoolAddresses() {\n  _s6();\n\n  var _useActiveWeb3React4 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React4.chainId;\n\n  var dataClient = NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient;\n\n  var _useQuery5 = useQuery(TOP_POOLS, {\n    client: dataClient,\n    fetchPolicy: 'no-cache'\n  }),\n      loading = _useQuery5.loading,\n      error = _useQuery5.error,\n      data = _useQuery5.data;\n\n  var formattedData = useMemo(function () {\n    if (data) {\n      return data.pools.map(function (p) {\n        return p.id;\n      });\n    } else {\n      return undefined;\n    }\n  }, [data]);\n  return {\n    loading: loading,\n    error: Boolean(error),\n    addresses: formattedData\n  };\n}\n\n_s6(useTopPoolAddresses, \"HI2fxj3O3+ItOeUN99/Xfkxg9VU=\", false, function () {\n  return [useActiveWeb3React, useQuery];\n});","map":{"version":3,"names":["gql","useQuery","ChainId","CurrencyAmount","Token","Pool","Position","dayjs","JSBI","useCallback","useEffect","useMemo","useState","useDispatch","useSelector","PROMM_POOLS_BULK","ELASTIC_BASE_FEE_UNIT","NETWORKS_INFO","useActiveWeb3React","getBlocksFromTimestamps","get2DayChange","setSharedPoolId","PROMM_USER_POSITIONS","useUserProMMPositions","chainId","account","client","MAINNET","elasticClient","variables","owner","toLowerCase","fetchPolicy","loading","error","data","ethPriceUSD","Number","bundles","positions","map","p","token0","pool","id","decimals","symbol","token1","feeTier","BigInt","sqrtPrice","liquidity","reinvestL","tick","position","tickLower","tickIdx","tickUpper","token0Amount","fromRawAmount","amount0","quotient","token1Amount","amount1","token0Usd","parseFloat","toFixed","derivedETH","token1Usd","userPositionUSD","tokenId","address","valueUSD","userLiquidityUsdByPool","reduce","acc","cur","usePoolBlocks","utcCurrentTime","t1","subtract","startOf","unix","t2","tWeek","blocks","setBlocks","getBlocks","block24","block48","blockWeek","number","parsedPoolData","poolAddresses","data24","data48","parsed","pools","accum","poolData","parsed24","parsed48","formatted","current","oneDay","twoDay","volumeUSD","volumeUSDChange","tvlUSD","totalValueLockedUSD","tvlUSDChange","tvlToken0","totalValueLockedToken0","tvlToken1","totalValueLockedToken1","parseInt","tokenA","tokenB","name","token0Price","token1Price","apr","usePoolDatas","dataClient","console","log","undefined","loading24","error24","loading48","error48","anyError","Boolean","anyLoading","useSelectedPool","state","selectedPool","useSharedPoolIdManager","dispatch","sharedPoolId","onSetSharedPoolId","newSharedPoolId","poolId","TOP_POOLS","useTopPoolAddresses","formattedData","addresses"],"sources":["/Applications/XAMPP/voxel-interface/src/state/prommPools/hooks.ts"],"sourcesContent":["import { gql, useQuery } from '@apollo/client'\nimport { ChainId, CurrencyAmount, Token } from '@kyberswap/ks-sdk-core'\nimport { Pool, Position } from '@kyberswap/ks-sdk-elastic'\nimport dayjs from 'dayjs'\nimport JSBI from 'jsbi'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { PROMM_POOLS_BULK, ProMMPoolFields } from 'apollo/queries/promm'\nimport { ELASTIC_BASE_FEE_UNIT } from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { useActiveWeb3React } from 'hooks'\nimport { getBlocksFromTimestamps } from 'utils'\nimport { get2DayChange } from 'utils/data'\n\nimport { AppState } from '../index'\nimport { setSharedPoolId } from './actions'\n\nexport interface ProMMPoolData {\n  // basic token info\n  address: string\n  feeTier: number\n\n  tokenA: Token\n  tokenB: Token\n\n  token0: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  token1: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  // for tick math\n  liquidity: string\n  reinvestL: string\n  sqrtPrice: string\n  tick: number\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  // volumeUSDWeek: number\n\n  // liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // prices\n  token0Price: number\n  token1Price: number\n\n  // token amounts\n  tvlToken0: number\n  tvlToken1: number\n  apr: number\n}\n\nexport interface Bundle {\n  ethPriceUSD: string\n}\n\nexport interface UserPosition {\n  id: string\n  liquidity: string\n  tickLower: {\n    tickIdx: string\n  }\n  tickUpper: {\n    tickIdx: string\n  }\n  pool: {\n    id: string\n    feeTier: string\n    liquidity: string\n    reinvestL: string\n    tick: string\n    sqrtPrice: string\n    token0: {\n      decimals: string\n      symbol: string\n      derivedETH: string\n      id: string\n    }\n    token1: {\n      decimals: string\n      symbol: string\n      derivedETH: string\n      id: string\n    }\n  }\n}\n\nconst PROMM_USER_POSITIONS = gql`\n  query positions($owner: Bytes!) {\n    bundles {\n      ethPriceUSD\n    }\n    positions(where: { owner: $owner }) {\n      id\n      owner\n      liquidity\n      tickLower {\n        tickIdx\n      }\n      tickUpper {\n        tickIdx\n      }\n      pool {\n        id\n        feeTier\n        tick\n        liquidity\n        reinvestL\n        sqrtPrice\n        token0 {\n          id\n          derivedETH\n          symbol\n          decimals\n        }\n        token1 {\n          id\n          derivedETH\n          symbol\n          decimals\n        }\n      }\n    }\n  }\n`\n\nexport interface UserPositionResult {\n  loading: boolean\n  error: any\n  userLiquidityUsdByPool: {\n    [poolId: string]: number\n  }\n  positions: { address: string; valueUSD: number; tokenId: string }[]\n}\n\n/**\n * Get my liquidity for all pools\n */\nexport function useUserProMMPositions(): UserPositionResult {\n  const { chainId, account } = useActiveWeb3React()\n\n  const { loading, error, data } = useQuery(PROMM_USER_POSITIONS, {\n    client: NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient,\n    variables: {\n      owner: account?.toLowerCase(),\n    },\n    fetchPolicy: 'no-cache',\n  })\n\n  const ethPriceUSD = Number(data?.bundles?.[0]?.ethPriceUSD)\n\n  const positions = useMemo(() => {\n    return (data?.positions || []).map((p: UserPosition) => {\n      const token0 = new Token(\n        chainId as ChainId,\n        p.pool.token0.id,\n        Number(p.pool.token0.decimals),\n        p.pool.token0.symbol,\n      )\n      const token1 = new Token(\n        chainId as ChainId,\n        p.pool.token1.id,\n        Number(p.pool.token1.decimals),\n        p.pool.token1.symbol,\n      )\n\n      const pool = new Pool(\n        token0,\n        token1,\n        Number(p.pool.feeTier),\n        JSBI.BigInt(p.pool.sqrtPrice),\n        JSBI.BigInt(p.pool.liquidity),\n        JSBI.BigInt(p.pool.reinvestL),\n        Number(p.pool.tick),\n      )\n\n      const position = new Position({\n        pool,\n        liquidity: p.liquidity,\n        tickLower: Number(p.tickLower.tickIdx),\n        tickUpper: Number(p.tickUpper.tickIdx),\n      })\n\n      const token0Amount = CurrencyAmount.fromRawAmount(position.pool.token0, position.amount0.quotient)\n      const token1Amount = CurrencyAmount.fromRawAmount(position.pool.token1, position.amount1.quotient)\n\n      const token0Usd = parseFloat(token0Amount.toFixed()) * ethPriceUSD * parseFloat(p.pool.token0.derivedETH)\n      const token1Usd = parseFloat(token1Amount.toFixed()) * ethPriceUSD * parseFloat(p.pool.token1.derivedETH)\n\n      const userPositionUSD = token0Usd + token1Usd\n\n      return { tokenId: p.id, address: p.pool.id, valueUSD: userPositionUSD }\n    })\n  }, [data, chainId, ethPriceUSD])\n\n  const userLiquidityUsdByPool = useMemo(\n    () =>\n      positions.reduce((acc: { [key: string]: number }, cur: { address: string; valueUSD: number }) => {\n        return {\n          ...acc,\n          [cur.address]: cur.valueUSD + (acc[cur.address] || 0),\n        }\n      }, {}),\n    [positions],\n  )\n\n  return useMemo(\n    () => ({ loading, error, userLiquidityUsdByPool, positions: positions }),\n    [positions, error, loading, userLiquidityUsdByPool],\n  )\n}\n\ninterface PoolDataResponse {\n  pools: ProMMPoolFields[]\n}\n\nexport const usePoolBlocks = () => {\n  const { chainId } = useActiveWeb3React()\n\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n\n  const [blocks, setBlocks] = useState<{ number: number }[]>([])\n\n  useEffect(() => {\n    const getBlocks = async () => {\n      const blocks = await getBlocksFromTimestamps([t1, t2, tWeek], chainId)\n      setBlocks(blocks)\n    }\n\n    getBlocks()\n  }, [t1, t2, tWeek, chainId])\n\n  // get blocks from historic timestamps\n  const [block24, block48, blockWeek] = blocks ?? []\n\n  return { block24: block24?.number, block48: block48?.number, blockWeek: blockWeek?.number }\n}\n\nexport const parsedPoolData = (\n  poolAddresses: Array<string>,\n  data: PoolDataResponse | undefined,\n  data24: PoolDataResponse | undefined,\n  data48: PoolDataResponse | undefined,\n  chainId: number,\n  // dataWeek: PoolDataResponse | undefined,\n) => {\n  const parsed = data?.pools\n    ? data.pools.reduce((accum: { [address: string]: ProMMPoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed24 = data24?.pools\n    ? data24.pools.reduce((accum: { [address: string]: ProMMPoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed48 = data48?.pools\n    ? data48.pools.reduce((accum: { [address: string]: ProMMPoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  // const parsedWeek = dataWeek?.pools\n  //   ? dataWeek.pools.reduce((accum: { [address: string]: ProMMPoolFields }, poolData) => {\n  //       accum[poolData.id] = poolData\n  //       return accum\n  //     }, {})\n  //   : {}\n\n  // format data and calculate daily changes\n  const formatted = poolAddresses.reduce((accum: { [address: string]: ProMMPoolData }, address) => {\n    const current: ProMMPoolFields | undefined = parsed[address]\n    const oneDay: ProMMPoolFields | undefined = parsed24[address]\n    const twoDay: ProMMPoolFields | undefined = parsed48[address]\n    // const week: ProMMPoolFields | undefined = parsedWeek[address]\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n\n    // const volumeUSDWeek =\n    //   current && week\n    //     ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n    //     : current\n    //     ? parseFloat(current.volumeUSD)\n    //     : 0\n\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n\n    const tvlUSDChange =\n      current && oneDay\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\n            parseFloat(oneDay.totalValueLockedUSD === '0' ? '1' : oneDay.totalValueLockedUSD)) *\n          100\n        : 0\n\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) : 0\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) : 0\n\n    const feeTier = current ? parseInt(current.feeTier) : 0\n\n    if (current) {\n      accum[address] = {\n        address,\n        feeTier,\n        liquidity: current.liquidity,\n        sqrtPrice: current.sqrtPrice,\n        reinvestL: current.reinvestL,\n        tick: parseFloat(current.tick),\n        tokenA: new Token(chainId, current.token0.id, Number(current.token0.decimals), current.token0.symbol),\n        tokenB: new Token(chainId, current.token1.id, Number(current.token1.decimals), current.token1.symbol),\n\n        token0: {\n          address: current.token0.id,\n          name: current.token0.name,\n          symbol: current.token0.symbol,\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token0.derivedETH),\n        },\n        token1: {\n          address: current.token1.id,\n          name: current.token1.name,\n          symbol: current.token1.symbol,\n          decimals: parseInt(current.token1.decimals),\n          derivedETH: parseFloat(current.token1.derivedETH),\n        },\n        token0Price: parseFloat(current.token0Price),\n        token1Price: parseFloat(current.token1Price),\n        volumeUSD,\n        volumeUSDChange,\n        // volumeUSDWeek,\n        tvlUSD,\n        tvlUSDChange,\n        tvlToken0,\n        tvlToken1,\n        apr: tvlUSD > 0 ? (volumeUSD * (feeTier / ELASTIC_BASE_FEE_UNIT) * 100 * 365) / tvlUSD : 0,\n      }\n    }\n\n    return accum\n  }, {})\n\n  return formatted\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function usePoolDatas(poolAddresses: string[]): {\n  loading: boolean\n  error: boolean\n  data:\n    | {\n        [address: string]: ProMMPoolData\n      }\n    | undefined\n} {\n  const { chainId } = useActiveWeb3React()\n  const dataClient = NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient\n\n  const { block24, block48 } = usePoolBlocks()\n\n  console.log(\"block24, block48block24, block48\",block24, block48)\n\n  const { loading, error, data } = useQuery<PoolDataResponse>(PROMM_POOLS_BULK(undefined, poolAddresses), {\n    client: dataClient,\n    fetchPolicy: 'no-cache',\n  })\n\n  const {\n    loading: loading24,\n    error: error24,\n    data: data24,\n  } = useQuery<PoolDataResponse>(PROMM_POOLS_BULK(block24, poolAddresses), {\n    client: dataClient,\n    fetchPolicy: 'no-cache',\n  })\n  const {\n    loading: loading48,\n    error: error48,\n    data: data48,\n  } = useQuery<PoolDataResponse>(PROMM_POOLS_BULK(block48, poolAddresses), {\n    client: dataClient,\n    fetchPolicy: 'no-cache',\n  })\n  // const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<PoolDataResponse>(\n  //   PROMM_POOLS_BULK(blockWeek, poolAddresses),\n  //   { client: dataClient, fetchPolicy: 'no-cache' },\n  // )\n\n  const anyError = Boolean(error || error24 || error48)\n  const anyLoading = Boolean(loading || loading24 || loading48)\n\n\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined,\n    }\n  }\n\n  const formatted = parsedPoolData(poolAddresses, data, data24, data48, chainId as ChainId)\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted,\n  }\n}\n\nexport function useSelectedPool() {\n  return useSelector((state: AppState) => state.pools.selectedPool)\n}\n\nexport function useSharedPoolIdManager(): [string | undefined, (newSharedPoolId: string | undefined) => void] {\n  const dispatch = useDispatch()\n  const sharedPoolId = useSelector((state: AppState) => state.pools.sharedPoolId)\n\n  const onSetSharedPoolId = useCallback(\n    (newSharedPoolId: string | undefined) => {\n      dispatch(setSharedPoolId({ poolId: newSharedPoolId }))\n    },\n    [dispatch],\n  )\n\n  return useMemo(() => [sharedPoolId, onSetSharedPoolId], [onSetSharedPoolId, sharedPoolId])\n}\n\nexport const TOP_POOLS = gql`\n  query topPools {\n    pools(first: 500, orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n      id\n    }\n  }\n`\n\ninterface TopPoolsResponse {\n  pools: {\n    id: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function useTopPoolAddresses(): {\n  loading: boolean\n  error: boolean\n  addresses: string[] | undefined\n} {\n  const { chainId } = useActiveWeb3React()\n  const dataClient = NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient\n\n  const { loading, error, data } = useQuery<TopPoolsResponse>(TOP_POOLS, {\n    client: dataClient,\n    fetchPolicy: 'no-cache',\n  })\n\n  const formattedData = useMemo(() => {\n    if (data) {\n\n      return data.pools.map(p => p.id)\n    } else {\n      return undefined\n    }\n  }, [data])\n\n  return {\n    loading: loading,\n    error: Boolean(error),\n    addresses: formattedData,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,KAAlC,QAA+C,wBAA/C;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,2BAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,QAAkD,sBAAlD;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,uBAAT,QAAwC,OAAxC;AACA,SAASC,aAAT,QAA8B,YAA9B;AAGA,SAASC,eAAT,QAAgC,WAAhC;AAsFA,IAAMC,oBAAoB,GAAGtB,GAAH,upBAA1B;;AAgDA;AACA;AACA;AACA,OAAO,SAASuB,qBAAT,GAAqD;EAAA;;EAAA;;EAC1D,0BAA6BL,kBAAkB,EAA/C;EAAA,IAAQM,OAAR,uBAAQA,OAAR;EAAA,IAAiBC,OAAjB,uBAAiBA,OAAjB;;EAEA,gBAAiCxB,QAAQ,CAACqB,oBAAD,EAAuB;IAC9DI,MAAM,EAAET,aAAa,CAACO,OAAO,IAAItB,OAAO,CAACyB,OAApB,CAAb,CAA0CC,aADY;IAE9DC,SAAS,EAAE;MACTC,KAAK,EAAEL,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,WAAT;IADE,CAFmD;IAK9DC,WAAW,EAAE;EALiD,CAAvB,CAAzC;EAAA,IAAQC,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB;;EAQA,IAAMC,WAAW,GAAGC,MAAM,CAACF,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEG,OAAP,oEAAC,cAAgB,CAAhB,CAAD,mDAAC,eAAoBF,WAArB,CAA1B;EAEA,IAAMG,SAAS,GAAG5B,OAAO,CAAC,YAAM;IAC9B,OAAO,CAAC,CAAAwB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,SAAN,KAAmB,EAApB,EAAwBC,GAAxB,CAA4B,UAACC,CAAD,EAAqB;MACtD,IAAMC,MAAM,GAAG,IAAItC,KAAJ,CACboB,OADa,EAEbiB,CAAC,CAACE,IAAF,CAAOD,MAAP,CAAcE,EAFD,EAGbP,MAAM,CAACI,CAAC,CAACE,IAAF,CAAOD,MAAP,CAAcG,QAAf,CAHO,EAIbJ,CAAC,CAACE,IAAF,CAAOD,MAAP,CAAcI,MAJD,CAAf;MAMA,IAAMC,MAAM,GAAG,IAAI3C,KAAJ,CACboB,OADa,EAEbiB,CAAC,CAACE,IAAF,CAAOI,MAAP,CAAcH,EAFD,EAGbP,MAAM,CAACI,CAAC,CAACE,IAAF,CAAOI,MAAP,CAAcF,QAAf,CAHO,EAIbJ,CAAC,CAACE,IAAF,CAAOI,MAAP,CAAcD,MAJD,CAAf;MAOA,IAAMH,IAAI,GAAG,IAAItC,IAAJ,CACXqC,MADW,EAEXK,MAFW,EAGXV,MAAM,CAACI,CAAC,CAACE,IAAF,CAAOK,OAAR,CAHK,EAIXxC,IAAI,CAACyC,MAAL,CAAYR,CAAC,CAACE,IAAF,CAAOO,SAAnB,CAJW,EAKX1C,IAAI,CAACyC,MAAL,CAAYR,CAAC,CAACE,IAAF,CAAOQ,SAAnB,CALW,EAMX3C,IAAI,CAACyC,MAAL,CAAYR,CAAC,CAACE,IAAF,CAAOS,SAAnB,CANW,EAOXf,MAAM,CAACI,CAAC,CAACE,IAAF,CAAOU,IAAR,CAPK,CAAb;MAUA,IAAMC,QAAQ,GAAG,IAAIhD,QAAJ,CAAa;QAC5BqC,IAAI,EAAJA,IAD4B;QAE5BQ,SAAS,EAAEV,CAAC,CAACU,SAFe;QAG5BI,SAAS,EAAElB,MAAM,CAACI,CAAC,CAACc,SAAF,CAAYC,OAAb,CAHW;QAI5BC,SAAS,EAAEpB,MAAM,CAACI,CAAC,CAACgB,SAAF,CAAYD,OAAb;MAJW,CAAb,CAAjB;MAOA,IAAME,YAAY,GAAGvD,cAAc,CAACwD,aAAf,CAA6BL,QAAQ,CAACX,IAAT,CAAcD,MAA3C,EAAmDY,QAAQ,CAACM,OAAT,CAAiBC,QAApE,CAArB;MACA,IAAMC,YAAY,GAAG3D,cAAc,CAACwD,aAAf,CAA6BL,QAAQ,CAACX,IAAT,CAAcI,MAA3C,EAAmDO,QAAQ,CAACS,OAAT,CAAiBF,QAApE,CAArB;MAEA,IAAMG,SAAS,GAAGC,UAAU,CAACP,YAAY,CAACQ,OAAb,EAAD,CAAV,GAAqC9B,WAArC,GAAmD6B,UAAU,CAACxB,CAAC,CAACE,IAAF,CAAOD,MAAP,CAAcyB,UAAf,CAA/E;MACA,IAAMC,SAAS,GAAGH,UAAU,CAACH,YAAY,CAACI,OAAb,EAAD,CAAV,GAAqC9B,WAArC,GAAmD6B,UAAU,CAACxB,CAAC,CAACE,IAAF,CAAOI,MAAP,CAAcoB,UAAf,CAA/E;MAEA,IAAME,eAAe,GAAGL,SAAS,GAAGI,SAApC;MAEA,OAAO;QAAEE,OAAO,EAAE7B,CAAC,CAACG,EAAb;QAAiB2B,OAAO,EAAE9B,CAAC,CAACE,IAAF,CAAOC,EAAjC;QAAqC4B,QAAQ,EAAEH;MAA/C,CAAP;IACD,CAxCM,CAAP;EAyCD,CA1CwB,EA0CtB,CAAClC,IAAD,EAAOX,OAAP,EAAgBY,WAAhB,CA1CsB,CAAzB;EA4CA,IAAMqC,sBAAsB,GAAG9D,OAAO,CACpC;IAAA,OACE4B,SAAS,CAACmC,MAAV,CAAiB,UAACC,GAAD,EAAiCC,GAAjC,EAAgF;MAC/F,uCACKD,GADL,2BAEGC,GAAG,CAACL,OAFP,EAEiBK,GAAG,CAACJ,QAAJ,IAAgBG,GAAG,CAACC,GAAG,CAACL,OAAL,CAAH,IAAoB,CAApC,CAFjB;IAID,CALD,EAKG,EALH,CADF;EAAA,CADoC,EAQpC,CAAChC,SAAD,CARoC,CAAtC;EAWA,OAAO5B,OAAO,CACZ;IAAA,OAAO;MAAEsB,OAAO,EAAPA,OAAF;MAAWC,KAAK,EAALA,KAAX;MAAkBuC,sBAAsB,EAAtBA,sBAAlB;MAA0ClC,SAAS,EAAEA;IAArD,CAAP;EAAA,CADY,EAEZ,CAACA,SAAD,EAAYL,KAAZ,EAAmBD,OAAnB,EAA4BwC,sBAA5B,CAFY,CAAd;AAID;;GAxEelD,qB;UACeL,kB,EAEIjB,Q;;;AA2EnC,OAAO,IAAM4E,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAAA;;EACjC,2BAAoB3D,kBAAkB,EAAtC;EAAA,IAAQM,OAAR,wBAAQA,OAAR;;EAEA,IAAMsD,cAAc,GAAGvE,KAAK,EAA5B;EACA,IAAMwE,EAAE,GAAGD,cAAc,CAACE,QAAf,CAAwB,CAAxB,EAA2B,KAA3B,EAAkCC,OAAlC,CAA0C,QAA1C,EAAoDC,IAApD,EAAX;EACA,IAAMC,EAAE,GAAGL,cAAc,CAACE,QAAf,CAAwB,CAAxB,EAA2B,KAA3B,EAAkCC,OAAlC,CAA0C,QAA1C,EAAoDC,IAApD,EAAX;EACA,IAAME,KAAK,GAAGN,cAAc,CAACE,QAAf,CAAwB,CAAxB,EAA2B,MAA3B,EAAmCC,OAAnC,CAA2C,QAA3C,EAAqDC,IAArD,EAAd;;EAEA,gBAA4BtE,QAAQ,CAAuB,EAAvB,CAApC;EAAA;EAAA,IAAOyE,MAAP;EAAA,IAAeC,SAAf;;EAEA5E,SAAS,CAAC,YAAM;IACd,IAAM6E,SAAS;MAAA,sEAAG;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACKpE,uBAAuB,CAAC,CAAC4D,EAAD,EAAKI,EAAL,EAASC,KAAT,CAAD,EAAkB5D,OAAlB,CAD5B;;cAAA;gBACV6D,MADU;gBAEhBC,SAAS,CAACD,MAAD,CAAT;;cAFgB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAATE,SAAS;QAAA;MAAA;IAAA,GAAf;;IAKAA,SAAS;EACV,CAPQ,EAON,CAACR,EAAD,EAAKI,EAAL,EAASC,KAAT,EAAgB5D,OAAhB,CAPM,CAAT,CAViC,CAmBjC;;EACA,YAAsC6D,MAAtC,aAAsCA,MAAtC,cAAsCA,MAAtC,GAAgD,EAAhD;EAAA;EAAA,IAAOG,OAAP;EAAA,IAAgBC,OAAhB;EAAA,IAAyBC,SAAzB;;EAEA,OAAO;IAAEF,OAAO,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG,MAApB;IAA4BF,OAAO,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,MAA9C;IAAsDD,SAAS,EAAEA,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEC;EAA5E,CAAP;AACD,CAvBM;;IAAMd,a;UACS3D,kB;;;AAwBtB,OAAO,IAAM0E,cAAc,GAAG,SAAjBA,cAAiB,CAC5BC,aAD4B,EAE5B1D,IAF4B,EAG5B2D,MAH4B,EAI5BC,MAJ4B,EAK5BvE,OAL4B,CAM5B;AAN4B,EAOzB;EACH,IAAMwE,MAAM,GAAG7D,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAE8D,KAAN,GACX9D,IAAI,CAAC8D,KAAL,CAAWvB,MAAX,CAAkB,UAACwB,KAAD,EAAgDC,QAAhD,EAA6D;IAC7ED,KAAK,CAACC,QAAQ,CAACvD,EAAV,CAAL,GAAqBuD,QAArB;IACA,OAAOD,KAAP;EACD,CAHD,EAGG,EAHH,CADW,GAKX,EALJ;EAMA,IAAME,QAAQ,GAAGN,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEG,KAAR,GACbH,MAAM,CAACG,KAAP,CAAavB,MAAb,CAAoB,UAACwB,KAAD,EAAgDC,QAAhD,EAA6D;IAC/ED,KAAK,CAACC,QAAQ,CAACvD,EAAV,CAAL,GAAqBuD,QAArB;IACA,OAAOD,KAAP;EACD,CAHD,EAGG,EAHH,CADa,GAKb,EALJ;EAMA,IAAMG,QAAQ,GAAGN,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEE,KAAR,GACbF,MAAM,CAACE,KAAP,CAAavB,MAAb,CAAoB,UAACwB,KAAD,EAAgDC,QAAhD,EAA6D;IAC/ED,KAAK,CAACC,QAAQ,CAACvD,EAAV,CAAL,GAAqBuD,QAArB;IACA,OAAOD,KAAP;EACD,CAHD,EAGG,EAHH,CADa,GAKb,EALJ,CAbG,CAmBH;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,IAAMI,SAAS,GAAGT,aAAa,CAACnB,MAAd,CAAqB,UAACwB,KAAD,EAA8C3B,OAA9C,EAA0D;IAC/F,IAAMgC,OAAoC,GAAGP,MAAM,CAACzB,OAAD,CAAnD;IACA,IAAMiC,MAAmC,GAAGJ,QAAQ,CAAC7B,OAAD,CAApD;IACA,IAAMkC,MAAmC,GAAGJ,QAAQ,CAAC9B,OAAD,CAApD,CAH+F,CAI/F;;IAEA,YACEgC,OAAO,IAAIC,MAAX,IAAqBC,MAArB,GACIrF,aAAa,CAACmF,OAAO,CAACG,SAAT,EAAoBF,MAAM,CAACE,SAA3B,EAAsCD,MAAM,CAACC,SAA7C,CADjB,GAEIH,OAAO,GACP,CAACtC,UAAU,CAACsC,OAAO,CAACG,SAAT,CAAX,EAAgC,CAAhC,CADO,GAEP,CAAC,CAAD,EAAI,CAAJ,CALN;IAAA;IAAA,IAAOA,SAAP;IAAA,IAAkBC,eAAlB,YAN+F,CAa/F;IACA;IACA;IACA;IACA;IACA;;;IAEA,IAAMC,MAAM,GAAGL,OAAO,GAAGtC,UAAU,CAACsC,OAAO,CAACM,mBAAT,CAAb,GAA6C,CAAnE;IAEA,IAAMC,YAAY,GAChBP,OAAO,IAAIC,MAAX,GACK,CAACvC,UAAU,CAACsC,OAAO,CAACM,mBAAT,CAAV,GAA0C5C,UAAU,CAACuC,MAAM,CAACK,mBAAR,CAArD,IACC5C,UAAU,CAACuC,MAAM,CAACK,mBAAP,KAA+B,GAA/B,GAAqC,GAArC,GAA2CL,MAAM,CAACK,mBAAnD,CADZ,GAEA,GAHJ,GAII,CALN;IAOA,IAAME,SAAS,GAAGR,OAAO,GAAGtC,UAAU,CAACsC,OAAO,CAACS,sBAAT,CAAb,GAAgD,CAAzE;IACA,IAAMC,SAAS,GAAGV,OAAO,GAAGtC,UAAU,CAACsC,OAAO,CAACW,sBAAT,CAAb,GAAgD,CAAzE;IAEA,IAAMlE,OAAO,GAAGuD,OAAO,GAAGY,QAAQ,CAACZ,OAAO,CAACvD,OAAT,CAAX,GAA+B,CAAtD;;IAEA,IAAIuD,OAAJ,EAAa;MACXL,KAAK,CAAC3B,OAAD,CAAL,GAAiB;QACfA,OAAO,EAAPA,OADe;QAEfvB,OAAO,EAAPA,OAFe;QAGfG,SAAS,EAAEoD,OAAO,CAACpD,SAHJ;QAIfD,SAAS,EAAEqD,OAAO,CAACrD,SAJJ;QAKfE,SAAS,EAAEmD,OAAO,CAACnD,SALJ;QAMfC,IAAI,EAAEY,UAAU,CAACsC,OAAO,CAAClD,IAAT,CAND;QAOf+D,MAAM,EAAE,IAAIhH,KAAJ,CAAUoB,OAAV,EAAmB+E,OAAO,CAAC7D,MAAR,CAAeE,EAAlC,EAAsCP,MAAM,CAACkE,OAAO,CAAC7D,MAAR,CAAeG,QAAhB,CAA5C,EAAuE0D,OAAO,CAAC7D,MAAR,CAAeI,MAAtF,CAPO;QAQfuE,MAAM,EAAE,IAAIjH,KAAJ,CAAUoB,OAAV,EAAmB+E,OAAO,CAACxD,MAAR,CAAeH,EAAlC,EAAsCP,MAAM,CAACkE,OAAO,CAACxD,MAAR,CAAeF,QAAhB,CAA5C,EAAuE0D,OAAO,CAACxD,MAAR,CAAeD,MAAtF,CARO;QAUfJ,MAAM,EAAE;UACN6B,OAAO,EAAEgC,OAAO,CAAC7D,MAAR,CAAeE,EADlB;UAEN0E,IAAI,EAAEf,OAAO,CAAC7D,MAAR,CAAe4E,IAFf;UAGNxE,MAAM,EAAEyD,OAAO,CAAC7D,MAAR,CAAeI,MAHjB;UAIND,QAAQ,EAAEsE,QAAQ,CAACZ,OAAO,CAAC7D,MAAR,CAAeG,QAAhB,CAJZ;UAKNsB,UAAU,EAAEF,UAAU,CAACsC,OAAO,CAAC7D,MAAR,CAAeyB,UAAhB;QALhB,CAVO;QAiBfpB,MAAM,EAAE;UACNwB,OAAO,EAAEgC,OAAO,CAACxD,MAAR,CAAeH,EADlB;UAEN0E,IAAI,EAAEf,OAAO,CAACxD,MAAR,CAAeuE,IAFf;UAGNxE,MAAM,EAAEyD,OAAO,CAACxD,MAAR,CAAeD,MAHjB;UAIND,QAAQ,EAAEsE,QAAQ,CAACZ,OAAO,CAACxD,MAAR,CAAeF,QAAhB,CAJZ;UAKNsB,UAAU,EAAEF,UAAU,CAACsC,OAAO,CAACxD,MAAR,CAAeoB,UAAhB;QALhB,CAjBO;QAwBfoD,WAAW,EAAEtD,UAAU,CAACsC,OAAO,CAACgB,WAAT,CAxBR;QAyBfC,WAAW,EAAEvD,UAAU,CAACsC,OAAO,CAACiB,WAAT,CAzBR;QA0Bfd,SAAS,EAATA,SA1Be;QA2BfC,eAAe,EAAfA,eA3Be;QA4Bf;QACAC,MAAM,EAANA,MA7Be;QA8BfE,YAAY,EAAZA,YA9Be;QA+BfC,SAAS,EAATA,SA/Be;QAgCfE,SAAS,EAATA,SAhCe;QAiCfQ,GAAG,EAAEb,MAAM,GAAG,CAAT,GAAcF,SAAS,IAAI1D,OAAO,GAAGhC,qBAAd,CAAT,GAAgD,GAAhD,GAAsD,GAAvD,GAA8D4F,MAA3E,GAAoF;MAjC1E,CAAjB;IAmCD;;IAED,OAAOV,KAAP;EACD,CAzEiB,EAyEf,EAzEe,CAAlB;EA2EA,OAAOI,SAAP;AACD,CA9GM;AAgHP;AACA;AACA;;AACA,OAAO,SAASoB,YAAT,CAAsB7B,aAAtB,EAQL;EAAA;;EACA,2BAAoB3E,kBAAkB,EAAtC;EAAA,IAAQM,OAAR,wBAAQA,OAAR;;EACA,IAAMmG,UAAU,GAAG1G,aAAa,CAACO,OAAO,IAAItB,OAAO,CAACyB,OAApB,CAAb,CAA0CC,aAA7D;;EAEA,qBAA6BiD,aAAa,EAA1C;EAAA,IAAQW,OAAR,kBAAQA,OAAR;EAAA,IAAiBC,OAAjB,kBAAiBA,OAAjB;;EAEAmC,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CrC,OAA/C,EAAwDC,OAAxD;;EAEA,iBAAiCxF,QAAQ,CAAmBc,gBAAgB,CAAC+G,SAAD,EAAYjC,aAAZ,CAAnC,EAA+D;IACtGnE,MAAM,EAAEiG,UAD8F;IAEtG3F,WAAW,EAAE;EAFyF,CAA/D,CAAzC;EAAA,IAAQC,OAAR,cAAQA,OAAR;EAAA,IAAiBC,KAAjB,cAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,cAAwBA,IAAxB;;EAKA,iBAIIlC,QAAQ,CAAmBc,gBAAgB,CAACyE,OAAD,EAAUK,aAAV,CAAnC,EAA6D;IACvEnE,MAAM,EAAEiG,UAD+D;IAEvE3F,WAAW,EAAE;EAF0D,CAA7D,CAJZ;EAAA,IACW+F,SADX,cACE9F,OADF;EAAA,IAES+F,OAFT,cAEE9F,KAFF;EAAA,IAGQ4D,MAHR,cAGE3D,IAHF;;EAQA,iBAIIlC,QAAQ,CAAmBc,gBAAgB,CAAC0E,OAAD,EAAUI,aAAV,CAAnC,EAA6D;IACvEnE,MAAM,EAAEiG,UAD+D;IAEvE3F,WAAW,EAAE;EAF0D,CAA7D,CAJZ;EAAA,IACWiG,SADX,cACEhG,OADF;EAAA,IAESiG,OAFT,cAEEhG,KAFF;EAAA,IAGQ6D,MAHR,cAGE5D,IAHF,CArBA,CA6BA;EACA;EACA;EACA;;;EAEA,IAAMgG,QAAQ,GAAGC,OAAO,CAAClG,KAAK,IAAI8F,OAAT,IAAoBE,OAArB,CAAxB;EACA,IAAMG,UAAU,GAAGD,OAAO,CAACnG,OAAO,IAAI8F,SAAX,IAAwBE,SAAzB,CAA1B,CAnCA,CAuCA;;EACA,IAAIE,QAAQ,IAAIE,UAAhB,EAA4B;IAC1B,OAAO;MACLpG,OAAO,EAAEoG,UADJ;MAELnG,KAAK,EAAEiG,QAFF;MAGLhG,IAAI,EAAE2F;IAHD,CAAP;EAKD;;EAED,IAAMxB,SAAS,GAAGV,cAAc,CAACC,aAAD,EAAgB1D,IAAhB,EAAsB2D,MAAtB,EAA8BC,MAA9B,EAAsCvE,OAAtC,CAAhC;EAEA,OAAO;IACLS,OAAO,EAAEoG,UADJ;IAELnG,KAAK,EAAEiG,QAFF;IAGLhG,IAAI,EAAEmE;EAHD,CAAP;AAKD;;IA/DeoB,Y;UASMxG,kB,EAGS2D,a,EAII5E,Q,EAS7BA,Q,EAQAA,Q;;;AAgCN,OAAO,SAASqI,eAAT,GAA2B;EAAA;;EAChC,OAAOxH,WAAW,CAAC,UAACyH,KAAD;IAAA,OAAqBA,KAAK,CAACtC,KAAN,CAAYuC,YAAjC;EAAA,CAAD,CAAlB;AACD;;IAFeF,e;UACPxH,W;;;AAGT,OAAO,SAAS2H,sBAAT,GAAuG;EAAA;;EAC5G,IAAMC,QAAQ,GAAG7H,WAAW,EAA5B;EACA,IAAM8H,YAAY,GAAG7H,WAAW,CAAC,UAACyH,KAAD;IAAA,OAAqBA,KAAK,CAACtC,KAAN,CAAY0C,YAAjC;EAAA,CAAD,CAAhC;EAEA,IAAMC,iBAAiB,GAAGnI,WAAW,CACnC,UAACoI,eAAD,EAAyC;IACvCH,QAAQ,CAACrH,eAAe,CAAC;MAAEyH,MAAM,EAAED;IAAV,CAAD,CAAhB,CAAR;EACD,CAHkC,EAInC,CAACH,QAAD,CAJmC,CAArC;EAOA,OAAO/H,OAAO,CAAC;IAAA,OAAM,CAACgI,YAAD,EAAeC,iBAAf,CAAN;EAAA,CAAD,EAA0C,CAACA,iBAAD,EAAoBD,YAApB,CAA1C,CAAd;AACD;;IAZeF,sB;UACG5H,W,EACIC,W;;;AAYvB,OAAO,IAAMiI,SAAS,GAAG/I,GAAH,sNAAf;;AAcP;AACA;AACA;AACA,OAAO,SAASgJ,mBAAT,GAIL;EAAA;;EACA,2BAAoB9H,kBAAkB,EAAtC;EAAA,IAAQM,OAAR,wBAAQA,OAAR;;EACA,IAAMmG,UAAU,GAAG1G,aAAa,CAACO,OAAO,IAAItB,OAAO,CAACyB,OAApB,CAAb,CAA0CC,aAA7D;;EAEA,iBAAiC3B,QAAQ,CAAmB8I,SAAnB,EAA8B;IACrErH,MAAM,EAAEiG,UAD6D;IAErE3F,WAAW,EAAE;EAFwD,CAA9B,CAAzC;EAAA,IAAQC,OAAR,cAAQA,OAAR;EAAA,IAAiBC,KAAjB,cAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,cAAwBA,IAAxB;;EAKA,IAAM8G,aAAa,GAAGtI,OAAO,CAAC,YAAM;IAClC,IAAIwB,IAAJ,EAAU;MAER,OAAOA,IAAI,CAAC8D,KAAL,CAAWzD,GAAX,CAAe,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACG,EAAN;MAAA,CAAhB,CAAP;IACD,CAHD,MAGO;MACL,OAAOkF,SAAP;IACD;EACF,CAP4B,EAO1B,CAAC3F,IAAD,CAP0B,CAA7B;EASA,OAAO;IACLF,OAAO,EAAEA,OADJ;IAELC,KAAK,EAAEkG,OAAO,CAAClG,KAAD,CAFT;IAGLgH,SAAS,EAAED;EAHN,CAAP;AAKD;;IA3BeD,mB;UAKM9H,kB,EAGajB,Q"},"metadata":{},"sourceType":"module"}