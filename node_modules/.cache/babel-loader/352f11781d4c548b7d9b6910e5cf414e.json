{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { captureException } from '@sentry/react';\nimport { setAttemptingTxn, setFarmsData, setLoading, setShowConfirm, setTxHash, setYieldPoolsError } from './actions';\nvar initialState = {\n  data: {},\n  loading: false,\n  showConfirm: false,\n  attemptingTxn: false,\n  txHash: '',\n  error: ''\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(setFarmsData, function (state, _ref) {\n    var data = _ref.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      data: data\n    });\n  }).addCase(setLoading, function (state, _ref2) {\n    var loading = _ref2.payload;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: loading\n    });\n  }).addCase(setShowConfirm, function (state, _ref3) {\n    var showConfirm = _ref3.payload;\n    state.showConfirm = showConfirm;\n  }).addCase(setAttemptingTxn, function (state, _ref4) {\n    var attemptingTxn = _ref4.payload;\n    state.attemptingTxn = attemptingTxn;\n  }).addCase(setTxHash, function (state, _ref5) {\n    var txHash = _ref5.payload;\n    state.txHash = txHash;\n  }).addCase(setYieldPoolsError, function (state, _ref6) {\n    var error = _ref6.payload;\n\n    if (error) {\n      var e = new Error('Classic Farm Error', {\n        cause: error\n      });\n      e.name = 'FarmError';\n      captureException(e, {\n        level: 'error'\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      error: error ? error === null || error === void 0 ? void 0 : error.message : ''\n    });\n  });\n});","map":{"version":3,"names":["createReducer","captureException","setAttemptingTxn","setFarmsData","setLoading","setShowConfirm","setTxHash","setYieldPoolsError","initialState","data","loading","showConfirm","attemptingTxn","txHash","error","builder","addCase","state","payload","e","Error","cause","name","level","message"],"sources":["/Applications/XAMPP/voxel-interface/src/state/farms/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { captureException } from '@sentry/react'\n\nimport { Farm } from 'state/farms/types'\n\nimport { setAttemptingTxn, setFarmsData, setLoading, setShowConfirm, setTxHash, setYieldPoolsError } from './actions'\n\nexport interface FarmsState {\n  readonly data: { [key: string]: Farm[] }\n  readonly loading: boolean\n  readonly showConfirm: boolean\n  readonly attemptingTxn: boolean\n  readonly txHash: string\n  readonly error: string\n}\n\nconst initialState: FarmsState = {\n  data: {},\n  loading: false,\n  showConfirm: false,\n  attemptingTxn: false,\n  txHash: '',\n  error: '',\n}\n\nexport default createReducer<FarmsState>(initialState, builder =>\n  builder\n    .addCase(setFarmsData, (state, { payload: data }) => {\n      return {\n        ...state,\n        data,\n      }\n    })\n    .addCase(setLoading, (state, { payload: loading }) => {\n      return {\n        ...state,\n        loading,\n      }\n    })\n    .addCase(setShowConfirm, (state, { payload: showConfirm }) => {\n      state.showConfirm = showConfirm\n    })\n    .addCase(setAttemptingTxn, (state, { payload: attemptingTxn }) => {\n      state.attemptingTxn = attemptingTxn\n    })\n    .addCase(setTxHash, (state, { payload: txHash }) => {\n      state.txHash = txHash\n    })\n    .addCase(setYieldPoolsError, (state, { payload: error }) => {\n      if (error) {\n        const e = new Error('Classic Farm Error', {\n          cause: error,\n        })\n        e.name = 'FarmError'\n        captureException(e, { level: 'error' })\n      }\n      return {\n        ...state,\n        error: error ? error?.message : '',\n      }\n    }),\n)\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAIA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,UAAzC,EAAqDC,cAArD,EAAqEC,SAArE,EAAgFC,kBAAhF,QAA0G,WAA1G;AAWA,IAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAE,EADyB;EAE/BC,OAAO,EAAE,KAFsB;EAG/BC,WAAW,EAAE,KAHkB;EAI/BC,aAAa,EAAE,KAJgB;EAK/BC,MAAM,EAAE,EALuB;EAM/BC,KAAK,EAAE;AANwB,CAAjC;AASA,eAAed,aAAa,CAAaQ,YAAb,EAA2B,UAAAO,OAAO;EAAA,OAC5DA,OAAO,CACJC,OADH,CACWb,YADX,EACyB,UAACc,KAAD,QAA8B;IAAA,IAAXR,IAAW,QAApBS,OAAoB;IACnD,uCACKD,KADL;MAEER,IAAI,EAAJA;IAFF;EAID,CANH,EAOGO,OAPH,CAOWZ,UAPX,EAOuB,UAACa,KAAD,SAAiC;IAAA,IAAdP,OAAc,SAAvBQ,OAAuB;IACpD,uCACKD,KADL;MAEEP,OAAO,EAAPA;IAFF;EAID,CAZH,EAaGM,OAbH,CAaWX,cAbX,EAa2B,UAACY,KAAD,SAAqC;IAAA,IAAlBN,WAAkB,SAA3BO,OAA2B;IAC5DD,KAAK,CAACN,WAAN,GAAoBA,WAApB;EACD,CAfH,EAgBGK,OAhBH,CAgBWd,gBAhBX,EAgB6B,UAACe,KAAD,SAAuC;IAAA,IAApBL,aAAoB,SAA7BM,OAA6B;IAChED,KAAK,CAACL,aAAN,GAAsBA,aAAtB;EACD,CAlBH,EAmBGI,OAnBH,CAmBWV,SAnBX,EAmBsB,UAACW,KAAD,SAAgC;IAAA,IAAbJ,MAAa,SAAtBK,OAAsB;IAClDD,KAAK,CAACJ,MAAN,GAAeA,MAAf;EACD,CArBH,EAsBGG,OAtBH,CAsBWT,kBAtBX,EAsB+B,UAACU,KAAD,SAA+B;IAAA,IAAZH,KAAY,SAArBI,OAAqB;;IAC1D,IAAIJ,KAAJ,EAAW;MACT,IAAMK,CAAC,GAAG,IAAIC,KAAJ,CAAU,oBAAV,EAAgC;QACxCC,KAAK,EAAEP;MADiC,CAAhC,CAAV;MAGAK,CAAC,CAACG,IAAF,GAAS,WAAT;MACArB,gBAAgB,CAACkB,CAAD,EAAI;QAAEI,KAAK,EAAE;MAAT,CAAJ,CAAhB;IACD;;IACD,uCACKN,KADL;MAEEH,KAAK,EAAEA,KAAK,GAAGA,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEU,OAAV,GAAoB;IAFlC;EAID,CAlCH,CAD4D;AAAA,CAAlC,CAA5B"},"metadata":{},"sourceType":"module"}