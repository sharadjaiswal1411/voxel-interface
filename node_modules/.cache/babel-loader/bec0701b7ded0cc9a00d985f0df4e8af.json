{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/Toggle/ThemeToggle.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport DarkModeIconActive from 'components/Icons/DarkModeIconActive';\nimport DarkModeIconInactive from 'components/Icons/DarkModeIconInactive';\nimport LightModeIconActive from 'components/Icons/LightModeIconActive';\nimport LightModeIconInactive from 'components/Icons/LightModeIconInactive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ToggleElement = styled.span.withConfig({\n  displayName: \"ThemeToggle__ToggleElement\",\n  componentId: \"sc-axbjn0-0\"\n})([\"border-radius:50%;background-color:\", \";font-size:1rem;font-weight:400;flex:1;height:100%;display:flex;align-items:center;justify-content:center;\"], function (_ref) {\n  var theme = _ref.theme,\n      isDarkMode = _ref.isDarkMode;\n  return isDarkMode ? theme.primary : 'none';\n});\n_c = ToggleElement;\nvar StyledToggle = styled.button.withConfig({\n  displayName: \"ThemeToggle__StyledToggle\",\n  componentId: \"sc-axbjn0-1\"\n})([\"border-radius:999px;border:none;background:\", \";display:flex;width:fit-content;cursor:pointer;outline:none;padding:0;opacity:1;width:56px;height:28px;transition:opacity 0.25s ease;:hover{opacity:0.9;}\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.tabBackgound;\n});\n_c2 = StyledToggle;\nexport default function ThemeToggle(_ref3) {\n  var id = _ref3.id,\n      isDarkMode = _ref3.isDarkMode,\n      toggle = _ref3.toggle;\n  return /*#__PURE__*/_jsxDEV(StyledToggle, {\n    id: id,\n    onClick: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ToggleElement, {\n      isDarkMode: !isDarkMode,\n      children: isDarkMode ? /*#__PURE__*/_jsxDEV(LightModeIconInactive, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(LightModeIconActive, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleElement, {\n      isDarkMode: isDarkMode,\n      children: isDarkMode ? /*#__PURE__*/_jsxDEV(DarkModeIconActive, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(DarkModeIconInactive, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ThemeToggle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ToggleElement\");\n$RefreshReg$(_c2, \"StyledToggle\");\n$RefreshReg$(_c3, \"ThemeToggle\");","map":{"version":3,"names":["React","styled","DarkModeIconActive","DarkModeIconInactive","LightModeIconActive","LightModeIconInactive","ToggleElement","span","theme","isDarkMode","primary","StyledToggle","button","tabBackgound","ThemeToggle","id","toggle"],"sources":["/Applications/XAMPP/voxel-interface/src/components/Toggle/ThemeToggle.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport DarkModeIconActive from 'components/Icons/DarkModeIconActive'\nimport DarkModeIconInactive from 'components/Icons/DarkModeIconInactive'\nimport LightModeIconActive from 'components/Icons/LightModeIconActive'\nimport LightModeIconInactive from 'components/Icons/LightModeIconInactive'\n\nconst ToggleElement = styled.span<{ isDarkMode?: boolean }>`\n  border-radius: 50%;\n  background-color: ${({ theme, isDarkMode }) => (isDarkMode ? theme.primary : 'none')};\n  font-size: 1rem;\n  font-weight: 400;\n  flex: 1;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledToggle = styled.button`\n  border-radius: 999px;\n  border: none;\n  background: ${({ theme }) => theme.tabBackgound};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0;\n  opacity: 1;\n  width: 56px;\n  height: 28px;\n  transition: opacity 0.25s ease;\n\n  :hover {\n    opacity: 0.9;\n  }\n`\n\nexport interface ThemeToggleProps {\n  id?: string\n  isDarkMode: boolean\n  toggle: () => void\n}\n\nexport default function ThemeToggle({ id, isDarkMode, toggle }: ThemeToggleProps) {\n  return (\n    <StyledToggle id={id} onClick={toggle}>\n      <ToggleElement isDarkMode={!isDarkMode}>\n        {isDarkMode ? <LightModeIconInactive /> : <LightModeIconActive />}\n      </ToggleElement>\n      <ToggleElement isDarkMode={isDarkMode}>\n        {isDarkMode ? <DarkModeIconActive /> : <DarkModeIconInactive />}\n      </ToggleElement>\n    </StyledToggle>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,IAAMC,aAAa,GAAGL,MAAM,CAACM,IAAV;EAAA;EAAA;AAAA,0JAEG;EAAA,IAAGC,KAAH,QAAGA,KAAH;EAAA,IAAUC,UAAV,QAAUA,UAAV;EAAA,OAA4BA,UAAU,GAAGD,KAAK,CAACE,OAAT,GAAmB,MAAzD;AAAA,CAFH,CAAnB;KAAMJ,a;AAYN,IAAMK,YAAY,GAAGV,MAAM,CAACW,MAAV;EAAA;EAAA;AAAA,iNAGF;EAAA,IAAGJ,KAAH,SAAGA,KAAH;EAAA,OAAeA,KAAK,CAACK,YAArB;AAAA,CAHE,CAAlB;MAAMF,Y;AAyBN,eAAe,SAASG,WAAT,QAAmE;EAAA,IAA5CC,EAA4C,SAA5CA,EAA4C;EAAA,IAAxCN,UAAwC,SAAxCA,UAAwC;EAAA,IAA5BO,MAA4B,SAA5BA,MAA4B;EAChF,oBACE,QAAC,YAAD;IAAc,EAAE,EAAED,EAAlB;IAAsB,OAAO,EAAEC,MAA/B;IAAA,wBACE,QAAC,aAAD;MAAe,UAAU,EAAE,CAACP,UAA5B;MAAA,UACGA,UAAU,gBAAG,QAAC,qBAAD;QAAA;QAAA;QAAA;MAAA,QAAH,gBAA+B,QAAC,mBAAD;QAAA;QAAA;QAAA;MAAA;IAD5C;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,aAAD;MAAe,UAAU,EAAEA,UAA3B;MAAA,UACGA,UAAU,gBAAG,QAAC,kBAAD;QAAA;QAAA;QAAA;MAAA,QAAH,gBAA4B,QAAC,oBAAD;QAAA;QAAA;QAAA;MAAA;IADzC;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;MAXuBK,W"},"metadata":{},"sourceType":"module"}