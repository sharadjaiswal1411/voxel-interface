{"ast":null,"code":"import _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Web3Provider } from '@ethersproject/providers';\nimport { ChainId } from '@kyberswap/ks-sdk-core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { LedgerConnector } from '@web3-react/ledger-connector';\nimport { PortisConnector } from '@web3-react/portis-connector';\nimport { TrezorConnector } from '@web3-react/trezor-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'; // import { InjectedConnector } from '@pangolindex/web3-react-injected-connector'\n\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks';\nimport { FortmaticConnector } from './Fortmatic';\nimport { NetworkConnector } from './NetworkConnector';\nvar NETWORK_URL = NETWORKS_INFO[ChainId.MAINNET].rpcUrl;\nvar FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY; // todo: remove\n\nvar PORTIS_ID = process.env.REACT_APP_PORTIS_ID; // todo: remove\n// export const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\n\nexport var NETWORK_CHAIN_ID = 1;\nexport var network = new NetworkConnector({\n  urls: _defineProperty({}, NETWORK_CHAIN_ID, NETWORK_URL)\n});\nvar networkLibrary;\nexport function getNetworkLibrary() {\n  var _networkLibrary;\n\n  return networkLibrary = (_networkLibrary = networkLibrary) !== null && _networkLibrary !== void 0 ? _networkLibrary : new Web3Provider(network.provider);\n}\nvar injectedConnectorParam = {\n  supportedChainIds: [ChainId.MAINNET, ChainId.ETHW, ChainId.ROPSTEN, ChainId.RINKEBY, ChainId.GÖRLI, ChainId.KOVAN, ChainId.MUMBAI, ChainId.MATIC, ChainId.BSCMAINNET, ChainId.BSCTESTNET, ChainId.AVAXMAINNET, ChainId.AVAXTESTNET, ChainId.FANTOM, ChainId.CRONOS, ChainId.CRONOSTESTNET, ChainId.BTTC, ChainId.ARBITRUM, ChainId.ARBITRUM_TESTNET, ChainId.AURORA, ChainId.VELAS, ChainId.OASIS, ChainId.OPTIMISM]\n};\nexport var injected = new InjectedConnector(injectedConnectorParam);\nexport var coin98InjectedConnector = new InjectedConnector(injectedConnectorParam);\nexport var braveInjectedConnector = new InjectedConnector(injectedConnectorParam);\nvar WALLET_CONNECT_SUPPORTED_CHAIN_IDS = [ChainId.MAINNET, ChainId.ETHW, ChainId.ROPSTEN, ChainId.MUMBAI, ChainId.MATIC, ChainId.BSCTESTNET, ChainId.BSCMAINNET, ChainId.AVAXTESTNET, ChainId.AVAXMAINNET, ChainId.FANTOM, ChainId.CRONOSTESTNET, ChainId.CRONOS, ChainId.BTTC, ChainId.ARBITRUM, ChainId.ARBITRUM_TESTNET, ChainId.AURORA, ChainId.VELAS, ChainId.OASIS, ChainId.OPTIMISM];\nexport var NETWORK_URLS = SUPPORTED_NETWORKS.reduce(_c = function _c(acc, val) {\n  acc[val] = NETWORKS_INFO[val].rpcUrl;\n  return acc;\n}, {});\n_c2 = NETWORK_URLS;\nexport var walletconnect = new WalletConnectConnector({\n  supportedChainIds: WALLET_CONNECT_SUPPORTED_CHAIN_IDS,\n  rpc: NETWORK_URLS,\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true\n});\nexport var fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY !== null && FORMATIC_KEY !== void 0 ? FORMATIC_KEY : '',\n  chainId: NETWORK_CHAIN_ID\n});\nexport var portis = new PortisConnector({\n  dAppId: PORTIS_ID !== null && PORTIS_ID !== void 0 ? PORTIS_ID : '',\n  networks: [NETWORK_CHAIN_ID]\n});\nexport var walletlink = new WalletLinkConnector({\n  // TODO: check this later=> walletlink connect maybe failed becauseof this\n  url: NETWORK_URL,\n  appName: 'KyberSwap',\n  appLogoUrl: 'https://kyberswap.com/favicon.ico'\n});\nexport var ledger = new LedgerConnector({\n  chainId: NETWORK_CHAIN_ID,\n  url: NETWORK_URL,\n  pollingInterval: 15000\n});\nexport var trezor = new TrezorConnector({\n  chainId: NETWORK_CHAIN_ID,\n  url: NETWORK_URL,\n  manifestEmail: 'andrew@kyber.network',\n  manifestAppUrl: 'https://dmm.exchange',\n  pollingInterval: 15000\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NETWORK_URLS$SUPPORTED_NETWORKS.reduce\");\n$RefreshReg$(_c2, \"NETWORK_URLS\");","map":{"version":3,"names":["Web3Provider","ChainId","InjectedConnector","LedgerConnector","PortisConnector","TrezorConnector","WalletConnectConnector","WalletLinkConnector","NETWORKS_INFO","SUPPORTED_NETWORKS","FortmaticConnector","NetworkConnector","NETWORK_URL","MAINNET","rpcUrl","FORMATIC_KEY","process","env","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","network","urls","networkLibrary","getNetworkLibrary","provider","injectedConnectorParam","supportedChainIds","ETHW","ROPSTEN","RINKEBY","GÖRLI","KOVAN","MUMBAI","MATIC","BSCMAINNET","BSCTESTNET","AVAXMAINNET","AVAXTESTNET","FANTOM","CRONOS","CRONOSTESTNET","BTTC","ARBITRUM","ARBITRUM_TESTNET","AURORA","VELAS","OASIS","OPTIMISM","injected","coin98InjectedConnector","braveInjectedConnector","WALLET_CONNECT_SUPPORTED_CHAIN_IDS","NETWORK_URLS","reduce","acc","val","walletconnect","rpc","bridge","qrcode","fortmatic","apiKey","chainId","portis","dAppId","networks","walletlink","url","appName","appLogoUrl","ledger","pollingInterval","trezor","manifestEmail","manifestAppUrl"],"sources":["/Applications/XAMPP/voxel-interface/src/connectors/index.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@kyberswap/ks-sdk-core'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\n\n// import { InjectedConnector } from '@pangolindex/web3-react-injected-connector'\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks'\n\nimport { FortmaticConnector } from './Fortmatic'\nimport { NetworkConnector } from './NetworkConnector'\n\nconst NETWORK_URL = NETWORKS_INFO[ChainId.MAINNET].rpcUrl\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY // todo: remove\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID // todo: remove\n\n// export const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\nexport const NETWORK_CHAIN_ID = 1\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nconst injectedConnectorParam = {\n  supportedChainIds: [\n    ChainId.MAINNET,\n    ChainId.ETHW,\n    ChainId.ROPSTEN,\n    ChainId.RINKEBY,\n    ChainId.GÖRLI,\n    ChainId.KOVAN,\n    ChainId.MUMBAI,\n    ChainId.MATIC,\n    ChainId.BSCMAINNET,\n    ChainId.BSCTESTNET,\n    ChainId.AVAXMAINNET,\n    ChainId.AVAXTESTNET,\n    ChainId.FANTOM,\n    ChainId.CRONOS,\n    ChainId.CRONOSTESTNET,\n    ChainId.BTTC,\n    ChainId.ARBITRUM,\n    ChainId.ARBITRUM_TESTNET,\n    ChainId.AURORA,\n    ChainId.VELAS,\n    ChainId.OASIS,\n    ChainId.OPTIMISM,\n  ],\n}\nexport const injected = new InjectedConnector(injectedConnectorParam)\n\nexport const coin98InjectedConnector = new InjectedConnector(injectedConnectorParam)\n\nexport const braveInjectedConnector = new InjectedConnector(injectedConnectorParam)\n\nconst WALLET_CONNECT_SUPPORTED_CHAIN_IDS: ChainId[] = [\n  ChainId.MAINNET,\n  ChainId.ETHW,\n  ChainId.ROPSTEN,\n  ChainId.MUMBAI,\n  ChainId.MATIC,\n  ChainId.BSCTESTNET,\n  ChainId.BSCMAINNET,\n  ChainId.AVAXTESTNET,\n  ChainId.AVAXMAINNET,\n  ChainId.FANTOM,\n  ChainId.CRONOSTESTNET,\n  ChainId.CRONOS,\n  ChainId.BTTC,\n  ChainId.ARBITRUM,\n  ChainId.ARBITRUM_TESTNET,\n  ChainId.AURORA,\n  ChainId.VELAS,\n  ChainId.OASIS,\n  ChainId.OPTIMISM,\n]\n\nexport const NETWORK_URLS: {\n  [chainId in ChainId]: string\n} = SUPPORTED_NETWORKS.reduce(\n  (acc, val) => {\n    acc[val] = NETWORKS_INFO[val].rpcUrl\n    return acc\n  },\n  {} as {\n    [chainId in ChainId]: string\n  },\n)\n\nexport const walletconnect = new WalletConnectConnector({\n  supportedChainIds: WALLET_CONNECT_SUPPORTED_CHAIN_IDS,\n  rpc: NETWORK_URLS,\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n})\n\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY ?? '',\n  chainId: NETWORK_CHAIN_ID,\n})\n\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID ?? '',\n  networks: [NETWORK_CHAIN_ID],\n})\n\nexport const walletlink = new WalletLinkConnector({\n  // TODO: check this later=> walletlink connect maybe failed becauseof this\n  url: NETWORK_URL,\n  appName: 'KyberSwap',\n  appLogoUrl: 'https://kyberswap.com/favicon.ico',\n})\n\nexport const ledger = new LedgerConnector({\n  chainId: NETWORK_CHAIN_ID,\n  url: NETWORK_URL,\n  pollingInterval: 15000,\n})\n\nexport const trezor = new TrezorConnector({\n  chainId: NETWORK_CHAIN_ID,\n  url: NETWORK_URL,\n  manifestEmail: 'andrew@kyber.network',\n  manifestAppUrl: 'https://dmm.exchange',\n  pollingInterval: 15000,\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}