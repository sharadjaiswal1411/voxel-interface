{"ast":null,"code":"import _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _NETWORKS_INFO_CONFIG;\n\nimport { ChainId } from '@kyberswap/ks-sdk-core';\nimport { arbitrum, arbitrumTestnet, aurora, avax, avaxTestnet, bnb, bnbTestnet, bttc, cronos, cronosTestnet, ethereum, ethw, fantom, görli, kovan, matic, mumbai, oasis, optimism, rinkeby, ropsten, velas } from './networks/index';\n//todo move this to NETWORKS_INFO\nexport var TRUESIGHT_NETWORK_TO_CHAINID = {\n  eth: ChainId.MAINNET,\n  bsc: ChainId.BSCMAINNET,\n  avax: ChainId.AVAXMAINNET,\n  polygon: ChainId.MATIC,\n  fantom: ChainId.FANTOM,\n  cronos: ChainId.CRONOS\n};\nexport var NETWORKS_INFO_CONFIG = (_NETWORKS_INFO_CONFIG = {}, _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.MAINNET, ethereum), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.ETHW, ethw), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.ROPSTEN, ropsten), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.RINKEBY, rinkeby), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.GÖRLI, görli), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.KOVAN, kovan), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.MATIC, matic), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.MUMBAI, mumbai), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.BSCMAINNET, bnb), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.BSCTESTNET, bnbTestnet), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.AVAXMAINNET, avax), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.AVAXTESTNET, avaxTestnet), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.FANTOM, fantom), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.CRONOS, cronos), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.CRONOSTESTNET, cronosTestnet), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.ARBITRUM, arbitrum), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.ARBITRUM_TESTNET, arbitrumTestnet), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.BTTC, bttc), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.VELAS, velas), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.AURORA, aurora), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.OASIS, oasis), _defineProperty(_NETWORKS_INFO_CONFIG, ChainId.OPTIMISM, optimism), _NETWORKS_INFO_CONFIG); //this Proxy helps fallback undefined ChainId by Ethereum info\n\nexport var NETWORKS_INFO = new Proxy(NETWORKS_INFO_CONFIG, {\n  get: function get(target, p) {\n    var prop = p;\n    if (p && target[prop]) return target[prop];\n    return target[ChainId.MAINNET];\n  }\n});\nexport var SUPPORTED_NETWORKS = Object.keys(NETWORKS_INFO).map(Number);\nexport var MAINNET_NETWORKS = [ChainId.MAINNET, ChainId.GÖRLI, ChainId.ETHW, ChainId.MATIC, ChainId.BSCMAINNET, ChainId.AVAXMAINNET, ChainId.FANTOM, ChainId.CRONOS, ChainId.ARBITRUM, ChainId.BTTC, ChainId.VELAS, ChainId.AURORA, ChainId.OASIS, ChainId.OPTIMISM];","map":{"version":3,"names":["ChainId","arbitrum","arbitrumTestnet","aurora","avax","avaxTestnet","bnb","bnbTestnet","bttc","cronos","cronosTestnet","ethereum","ethw","fantom","görli","kovan","matic","mumbai","oasis","optimism","rinkeby","ropsten","velas","TRUESIGHT_NETWORK_TO_CHAINID","eth","MAINNET","bsc","BSCMAINNET","AVAXMAINNET","polygon","MATIC","FANTOM","CRONOS","NETWORKS_INFO_CONFIG","ETHW","ROPSTEN","RINKEBY","GÖRLI","KOVAN","MUMBAI","BSCTESTNET","AVAXTESTNET","CRONOSTESTNET","ARBITRUM","ARBITRUM_TESTNET","BTTC","VELAS","AURORA","OASIS","OPTIMISM","NETWORKS_INFO","Proxy","get","target","p","prop","SUPPORTED_NETWORKS","Object","keys","map","Number","MAINNET_NETWORKS"],"sources":["/Applications/XAMPP/voxel-interface/src/constants/networks.ts"],"sourcesContent":["import { ChainId } from '@kyberswap/ks-sdk-core'\n\nimport {\n  arbitrum,\n  arbitrumTestnet,\n  aurora,\n  avax,\n  avaxTestnet,\n  bnb,\n  bnbTestnet,\n  bttc,\n  cronos,\n  cronosTestnet,\n  ethereum,\n  ethw,\n  fantom,\n  görli,\n  kovan,\n  matic,\n  mumbai,\n  oasis,\n  optimism,\n  rinkeby,\n  ropsten,\n  velas,\n} from './networks/index'\nimport { NetworkInfo } from './type'\n\ntype NetToChain = { [p: string]: ChainId }\n\n//todo move this to NETWORKS_INFO\nexport const TRUESIGHT_NETWORK_TO_CHAINID: NetToChain = {\n  eth: ChainId.MAINNET,\n  bsc: ChainId.BSCMAINNET,\n  avax: ChainId.AVAXMAINNET,\n  polygon: ChainId.MATIC,\n  fantom: ChainId.FANTOM,\n  cronos: ChainId.CRONOS,\n}\n\nexport const NETWORKS_INFO_CONFIG: { [chain in ChainId]: NetworkInfo } = {\n  [ChainId.MAINNET]: ethereum,\n  [ChainId.ETHW]: ethw,\n  [ChainId.ROPSTEN]: ropsten,\n  [ChainId.RINKEBY]: rinkeby,\n  [ChainId.GÖRLI]: görli,\n  [ChainId.KOVAN]: kovan,\n  [ChainId.MATIC]: matic,\n  [ChainId.MUMBAI]: mumbai,\n  [ChainId.BSCMAINNET]: bnb,\n  [ChainId.BSCTESTNET]: bnbTestnet,\n  [ChainId.AVAXMAINNET]: avax,\n  [ChainId.AVAXTESTNET]: avaxTestnet,\n  [ChainId.FANTOM]: fantom,\n  [ChainId.CRONOS]: cronos,\n  [ChainId.CRONOSTESTNET]: cronosTestnet,\n  [ChainId.ARBITRUM]: arbitrum,\n  [ChainId.ARBITRUM_TESTNET]: arbitrumTestnet,\n  [ChainId.BTTC]: bttc,\n  [ChainId.VELAS]: velas,\n  [ChainId.AURORA]: aurora,\n  [ChainId.OASIS]: oasis,\n  [ChainId.OPTIMISM]: optimism,\n}\n\n//this Proxy helps fallback undefined ChainId by Ethereum info\nexport const NETWORKS_INFO = new Proxy(NETWORKS_INFO_CONFIG, {\n  get(target, p) {\n    const prop = p as any as ChainId\n    if (p && target[prop]) return target[prop]\n    return target[ChainId.MAINNET]\n  },\n})\n\nexport const SUPPORTED_NETWORKS = Object.keys(NETWORKS_INFO).map(Number) as ChainId[]\n\nexport const MAINNET_NETWORKS = [\n  ChainId.MAINNET,\n  ChainId.GÖRLI,\n  ChainId.ETHW,\n  ChainId.MATIC,\n  ChainId.BSCMAINNET,\n  ChainId.AVAXMAINNET,\n  ChainId.FANTOM,\n  ChainId.CRONOS,\n  ChainId.ARBITRUM,\n  ChainId.BTTC,\n  ChainId.VELAS,\n  ChainId.AURORA,\n  ChainId.OASIS,\n  ChainId.OPTIMISM,\n]\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}