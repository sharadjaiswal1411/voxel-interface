{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"text\", \"maxCharacters\", \"margin\", \"adjustSize\", \"fontSize\", \"textColor\", \"link\"];\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/HoverInlineText/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport Tooltip from 'components/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TextWrapper = styled.span.withConfig({\n  displayName: \"HoverInlineText__TextWrapper\",\n  componentId: \"sc-1kr991m-0\"\n})([\"margin-left:\", \";color:\", \";font-size:\", \";@media screen and (max-width:600px){font-size:\", \";}\"], function (_ref) {\n  var margin = _ref.margin;\n  return margin && '4px';\n}, function (_ref2) {\n  var theme = _ref2.theme,\n      link = _ref2.link,\n      textColor = _ref2.textColor;\n  return link ? theme.blue1 : textColor !== null && textColor !== void 0 ? textColor : theme.text;\n}, function (_ref3) {\n  var fontSize = _ref3.fontSize;\n  return fontSize !== null && fontSize !== void 0 ? fontSize : 'inherit';\n}, function (_ref4) {\n  var adjustSize = _ref4.adjustSize;\n  return adjustSize && '12px';\n});\n_c = TextWrapper;\n\nvar HoverInlineText = function HoverInlineText(_ref5) {\n  _s();\n\n  var text = _ref5.text,\n      _ref5$maxCharacters = _ref5.maxCharacters,\n      maxCharacters = _ref5$maxCharacters === void 0 ? 20 : _ref5$maxCharacters,\n      _ref5$margin = _ref5.margin,\n      margin = _ref5$margin === void 0 ? false : _ref5$margin,\n      _ref5$adjustSize = _ref5.adjustSize,\n      adjustSize = _ref5$adjustSize === void 0 ? false : _ref5$adjustSize,\n      fontSize = _ref5.fontSize,\n      textColor = _ref5.textColor,\n      link = _ref5.link,\n      rest = _objectWithoutProperties(_ref5, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showHover = _useState2[0],\n      setShowHover = _useState2[1];\n\n  if (!text) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (text.length > maxCharacters) {\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      text: text,\n      show: showHover,\n      children: /*#__PURE__*/_jsxDEV(TextWrapper, _objectSpread(_objectSpread({\n        onMouseEnter: function onMouseEnter() {\n          return setShowHover(true);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return setShowHover(false);\n        },\n        margin: margin,\n        adjustSize: adjustSize,\n        textColor: textColor,\n        link: link,\n        fontSize: fontSize\n      }, rest), {}, {\n        children: ' ' + text.slice(0, maxCharacters - 1) + '...'\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TextWrapper, _objectSpread(_objectSpread({\n    margin: margin,\n    adjustSize: adjustSize,\n    link: link,\n    fontSize: fontSize,\n    textColor: textColor\n  }, rest), {}, {\n    children: text\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(HoverInlineText, \"smjBK0wZhzG9wbOjaQIljuQOK5E=\");\n\n_c2 = HoverInlineText;\nexport default HoverInlineText;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextWrapper\");\n$RefreshReg$(_c2, \"HoverInlineText\");","map":{"version":3,"names":["useState","styled","Tooltip","TextWrapper","span","margin","theme","link","textColor","blue1","text","fontSize","adjustSize","HoverInlineText","maxCharacters","rest","showHover","setShowHover","length","slice"],"sources":["/Applications/XAMPP/voxel-interface/src/components/HoverInlineText/index.tsx"],"sourcesContent":["import { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Tooltip from 'components/Tooltip'\n\nconst TextWrapper = styled.span<{\n  margin: boolean\n  link?: boolean\n  fontSize?: string\n  adjustSize?: boolean\n  textColor?: string\n}>`\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link, textColor }) => (link ? theme.blue1 : textColor ?? theme.text)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  textColor,\n  link,\n  ...rest\n}: {\n  text?: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  textColor?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span />\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          textColor={textColor}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper\n      margin={margin}\n      adjustSize={adjustSize}\n      link={link}\n      fontSize={fontSize}\n      textColor={textColor}\n      {...rest}\n    >\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAMC,WAAW,GAAGF,MAAM,CAACG,IAAV;EAAA;EAAA;AAAA,wGAOA;EAAA,IAAGC,MAAH,QAAGA,MAAH;EAAA,OAAgBA,MAAM,IAAI,KAA1B;AAAA,CAPA,EAQN;EAAA,IAAGC,KAAH,SAAGA,KAAH;EAAA,IAAUC,IAAV,SAAUA,IAAV;EAAA,IAAgBC,SAAhB,SAAgBA,SAAhB;EAAA,OAAiCD,IAAI,GAAGD,KAAK,CAACG,KAAT,GAAiBD,SAAjB,aAAiBA,SAAjB,cAAiBA,SAAjB,GAA8BF,KAAK,CAACI,IAAzE;AAAA,CARM,EASF;EAAA,IAAGC,QAAH,SAAGA,QAAH;EAAA,OAAkBA,QAAlB,aAAkBA,QAAlB,cAAkBA,QAAlB,GAA8B,SAA9B;AAAA,CATE,EAYA;EAAA,IAAGC,UAAH,SAAGA,UAAH;EAAA,OAAoBA,UAAU,IAAI,MAAlC;AAAA,CAZA,CAAjB;KAAMT,W;;AAgBN,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,QAiBlB;EAAA;;EAAA,IAhBJH,IAgBI,SAhBJA,IAgBI;EAAA,gCAfJI,aAeI;EAAA,IAfJA,aAeI,oCAfY,EAeZ;EAAA,yBAdJT,MAcI;EAAA,IAdJA,MAcI,6BAdK,KAcL;EAAA,6BAbJO,UAaI;EAAA,IAbJA,UAaI,iCAbS,KAaT;EAAA,IAZJD,QAYI,SAZJA,QAYI;EAAA,IAXJH,SAWI,SAXJA,SAWI;EAAA,IAVJD,IAUI,SAVJA,IAUI;EAAA,IATDQ,IASC;;EACJ,gBAAkCf,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOgB,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAI,CAACP,IAAL,EAAW;IACT,oBAAO;MAAA;MAAA;MAAA;IAAA,SAAP;EACD;;EAED,IAAIA,IAAI,CAACQ,MAAL,GAAcJ,aAAlB,EAAiC;IAC/B,oBACE,QAAC,OAAD;MAAS,IAAI,EAAEJ,IAAf;MAAqB,IAAI,EAAEM,SAA3B;MAAA,uBACE,QAAC,WAAD;QACE,YAAY,EAAE;UAAA,OAAMC,YAAY,CAAC,IAAD,CAAlB;QAAA,CADhB;QAEE,YAAY,EAAE;UAAA,OAAMA,YAAY,CAAC,KAAD,CAAlB;QAAA,CAFhB;QAGE,MAAM,EAAEZ,MAHV;QAIE,UAAU,EAAEO,UAJd;QAKE,SAAS,EAAEJ,SALb;QAME,IAAI,EAAED,IANR;QAOE,QAAQ,EAAEI;MAPZ,GAQMI,IARN;QAAA,UAUG,MAAML,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcL,aAAa,GAAG,CAA9B,CAAN,GAAyC;MAV5C;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SADF;EAgBD;;EAED,oBACE,QAAC,WAAD;IACE,MAAM,EAAET,MADV;IAEE,UAAU,EAAEO,UAFd;IAGE,IAAI,EAAEL,IAHR;IAIE,QAAQ,EAAEI,QAJZ;IAKE,SAAS,EAAEH;EALb,GAMMO,IANN;IAAA,UAQGL;EARH;IAAA;IAAA;IAAA;EAAA,SADF;AAYD,CAvDD;;GAAMG,e;;MAAAA,e;AAyDN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}