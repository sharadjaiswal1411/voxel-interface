{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/NftPools/ProMMFarms.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fraction } from '@kyberswap/ks-sdk-core';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Flex } from 'rebass';\nimport TokenInfo from 'components/TokenInfo';\nimport { useActiveWeb3React } from 'hooks';\nimport useTheme from 'hooks/useTheme';\nimport { useStakingAction } from 'state/nfts/promm/hooks';\nimport styled from 'styled-components';\nimport { BigNumber } from 'ethers';\nimport JSBI from 'jsbi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var NftCard = styled.div.withConfig({\n  displayName: \"ProMMFarms__NftCard\",\n  componentId: \"sc-tc9fla-0\"\n})([\"background:#1C1C1C;height:auto;border-radius:12px;padding:15px 15px 20px 15px;position:relative;max-width:320px;margin-right:5px;\"]);\n_c = NftCard;\n\nvar getFullDisplayBalance = function getFullDisplayBalance(balance) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  var significant = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n  var amount = new Fraction(balance.toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals)));\n\n  if (amount.lessThan(new Fraction('1'))) {\n    return amount.toSignificant(significant);\n  }\n\n  return amount.toFixed(0);\n};\n\nfunction ProMMFarms(_ref) {\n  _s();\n\n  var _this = this;\n\n  var active = _ref.active;\n  var theme = useTheme();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId,\n      account = _useActiveWeb3React.account;\n\n  var _useStakingAction = useStakingAction(),\n      fetchPools = _useStakingAction.fetchPools;\n\n  var activeTab = active ? 'active' : 'ended';\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      farms = _useState2[0],\n      setFarms = _useState2[1];\n\n  var getPools = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var allPools;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchPools();\n\n            case 2:\n              allPools = _context.sent;\n              setFarms(allPools);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getPools() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getPools();\n  }, [\"farms\"]);\n  var filteredFarms = useMemo(function () {\n    var now = Date.now() / 1000;\n    return Object.keys(farms).reduce(function (acc, address) {\n      var currentFarms = farms.filter(function (farm) {\n        var filterActive = active ? farm.openedTill.toNumber() >= now : farm.openedTill.toNumber() < now;\n        return filterActive;\n      });\n      if (currentFarms.length) acc[\"data\"] = currentFarms;\n      return acc;\n    }, {});\n  }, [farms, active, activeTab]);\n  var noFarms = !Object.keys(filteredFarms).length;\n  var allActiveFarms = filteredFarms.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      children: [noFarms && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" No Nft Contract available for Staking. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this), !noFarms && (allActiveFarms === null || allActiveFarms === void 0 ? void 0 : allActiveFarms.map(function (item, key) {\n        return /*#__PURE__*/_jsxDEV(NftCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-card-img\",\n            style: {\n              height: \"320px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"nft-staking/\".concat(item.stakingContract, \"/\").concat(item.nft),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.logoURI,\n                alt: item.name,\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 7\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 6\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 3\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"capitalize\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 5\n            }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\" Rewards \", getFullDisplayBalance(BigNumber.from(item.rewardPerDay.toString())), \" \", /*#__PURE__*/_jsxDEV(TokenInfo, {\n                address: item.token,\n                logo: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 90\n              }, _this), \" / Day \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 4\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 3\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-card-footer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 3\n          }, _this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 3\n        }, _this);\n      }))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProMMFarms, \"y3lBmXSIiN5WzhCHZtyAKs3X3H4=\", false, function () {\n  return [useTheme, useActiveWeb3React, useStakingAction];\n});\n\n_c2 = ProMMFarms;\nexport default ProMMFarms;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NftCard\");\n$RefreshReg$(_c2, \"ProMMFarms\");","map":{"version":3,"names":["Fraction","useEffect","useMemo","useState","Link","Flex","TokenInfo","useActiveWeb3React","useTheme","useStakingAction","styled","BigNumber","JSBI","NftCard","div","getFullDisplayBalance","balance","decimals","significant","amount","toString","exponentiate","BigInt","lessThan","toSignificant","toFixed","ProMMFarms","active","theme","chainId","account","fetchPools","activeTab","farms","setFarms","getPools","allPools","filteredFarms","now","Date","Object","keys","reduce","acc","address","currentFarms","filter","farm","filterActive","openedTill","toNumber","length","noFarms","allActiveFarms","data","map","item","key","height","stakingContract","nft","logoURI","name","from","rewardPerDay","token"],"sources":["/Applications/XAMPP/voxel-interface/src/components/NftPools/ProMMFarms.tsx"],"sourcesContent":["import { Fraction } from '@kyberswap/ks-sdk-core'\nimport { useEffect, useMemo, useState } from 'react'\nimport { Link} from 'react-router-dom'\nimport { Flex } from 'rebass'\nimport TokenInfo from 'components/TokenInfo'\nimport { useActiveWeb3React } from 'hooks'\nimport useTheme from 'hooks/useTheme'\nimport { useStakingAction} from 'state/nfts/promm/hooks'\nimport styled from 'styled-components'\nimport { BigNumber } from 'ethers'\nimport JSBI from 'jsbi'\n\n\nexport const NftCard= styled.div`\n    background: #1C1C1C;\n    height: auto;\n    border-radius: 12px;\n    padding: 15px 15px 20px 15px;\n    position: relative;\n    max-width:320px;\n    margin-right:5px;\n`\n\nconst getFullDisplayBalance = (balance: BigNumber, decimals = 18, significant = 6): string => {\n  const amount = new Fraction(balance.toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals)))\n  if (amount.lessThan(new Fraction('1'))) {\n    return amount.toSignificant(significant)\n  }\n\n  return amount.toFixed(0)\n}\n\nfunction ProMMFarms({ active }: { active: boolean } ) {\n\n   const theme = useTheme()\n   const { chainId,account } = useActiveWeb3React()\n   const { fetchPools } = useStakingAction();\n   const activeTab = active ? 'active' : 'ended'\n  const [farms, setFarms] = useState<any[]>([])\n\n   const getPools = async () => {\n      const allPools:any[]= await fetchPools();\n\n      setFarms(allPools);\n      \n   };\n\n  useEffect( () => {\n      getPools();\n\n\n  }, [\"farms\"])\n\n  \n\n\n  const filteredFarms = useMemo(() => {\n    const now = Date.now() / 1000\n    return Object.keys(farms).reduce((acc: { [key: string]: any[] }, address) => {\n\n      const currentFarms = farms.filter(farm => {\n        const filterActive = active ? farm.openedTill.toNumber() >= now : farm.openedTill.toNumber() < now\n        return filterActive\n      })\n\n      if (currentFarms.length) acc[\"data\"] = currentFarms\n      return acc\n    }, {})\n  }, [farms, active, activeTab])\n\n  const noFarms = !Object.keys(filteredFarms).length\n \n  const allActiveFarms= filteredFarms.data;\n\n  return (\n    <>\n     <Flex>\n     {noFarms && <div> No Nft Contract available for Staking. </div>}\n{!noFarms &&\n    allActiveFarms?.map((item, key) => (\n  <NftCard key={key}>\n  <div className=\"product-card-img\" style={{height:\"320px\"}}>\n     <Link to={`nft-staking/${item.stakingContract}/${item.nft}`}>\n      <img src={item.logoURI} alt={item.name} width=\"100%\"  />\n     </Link>\n  </div>\n  <div className=\"product-card-body\">\n    <h4 className=\"capitalize\">\n      {item.name} \n    </h4>\n   <small> Rewards {getFullDisplayBalance(BigNumber.from(item.rewardPerDay.toString()))} <TokenInfo address={item.token} logo={false} /> / Day </small>\n  </div>\n  <div className=\"product-card-footer\">\n \n  </div>\n</NftCard>\n ))\n}\n     </Flex>\n    </>\n  )\n}\n\nexport default ProMMFarms\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}