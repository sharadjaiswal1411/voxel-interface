{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nexport var updateMatchesDarkMode = createAction('user/updateMatchesDarkMode');\nexport var updateUserDarkMode = createAction('user/updateUserDarkMode');\nexport var updateUserExpertMode = createAction('user/updateUserExpertMode');\nexport var updateUserLocale = createAction('user/updateUserLocale');\nexport var updateUserSlippageTolerance = createAction('user/updateUserSlippageTolerance');\nexport var updateUserDeadline = createAction('user/updateUserDeadline');\nexport var addSerializedToken = createAction('user/addSerializedToken');\nexport var removeSerializedToken = createAction('user/removeSerializedToken');\nexport var addSerializedPair = createAction('user/addSerializedPair');\nexport var removeSerializedPair = createAction('user/removeSerializedPair');\nexport var toggleRebrandingAnnouncement = createAction('user/toggleRebrandingAnnouncement');\nexport var toggleLiveChart = createAction('user/toggleLiveChart');\nexport var toggleTradeRoutes = createAction('user/toggleTradeRoutes');\nexport var toggleTokenInfo = createAction('user/toggleTokenInfo');\nexport var toggleTopTrendingTokens = createAction('user/toggleTopTrendingTokens');\nexport var toggleProLiveChart = createAction('user/toggleProLiveChart');\nexport var toggleFavoriteToken = createAction('user/toggleFavoriteToken');","map":{"version":3,"names":["createAction","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserLocale","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","toggleRebrandingAnnouncement","toggleLiveChart","toggleTradeRoutes","toggleTokenInfo","toggleTopTrendingTokens","toggleProLiveChart","toggleFavoriteToken"],"sources":["/Applications/XAMPP/voxel-interface/src/state/user/actions.ts"],"sourcesContent":["import { ChainId } from '@kyberswap/ks-sdk-core'\nimport { createAction } from '@reduxjs/toolkit'\n\nimport { SupportedLocale } from 'constants/locales'\nimport { LiteTokenList } from 'state/lists/wrappedTokenInfo'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  logoURI?: string\n  list?: LiteTokenList\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserLocale = createAction<{ userLocale: SupportedLocale }>('user/updateUserLocale')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair',\n)\nexport const toggleRebrandingAnnouncement = createAction<void>('user/toggleRebrandingAnnouncement')\nexport const toggleLiveChart = createAction<{ chainId: number }>('user/toggleLiveChart')\n\nexport const toggleTradeRoutes = createAction<void>('user/toggleTradeRoutes')\nexport const toggleTokenInfo = createAction<void>('user/toggleTokenInfo')\n\nexport const toggleTopTrendingTokens = createAction<void>('user/toggleTopTrendingTokens')\nexport const toggleProLiveChart = createAction<void>('user/toggleProLiveChart')\n\nexport type ToggleFavoriteTokenPayload = {\n  chainId: ChainId\n} & ({ isNative?: false; address: string } | { isNative: true; address?: never })\nexport const toggleFavoriteToken = createAction<ToggleFavoriteTokenPayload>('user/toggleFavoriteToken')\n"],"mappings":"AACA,SAASA,YAAT,QAA6B,kBAA7B;AAoBA,OAAO,IAAMC,qBAAqB,GAAGD,YAAY,CAA+B,4BAA/B,CAA1C;AACP,OAAO,IAAME,kBAAkB,GAAGF,YAAY,CAA4B,yBAA5B,CAAvC;AACP,OAAO,IAAMG,oBAAoB,GAAGH,YAAY,CAA8B,2BAA9B,CAAzC;AACP,OAAO,IAAMI,gBAAgB,GAAGJ,YAAY,CAAkC,uBAAlC,CAArC;AACP,OAAO,IAAMK,2BAA2B,GAAGL,YAAY,CACrD,kCADqD,CAAhD;AAGP,OAAO,IAAMM,kBAAkB,GAAGN,YAAY,CAA2B,yBAA3B,CAAvC;AACP,OAAO,IAAMO,kBAAkB,GAAGP,YAAY,CAAuC,yBAAvC,CAAvC;AACP,OAAO,IAAMQ,qBAAqB,GAAGR,YAAY,CAAuC,4BAAvC,CAA1C;AACP,OAAO,IAAMS,iBAAiB,GAAGT,YAAY,CAAqC,wBAArC,CAAtC;AACP,OAAO,IAAMU,oBAAoB,GAAGV,YAAY,CAC9C,2BAD8C,CAAzC;AAGP,OAAO,IAAMW,4BAA4B,GAAGX,YAAY,CAAO,mCAAP,CAAjD;AACP,OAAO,IAAMY,eAAe,GAAGZ,YAAY,CAAsB,sBAAtB,CAApC;AAEP,OAAO,IAAMa,iBAAiB,GAAGb,YAAY,CAAO,wBAAP,CAAtC;AACP,OAAO,IAAMc,eAAe,GAAGd,YAAY,CAAO,sBAAP,CAApC;AAEP,OAAO,IAAMe,uBAAuB,GAAGf,YAAY,CAAO,8BAAP,CAA5C;AACP,OAAO,IAAMgB,kBAAkB,GAAGhB,YAAY,CAAO,yBAAP,CAAvC;AAKP,OAAO,IAAMiB,mBAAmB,GAAGjB,YAAY,CAA6B,0BAA7B,CAAxC"},"metadata":{},"sourceType":"module"}