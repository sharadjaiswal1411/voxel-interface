{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/i18n.tsx\",\n    _s = $RefreshSig$();\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport { en, ko, tr, vi, zh } from 'make-plural/plurals';\nimport { useEffect, useState } from 'react';\nimport { useActiveLocale, useSetLocaleFromUrl } from 'hooks/useActiveLocale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _plurals = {\n  'en-US': en,\n  'ko-KR': ko,\n  'tr-TR': tr,\n  'vi-VN': vi,\n  'zh-CN': zh\n};\n\nfunction dynamicActivate(_x) {\n  return _dynamicActivate.apply(this, arguments);\n}\n\nfunction _dynamicActivate() {\n  _dynamicActivate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(locale) {\n    var _yield$import, messages;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import(\"@lingui/loader!./locales/\".concat(locale, \".po\"));\n\n          case 2:\n            _yield$import = _context.sent;\n            messages = _yield$import.messages;\n            i18n.loadLocaleData(locale, {\n              plurals: function plurals() {\n                return _plurals[locale];\n              }\n            });\n            i18n.load(locale, messages);\n            i18n.activate(locale);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _dynamicActivate.apply(this, arguments);\n}\n\nexport function LanguageProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  useSetLocaleFromUrl();\n  var locale = useActiveLocale();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    dynamicActivate(locale).then(function () {\n      setLoaded(true);\n    }).catch(function (error) {\n      console.error('Failed to activate locale', locale, error);\n    });\n  }, [locale]); // prevent the app from rendering with placeholder text before the locale is loaded\n\n  if (!loaded) return null;\n  return /*#__PURE__*/_jsxDEV(I18nProvider, {\n    forceRenderOnLocaleChange: false,\n    i18n: i18n,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LanguageProvider, \"SaYQDRDJr7nPBnHA3ThDxUKvZVQ=\", false, function () {\n  return [useSetLocaleFromUrl, useActiveLocale];\n});\n\n_c = LanguageProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["i18n","I18nProvider","en","ko","tr","vi","zh","useEffect","useState","useActiveLocale","useSetLocaleFromUrl","plurals","dynamicActivate","locale","messages","loadLocaleData","load","activate","LanguageProvider","children","loaded","setLoaded","then","catch","error","console"],"sources":["/Applications/XAMPP/voxel-interface/src/i18n.tsx"],"sourcesContent":["import { i18n } from '@lingui/core'\nimport { I18nProvider } from '@lingui/react'\nimport { PluralCategory, en, ko, tr, vi, zh } from 'make-plural/plurals'\nimport { ReactNode, useEffect, useState } from 'react'\n\nimport { SupportedLocale } from 'constants/locales'\nimport { useActiveLocale, useSetLocaleFromUrl } from 'hooks/useActiveLocale'\n\ntype LocalePlural = {\n  [key in SupportedLocale]: (n: number | string, ord?: boolean) => PluralCategory\n}\n\nconst plurals: LocalePlural = {\n  'en-US': en,\n  'ko-KR': ko,\n  'tr-TR': tr,\n  'vi-VN': vi,\n  'zh-CN': zh,\n}\n\nasync function dynamicActivate(locale: SupportedLocale) {\n  const { messages } = await import(`@lingui/loader!./locales/${locale}.po`)\n  i18n.loadLocaleData(locale, { plurals: () => plurals[locale] })\n  i18n.load(locale, messages)\n  i18n.activate(locale)\n}\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  useSetLocaleFromUrl()\n  const locale = useActiveLocale()\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    dynamicActivate(locale)\n      .then(() => {\n        setLoaded(true)\n      })\n      .catch(error => {\n        console.error('Failed to activate locale', locale, error)\n      })\n  }, [locale])\n\n  // prevent the app from rendering with placeholder text before the locale is loaded\n  if (!loaded) return null\n\n  return (\n    <I18nProvider forceRenderOnLocaleChange={false} i18n={i18n}>\n      {children}\n    </I18nProvider>\n  )\n}\n"],"mappings":";;;;;;;AAAA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,QAAmD,qBAAnD;AACA,SAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AAGA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,uBAArD;;AAMA,IAAMC,QAAqB,GAAG;EAC5B,SAAST,EADmB;EAE5B,SAASC,EAFmB;EAG5B,SAASC,EAHmB;EAI5B,SAASC,EAJmB;EAK5B,SAASC;AALmB,CAA9B;;SAQeM,e;;;;;gFAAf,iBAA+BC,MAA/B;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAC6B,0CAAmCA,MAAnC,SAD7B;;UAAA;YAAA;YACUC,QADV,iBACUA,QADV;YAEEd,IAAI,CAACe,cAAL,CAAoBF,MAApB,EAA4B;cAAEF,OAAO,EAAE;gBAAA,OAAMA,QAAO,CAACE,MAAD,CAAb;cAAA;YAAX,CAA5B;YACAb,IAAI,CAACgB,IAAL,CAAUH,MAAV,EAAkBC,QAAlB;YACAd,IAAI,CAACiB,QAAL,CAAcJ,MAAd;;UAJF;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAOA,OAAO,SAASK,gBAAT,OAAiE;EAAA;;EAAA,IAArCC,QAAqC,QAArCA,QAAqC;EACtET,mBAAmB;EACnB,IAAMG,MAAM,GAAGJ,eAAe,EAA9B;;EACA,gBAA4BD,QAAQ,CAAC,KAAD,CAApC;EAAA;EAAA,IAAOY,MAAP;EAAA,IAAeC,SAAf;;EAEAd,SAAS,CAAC,YAAM;IACdK,eAAe,CAACC,MAAD,CAAf,CACGS,IADH,CACQ,YAAM;MACVD,SAAS,CAAC,IAAD,CAAT;IACD,CAHH,EAIGE,KAJH,CAIS,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CX,MAA3C,EAAmDW,KAAnD;IACD,CANH;EAOD,CARQ,EAQN,CAACX,MAAD,CARM,CAAT,CALsE,CAetE;;EACA,IAAI,CAACO,MAAL,EAAa,OAAO,IAAP;EAEb,oBACE,QAAC,YAAD;IAAc,yBAAyB,EAAE,KAAzC;IAAgD,IAAI,EAAEpB,IAAtD;IAAA,UACGmB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAvBeD,gB;UACdR,mB,EACeD,e;;;KAFDS,gB"},"metadata":{},"sourceType":"module"}