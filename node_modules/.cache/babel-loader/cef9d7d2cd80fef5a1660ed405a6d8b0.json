{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar blob_1 = require(\"../../calldata/blocks/blob\");\n\nvar data_type_1 = require(\"../data_type\");\n\nvar AbstractBlobDataType =\n/** @class */\nfunction (_super) {\n  __extends(AbstractBlobDataType, _super);\n\n  function AbstractBlobDataType(dataItem, factory, sizeKnownAtCompileTime) {\n    var _this = _super.call(this, dataItem, factory) || this;\n\n    _this._sizeKnownAtCompileTime = sizeKnownAtCompileTime;\n    return _this;\n  }\n\n  AbstractBlobDataType.prototype.generateCalldataBlock = function (value, parentBlock) {\n    var encodedValue = this.encodeValue(value);\n    var name = this.getDataItem().name;\n    var signature = this.getSignature();\n    var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n    var block = new blob_1.BlobCalldataBlock(name, signature, parentName, encodedValue);\n    return block;\n  };\n\n  AbstractBlobDataType.prototype.generateValue = function (calldata, rules) {\n    var value = this.decodeValue(calldata);\n    return value;\n  };\n\n  AbstractBlobDataType.prototype.isStatic = function () {\n    return this._sizeKnownAtCompileTime;\n  };\n\n  return AbstractBlobDataType;\n}(data_type_1.DataType);\n\nexports.AbstractBlobDataType = AbstractBlobDataType;","map":null,"metadata":{},"sourceType":"script"}