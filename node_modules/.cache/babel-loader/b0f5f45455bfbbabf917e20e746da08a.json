{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel';\nimport { setClaimingCampaignRewardId, setRecaptchaCampaignId, setRecaptchaCampaignLoading, setSelectedCampaignLeaderboardLookupAddress, setSelectedCampaignLeaderboardPageNumber, setSelectedCampaignLuckyWinnersLookupAddress, setSelectedCampaignLuckyWinnersPageNumber } from 'state/campaigns/actions';\nexport function useSelectedCampaignLeaderboardPageNumberManager() {\n  _s();\n\n  var selectedCampaignLeaderboardPageNumber = useSelector(function (state) {\n    return state.campaigns.selectedCampaignLeaderboardPageNumber;\n  });\n  var dispatch = useDispatch();\n  var updateSelectedCampaignLeaderboardPageNumberCallback = useCallback(function (newPageNumber) {\n    dispatch(setSelectedCampaignLeaderboardPageNumber(newPageNumber));\n  }, [dispatch]);\n  return [selectedCampaignLeaderboardPageNumber, updateSelectedCampaignLeaderboardPageNumberCallback];\n}\n\n_s(useSelectedCampaignLeaderboardPageNumberManager, \"HTTTgEg893O5RLDIUXaHxujrXEU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport function useSelectedCampaignLuckyWinnerPageNumber() {\n  _s2();\n\n  var page = useSelector(function (state) {\n    return state.campaigns.selectedCampaignLuckyWinnersPageNumber;\n  });\n  var dispatch = useDispatch();\n  var setPage = useCallback(function (newPageNumber) {\n    dispatch(setSelectedCampaignLuckyWinnersPageNumber(newPageNumber));\n  }, [dispatch]);\n  return [page, setPage];\n}\n\n_s2(useSelectedCampaignLuckyWinnerPageNumber, \"paPDvZIq7JR9z9TiqP+WmRByxgo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport function useSelectedCampaignLeaderboardLookupAddressManager() {\n  _s3();\n\n  var selectedCampaignLeaderboardLookupAddress = useSelector(function (state) {\n    return state.campaigns.selectedCampaignLeaderboardLookupAddress;\n  });\n  var dispatch = useDispatch();\n  var updateSelectedCampaignLeaderboardLookupAddressCallback = useCallback(function (newLookupAddress) {\n    dispatch(setSelectedCampaignLeaderboardLookupAddress(newLookupAddress));\n  }, [dispatch]);\n  return useMemo(function () {\n    return [selectedCampaignLeaderboardLookupAddress, updateSelectedCampaignLeaderboardLookupAddressCallback];\n  }, [selectedCampaignLeaderboardLookupAddress, updateSelectedCampaignLeaderboardLookupAddressCallback]);\n}\n\n_s3(useSelectedCampaignLeaderboardLookupAddressManager, \"FHXB/xNQKBUtn7DQOwh6i8M3JAE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport function useSelectedCampaignLuckyWinnersLookupAddressManager() {\n  _s4();\n\n  var selectedCampaignLuckyWinnersLookupAddress = useSelector(function (state) {\n    return state.campaigns.selectedCampaignLuckyWinnersLookupAddress;\n  });\n  var dispatch = useDispatch();\n  var updateSelectedCampaignLuckyWinnersLookupAddressCallback = useCallback(function (newLookupAddress) {\n    dispatch(setSelectedCampaignLuckyWinnersLookupAddress(newLookupAddress));\n  }, [dispatch]);\n  return useMemo(function () {\n    return [selectedCampaignLuckyWinnersLookupAddress, updateSelectedCampaignLuckyWinnersLookupAddressCallback];\n  }, [selectedCampaignLuckyWinnersLookupAddress, updateSelectedCampaignLuckyWinnersLookupAddressCallback]);\n}\n\n_s4(useSelectedCampaignLuckyWinnersLookupAddressManager, \"nSrjDTI7i6ctDLbrsyQ7QHjGOes=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport function useRecaptchaCampaignManager() {\n  _s5();\n\n  var recaptchaCampaign = useSelector(function (state) {\n    return state.campaigns.recaptchaCampaign;\n  });\n  var dispatch = useDispatch();\n  var updateRecaptchaCampaignId = useCallback(function (id) {\n    dispatch(setRecaptchaCampaignId(id));\n  }, [dispatch]);\n  var updateRecaptchaCampaignLoading = useCallback(function (loading) {\n    dispatch(setRecaptchaCampaignLoading(loading));\n  }, [dispatch]);\n  return useMemo(function () {\n    return [recaptchaCampaign, updateRecaptchaCampaignId, updateRecaptchaCampaignLoading];\n  }, [recaptchaCampaign, updateRecaptchaCampaignId, updateRecaptchaCampaignLoading]);\n}\n\n_s5(useRecaptchaCampaignManager, \"4m6muAYI0tA5/gvrXjllrYGFPYk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport function useSwapNowHandler() {\n  _s6();\n\n  var _useMixpanel = useMixpanel(),\n      mixpanelHandler = _useMixpanel.mixpanelHandler;\n\n  var selectedCampaign = useSelector(function (state) {\n    return state.campaigns.selectedCampaign;\n  });\n  var history = useHistory();\n  return useCallback(function (chainId) {\n    var _selectedCampaign$eli;\n\n    mixpanelHandler(MIXPANEL_TYPE.CAMPAIGN_SWAP_NOW_CLICKED, {\n      campaign_name: selectedCampaign === null || selectedCampaign === void 0 ? void 0 : selectedCampaign.name\n    });\n    var path = \"/swap?networkId=\".concat(chainId);\n\n    if (selectedCampaign !== null && selectedCampaign !== void 0 && (_selectedCampaign$eli = selectedCampaign.eligibleTokens) !== null && _selectedCampaign$eli !== void 0 && _selectedCampaign$eli.length) {\n      var firstTokenOfChain = selectedCampaign.eligibleTokens.find(function (token) {\n        return token.chainId === chainId;\n      });\n\n      if (firstTokenOfChain) {\n        path += '&outputCurrency=' + firstTokenOfChain.address;\n      }\n    }\n\n    history.push(path);\n  }, [history, mixpanelHandler, selectedCampaign]);\n}\n\n_s6(useSwapNowHandler, \"uBQDHeFrVmOgBc+FLc/c4j90ugY=\", false, function () {\n  return [useMixpanel, useSelector, useHistory];\n});\n\nexport function useSetClaimingCampaignRewardId() {\n  _s7();\n\n  var _useSelector = useSelector(function (state) {\n    return state.campaigns;\n  }),\n      claimingCampaignRewardId = _useSelector.claimingCampaignRewardId;\n\n  var dispatch = useDispatch();\n  var setClaimingRewardId = useCallback(function (id) {\n    dispatch(setClaimingCampaignRewardId(id));\n  }, [dispatch]);\n  return [claimingCampaignRewardId, setClaimingRewardId];\n}\n\n_s7(useSetClaimingCampaignRewardId, \"1Xa67SsS8W60/SaKjGrL5KYXMqY=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["useCallback","useMemo","useDispatch","useSelector","useHistory","useMixpanel","MIXPANEL_TYPE","setClaimingCampaignRewardId","setRecaptchaCampaignId","setRecaptchaCampaignLoading","setSelectedCampaignLeaderboardLookupAddress","setSelectedCampaignLeaderboardPageNumber","setSelectedCampaignLuckyWinnersLookupAddress","setSelectedCampaignLuckyWinnersPageNumber","useSelectedCampaignLeaderboardPageNumberManager","selectedCampaignLeaderboardPageNumber","state","campaigns","dispatch","updateSelectedCampaignLeaderboardPageNumberCallback","newPageNumber","useSelectedCampaignLuckyWinnerPageNumber","page","selectedCampaignLuckyWinnersPageNumber","setPage","useSelectedCampaignLeaderboardLookupAddressManager","selectedCampaignLeaderboardLookupAddress","updateSelectedCampaignLeaderboardLookupAddressCallback","newLookupAddress","useSelectedCampaignLuckyWinnersLookupAddressManager","selectedCampaignLuckyWinnersLookupAddress","updateSelectedCampaignLuckyWinnersLookupAddressCallback","useRecaptchaCampaignManager","recaptchaCampaign","updateRecaptchaCampaignId","id","updateRecaptchaCampaignLoading","loading","useSwapNowHandler","mixpanelHandler","selectedCampaign","history","chainId","CAMPAIGN_SWAP_NOW_CLICKED","campaign_name","name","path","eligibleTokens","length","firstTokenOfChain","find","token","address","push","useSetClaimingCampaignRewardId","claimingCampaignRewardId","setClaimingRewardId"],"sources":["/Applications/XAMPP/voxel-interface/src/state/campaigns/hooks.ts"],"sourcesContent":["import { ChainId } from '@kyberswap/ks-sdk-core'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\n\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\nimport {\n  setClaimingCampaignRewardId,\n  setRecaptchaCampaignId,\n  setRecaptchaCampaignLoading,\n  setSelectedCampaignLeaderboardLookupAddress,\n  setSelectedCampaignLeaderboardPageNumber,\n  setSelectedCampaignLuckyWinnersLookupAddress,\n  setSelectedCampaignLuckyWinnersPageNumber,\n} from 'state/campaigns/actions'\nimport { AppState } from 'state/index'\n\nexport function useSelectedCampaignLeaderboardPageNumberManager(): [number, (page: number) => void] {\n  const selectedCampaignLeaderboardPageNumber = useSelector(\n    (state: AppState) => state.campaigns.selectedCampaignLeaderboardPageNumber,\n  )\n  const dispatch = useDispatch()\n\n  const updateSelectedCampaignLeaderboardPageNumberCallback = useCallback(\n    (newPageNumber: number) => {\n      dispatch(setSelectedCampaignLeaderboardPageNumber(newPageNumber))\n    },\n    [dispatch],\n  )\n\n  return [selectedCampaignLeaderboardPageNumber, updateSelectedCampaignLeaderboardPageNumberCallback]\n}\n\nexport function useSelectedCampaignLuckyWinnerPageNumber(): [number, (page: number) => void] {\n  const page = useSelector((state: AppState) => state.campaigns.selectedCampaignLuckyWinnersPageNumber)\n  const dispatch = useDispatch()\n\n  const setPage = useCallback(\n    (newPageNumber: number) => {\n      dispatch(setSelectedCampaignLuckyWinnersPageNumber(newPageNumber))\n    },\n    [dispatch],\n  )\n\n  return [page, setPage]\n}\n\nexport function useSelectedCampaignLeaderboardLookupAddressManager() {\n  const selectedCampaignLeaderboardLookupAddress = useSelector(\n    (state: AppState) => state.campaigns.selectedCampaignLeaderboardLookupAddress,\n  )\n  const dispatch = useDispatch()\n\n  const updateSelectedCampaignLeaderboardLookupAddressCallback = useCallback(\n    (newLookupAddress: string) => {\n      dispatch(setSelectedCampaignLeaderboardLookupAddress(newLookupAddress))\n    },\n    [dispatch],\n  )\n\n  return useMemo(\n    () => [selectedCampaignLeaderboardLookupAddress, updateSelectedCampaignLeaderboardLookupAddressCallback] as const,\n    [selectedCampaignLeaderboardLookupAddress, updateSelectedCampaignLeaderboardLookupAddressCallback],\n  )\n}\n\nexport function useSelectedCampaignLuckyWinnersLookupAddressManager() {\n  const selectedCampaignLuckyWinnersLookupAddress = useSelector(\n    (state: AppState) => state.campaigns.selectedCampaignLuckyWinnersLookupAddress,\n  )\n  const dispatch = useDispatch()\n\n  const updateSelectedCampaignLuckyWinnersLookupAddressCallback = useCallback(\n    (newLookupAddress: string) => {\n      dispatch(setSelectedCampaignLuckyWinnersLookupAddress(newLookupAddress))\n    },\n    [dispatch],\n  )\n\n  return useMemo(\n    () => [selectedCampaignLuckyWinnersLookupAddress, updateSelectedCampaignLuckyWinnersLookupAddressCallback] as const,\n    [selectedCampaignLuckyWinnersLookupAddress, updateSelectedCampaignLuckyWinnersLookupAddressCallback],\n  )\n}\n\nexport function useRecaptchaCampaignManager() {\n  const recaptchaCampaign = useSelector((state: AppState) => state.campaigns.recaptchaCampaign)\n  const dispatch = useDispatch()\n\n  const updateRecaptchaCampaignId = useCallback(\n    (id: number | undefined) => {\n      dispatch(setRecaptchaCampaignId(id))\n    },\n    [dispatch],\n  )\n\n  const updateRecaptchaCampaignLoading = useCallback(\n    (loading: boolean) => {\n      dispatch(setRecaptchaCampaignLoading(loading))\n    },\n    [dispatch],\n  )\n\n  return useMemo(\n    () => [recaptchaCampaign, updateRecaptchaCampaignId, updateRecaptchaCampaignLoading] as const,\n    [recaptchaCampaign, updateRecaptchaCampaignId, updateRecaptchaCampaignLoading],\n  )\n}\n\nexport function useSwapNowHandler() {\n  const { mixpanelHandler } = useMixpanel()\n  const selectedCampaign = useSelector((state: AppState) => state.campaigns.selectedCampaign)\n  const history = useHistory()\n\n  return useCallback(\n    (chainId: ChainId) => {\n      mixpanelHandler(MIXPANEL_TYPE.CAMPAIGN_SWAP_NOW_CLICKED, { campaign_name: selectedCampaign?.name })\n      let path = `/swap?networkId=${chainId}`\n      if (selectedCampaign?.eligibleTokens?.length) {\n        const firstTokenOfChain = selectedCampaign.eligibleTokens.find(token => token.chainId === chainId)\n        if (firstTokenOfChain) {\n          path += '&outputCurrency=' + firstTokenOfChain.address\n        }\n      }\n      history.push(path)\n    },\n    [history, mixpanelHandler, selectedCampaign],\n  )\n}\n\nexport function useSetClaimingCampaignRewardId(): [number | null, (id: number | null) => void] {\n  const { claimingCampaignRewardId } = useSelector((state: AppState) => state.campaigns)\n  const dispatch = useDispatch()\n\n  const setClaimingRewardId = useCallback(\n    (id: number | null) => {\n      dispatch(setClaimingCampaignRewardId(id))\n    },\n    [dispatch],\n  )\n\n  return [claimingCampaignRewardId, setClaimingRewardId]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}