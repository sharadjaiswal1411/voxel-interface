{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/AddLiquidity/TokenPair.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Fraction, WETH } from '@kyberswap/ks-sdk-core';\nimport { captureException } from '@sentry/react';\nimport { parseUnits } from 'ethers/lib/utils';\nimport JSBI from 'jsbi';\nimport { useCallback, useMemo, useState } from 'react';\nimport { AlertTriangle } from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport { Flex, Text } from 'rebass';\nimport { ConfirmAddModalBottom } from 'components/ConfirmAddModalBottom';\nimport CurrentPrice from 'components/CurrentPrice';\nimport Loader from 'components/Loader';\nimport { PoolPriceBar, PoolPriceRangeBar, ToggleComponent } from 'components/PoolPriceBar';\nimport QuestionHelper from 'components/QuestionHelper';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { nativeOnChain } from 'constants/tokens';\nimport useTheme from 'hooks/useTheme';\nimport useTokensMarketPrice from 'hooks/useTokensMarketPrice';\nimport { feeRangeCalc, useCurrencyConvertedToNative } from 'utils/dmm';\nimport isZero from 'utils/isZero';\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport Row, { AutoRow, RowBetween, RowFlat } from '../../components/Row';\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from '../../components/TransactionConfirmationModal';\nimport { AMP_HINT } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useTokensPrice, useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, usePairAdderByTokens, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { StyledInternalLink, TYPE, UppercaseText } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, formattedNum, getDynamicFeeRouterContract, getOldStaticFeeRouterContract, getStaticFeeRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ActiveText, CurrentPriceWrapper, DynamicFeeRangeWrapper, FirstColumn, GridColumn, PoolRatioWrapper, SecondColumn, Section, USDPrice, Warning } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TokenPair = function TokenPair(_ref) {\n  _s();\n\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _formattedAmounts, _NETWORKS_INFO$chainI, _NETWORKS_INFO$chainI2, _parsedAmounts$Field$, _parsedAmounts$Field$2;\n\n  var currencyIdA = _ref.currencyIdA,\n      currencyIdB = _ref.currencyIdB,\n      pairAddress = _ref.pairAddress;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account,\n      chainId = _useActiveWeb3React.chainId,\n      library = _useActiveWeb3React.library;\n\n  var theme = useTheme();\n  var currencyA = useCurrency(currencyIdA);\n  var currencyB = useCurrency(currencyIdB);\n  var currencyAIsETHER = !!(chainId && currencyA && currencyA.isNative);\n  var currencyAIsWETH = !!(chainId && currencyA && currencyA.equals(WETH[chainId]));\n  var currencyBIsETHER = !!(chainId && currencyB && currencyB.isNative);\n  var currencyBIsWETH = !!(chainId && currencyB && currencyB.equals(WETH[chainId]));\n  var toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  var expertMode = useIsExpertMode(); // mint state\n\n  var _useMintState = useMintState(),\n      independentField = _useMintState.independentField,\n      typedValue = _useMintState.typedValue,\n      otherTypedValue = _useMintState.otherTypedValue;\n\n  var _useDerivedMintInfo = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined, pairAddress),\n      dependentField = _useDerivedMintInfo.dependentField,\n      currencies = _useDerivedMintInfo.currencies,\n      pair = _useDerivedMintInfo.pair,\n      pairState = _useDerivedMintInfo.pairState,\n      currencyBalances = _useDerivedMintInfo.currencyBalances,\n      parsedAmounts = _useDerivedMintInfo.parsedAmounts,\n      price = _useDerivedMintInfo.price,\n      noLiquidity = _useDerivedMintInfo.noLiquidity,\n      liquidityMinted = _useDerivedMintInfo.liquidityMinted,\n      poolTokenPercentage = _useDerivedMintInfo.poolTokenPercentage,\n      error = _useDerivedMintInfo.error,\n      unAmplifiedPairAddress = _useDerivedMintInfo.unAmplifiedPairAddress,\n      isStaticFeePair = _useDerivedMintInfo.isStaticFeePair,\n      isOldStaticFeeContract = _useDerivedMintInfo.isOldStaticFeeContract;\n\n  var nativeA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A]);\n  var nativeB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B]);\n  var amp = (pair === null || pair === void 0 ? void 0 : pair.amp) || JSBI.BigInt(0);\n  var ampConvertedInBps = !!amp.toString() ? new Fraction(JSBI.BigInt(parseUnits(amp.toString() || '1', 20)), JSBI.BigInt(parseUnits('1', 16))) : undefined;\n  var linkToUnamplifiedPool = !!ampConvertedInBps && ampConvertedInBps.equalTo(JSBI.BigInt(10000)) && !!unAmplifiedPairAddress && !isZero(unAmplifiedPairAddress);\n\n  var _useMintActionHandler = useMintActionHandlers(noLiquidity),\n      onFieldAInput = _useMintActionHandler.onFieldAInput,\n      onFieldBInput = _useMintActionHandler.onFieldBInput;\n\n  var isValid = !error; // modal and loading\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showConfirm = _useState2[0],\n      setShowConfirm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attemptingTxn = _useState4[0],\n      setAttemptingTxn = _useState4[1]; // clicked confirm\n  // txn values\n\n\n  var deadline = useTransactionDeadline(); // custom from users settings\n\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n      _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n      allowedSlippage = _useUserSlippageToler2[0]; // custom from users\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      txHash = _useState6[0],\n      setTxHash = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      addLiquidityError = _useState8[0],\n      setAddLiquidityError = _useState8[1]; // get formatted amounts\n\n\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts); // get the max amounts user can add\n\n  var maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(function (accumulator, field) {\n    return _objectSpread(_objectSpread({}, accumulator), {}, _defineProperty({}, field, maxAmountSpend(currencyBalances[field])));\n  }, {});\n  var routerAddress = chainId ? isStaticFeePair ? isOldStaticFeeContract ? (_NETWORKS_INFO$chainI = NETWORKS_INFO[chainId].classic.oldStatic) === null || _NETWORKS_INFO$chainI === void 0 ? void 0 : _NETWORKS_INFO$chainI.router : NETWORKS_INFO[chainId].classic.static.router : (_NETWORKS_INFO$chainI2 = NETWORKS_INFO[chainId].classic.dynamic) === null || _NETWORKS_INFO$chainI2 === void 0 ? void 0 : _NETWORKS_INFO$chainI2.router : undefined; // check whether the user has approved the router on the tokens\n\n  var _useApproveCallback = useApproveCallback(parsedAmounts[Field.CURRENCY_A], routerAddress || undefined),\n      _useApproveCallback2 = _slicedToArray(_useApproveCallback, 2),\n      approvalA = _useApproveCallback2[0],\n      approveACallback = _useApproveCallback2[1];\n\n  var _useApproveCallback3 = useApproveCallback(parsedAmounts[Field.CURRENCY_B], routerAddress || undefined),\n      _useApproveCallback4 = _slicedToArray(_useApproveCallback3, 2),\n      approvalB = _useApproveCallback4[0],\n      approveBCallback = _useApproveCallback4[1];\n\n  var addTransactionWithType = useTransactionAdder();\n  var addPair = usePairAdderByTokens();\n\n  function onAdd() {\n    return _onAdd.apply(this, arguments);\n  }\n\n  function _onAdd() {\n    _onAdd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _amountsMin;\n\n      var router, parsedAmountA, parsedAmountB, amountsMin, estimate, method, args, value, _address, _ref2, tokenBIsETH, virtualReserveToken, virtualReserveETH, currentRate, allowedSlippageAmount, vReserveRatioBounds, _currencyA$wrapped$ad, _currencyB$wrapped$ad, virtualReserveA, virtualReserveB, _currentRate, _allowedSlippageAmount, _vReserveRatioBounds;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!chainId || !library || !account)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              router = isStaticFeePair ? isOldStaticFeeContract ? getOldStaticFeeRouterContract(chainId, library, account) : getStaticFeeRouterContract(chainId, library, account) : getDynamicFeeRouterContract(chainId, library, account);\n              parsedAmountA = parsedAmounts[Field.CURRENCY_A], parsedAmountB = parsedAmounts[Field.CURRENCY_B];\n\n              if (!(!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              amountsMin = (_amountsMin = {}, _defineProperty(_amountsMin, Field.CURRENCY_A, calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0]), _defineProperty(_amountsMin, Field.CURRENCY_B, calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]), _amountsMin);\n\n              if (pair) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              if (currencyA.isNative || currencyB.isNative) {\n                tokenBIsETH = currencyB.isNative;\n                virtualReserveToken = pair.virtualReserveOf(tokenBIsETH ? currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped : currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped);\n                virtualReserveETH = pair.virtualReserveOf(tokenBIsETH ? currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped : currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped);\n                currentRate = JSBI.divide(JSBI.multiply(virtualReserveETH.quotient, JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(112))), virtualReserveToken.quotient);\n                allowedSlippageAmount = JSBI.divide(JSBI.multiply(currentRate, JSBI.BigInt(allowedSlippage)), JSBI.BigInt(10000));\n                vReserveRatioBounds = [JSBI.subtract(currentRate, allowedSlippageAmount).toString(), JSBI.add(currentRate, allowedSlippageAmount).toString()];\n                estimate = router.estimateGas.addLiquidityETH;\n                method = router.addLiquidityETH;\n                args = [(_address = (_ref2 = tokenBIsETH ? currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped : currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped) === null || _ref2 === void 0 ? void 0 : _ref2.address) !== null && _address !== void 0 ? _address : '', // token\n                pair.address, // 40000,                                                                              //ampBps\n                (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n                amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n                amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n                vReserveRatioBounds, account, deadline.toHexString()];\n                value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString());\n              } else {\n                virtualReserveA = pair.virtualReserveOf(currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped);\n                virtualReserveB = pair.virtualReserveOf(currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped);\n                _currentRate = JSBI.divide(JSBI.multiply(virtualReserveB.quotient, JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(112))), virtualReserveA.quotient);\n                _allowedSlippageAmount = JSBI.divide(JSBI.multiply(_currentRate, JSBI.BigInt(allowedSlippage)), JSBI.BigInt(10000));\n                _vReserveRatioBounds = [JSBI.subtract(_currentRate, _allowedSlippageAmount).toString(), JSBI.add(_currentRate, _allowedSlippageAmount).toString()];\n                estimate = router.estimateGas.addLiquidity;\n                method = router.addLiquidity;\n                args = [(_currencyA$wrapped$ad = currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped.address) !== null && _currencyA$wrapped$ad !== void 0 ? _currencyA$wrapped$ad : '', (_currencyB$wrapped$ad = currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped.address) !== null && _currencyB$wrapped$ad !== void 0 ? _currencyB$wrapped$ad : '', pair.address, // 40000,                                                                              //ampBps\n                parsedAmountA.quotient.toString(), parsedAmountB.quotient.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), _vReserveRatioBounds, account, deadline.toHexString()];\n                value = null;\n              }\n\n              setAttemptingTxn(true);\n              _context.next = 13;\n              return estimate.apply(void 0, _toConsumableArray(args).concat([value ? {\n                value: value\n              } : {}])).then(function (estimatedGasLimit) {\n                return method.apply(void 0, _toConsumableArray(args).concat([_objectSpread(_objectSpread({}, value ? {\n                  value: value\n                } : {}), {}, {\n                  gasLimit: calculateGasMargin(estimatedGasLimit)\n                })])).then(function (response) {\n                  var cA = currencies[Field.CURRENCY_A];\n                  var cB = currencies[Field.CURRENCY_B];\n\n                  if (!!cA && !!cB) {\n                    var _parsedAmounts$Field$3, _parsedAmounts$Field$4;\n\n                    setAttemptingTxn(false);\n                    addTransactionWithType(response, {\n                      type: 'Add liquidity',\n                      summary: ((_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(6)) + ' ' + cA.symbol + ' and ' + ((_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) + ' ' + cB.symbol,\n                      arbitrary: {\n                        poolAddress: pairAddress,\n                        token_1: cA.symbol,\n                        token_2: cB.symbol,\n                        add_liquidity_method: 'token pair',\n                        amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\n                        txHash: response.hash\n                      }\n                    });\n                    setTxHash(response.hash);\n                    var tA = cA.wrapped;\n                    var tB = cB.wrapped;\n\n                    if (!!tA && !!tB) {\n                      // In case subgraph sync is slow, doing this will show the pool in \"My Pools\" page.\n                      addPair(tA, tB);\n                    }\n                  }\n                });\n              }).catch(function (err) {\n                setAttemptingTxn(false);\n                var e = new Error('Classic: Add liquidity Error', {\n                  cause: err\n                });\n                e.name = 'AddLiquidityError';\n                captureException(e, {\n                  extra: {\n                    args: args\n                  }\n                }); // we only care if the error is something _other_ than the user rejected the tx\n\n                if ((err === null || err === void 0 ? void 0 : err.code) !== 4001) {\n                  console.error(err);\n                }\n\n                if (err.message.includes('INSUFFICIENT')) {\n                  setAddLiquidityError(\n                  /*i18n*/\n                  i18n._(\"Insufficient liquidity available. Please reload page and try again!\"));\n                } else {\n                  setAddLiquidityError(err === null || err === void 0 ? void 0 : err.message);\n                }\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onAdd.apply(this, arguments);\n  }\n\n  var pendingText = \"Supplying \".concat((_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(6), \" \").concat(nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol, \" and \").concat((_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6), \" \").concat(nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol);\n  var handleDismissConfirmation = useCallback(function () {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldAInput('');\n    }\n\n    setTxHash('');\n    setAddLiquidityError('');\n  }, [onFieldAInput, txHash]);\n  var realPercentToken0 = pair ? pair.reserve0.asFraction.divide(pair.virtualReserve0).multiply('100').divide(pair.reserve0.divide(pair.virtualReserve0).asFraction.add(pair.reserve1.divide(pair.virtualReserve1).asFraction)) : new Fraction(JSBI.BigInt(50));\n  var realPercentToken1 = new Fraction(JSBI.BigInt(100), JSBI.BigInt(1)).subtract(realPercentToken0);\n  var percentToken0 = realPercentToken0.toSignificant(4);\n  var percentToken1 = realPercentToken1.toSignificant(4);\n  var tokens = useMemo(function () {\n    return [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]].map(function (currency) {\n      return currency === null || currency === void 0 ? void 0 : currency.wrapped;\n    });\n  }, [currencies]);\n  var usdPrices = useTokensPrice(tokens);\n  var marketPrices = useTokensMarketPrice(tokens);\n  var estimatedUsdCurrencyA = parsedAmounts[Field.CURRENCY_A] && usdPrices[0] ? parseFloat(parsedAmounts[Field.CURRENCY_A].toSignificant(6)) * usdPrices[0] : 0;\n  var estimatedUsdCurrencyB = parsedAmounts[Field.CURRENCY_B] && usdPrices[1] ? parseFloat(parsedAmounts[Field.CURRENCY_B].toSignificant(6)) * usdPrices[1] : 0;\n  var poolPrice = Number(price === null || price === void 0 ? void 0 : price.toSignificant(6));\n  var marketPrice = marketPrices[1] && marketPrices[0] / marketPrices[1];\n  var showSanityPriceWarning = !!(poolPrice && marketPrice && Math.abs(poolPrice - marketPrice) / marketPrice > 0.05);\n  var history = useHistory();\n\n  var modalHeader = function modalHeader() {\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"5px\",\n      children: [/*#__PURE__*/_jsxDEV(RowFlat, {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          fontWeight: 500,\n          lineHeight: \"42px\",\n          marginRight: 10,\n          children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: 'DMM ' + (nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol) + '/' + (nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol) + ' LP Tokens'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TYPE.italic, {\n        fontSize: 12,\n        textAlign: \"left\",\n        padding: '8px 0 0 0 ',\n        children:\n        /*i18n*/\n        i18n._(\"Output is estimated. If the price changes by more than {0}% your transaction will revert.\", {\n          0: allowedSlippage / 100\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var modalBottom = function modalBottom() {\n    return /*#__PURE__*/_jsxDEV(ConfirmAddModalBottom, {\n      pair: pair,\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: false,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage,\n      amplification: ampConvertedInBps,\n      estimatedUsd: [estimatedUsdCurrencyA, estimatedUsdCurrencyB]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n      isOpen: showConfirm,\n      onDismiss: handleDismissConfirmation,\n      attemptingTxn: attemptingTxn,\n      hash: txHash,\n      content: function content() {\n        return addLiquidityError ? /*#__PURE__*/_jsxDEV(TransactionErrorContent, {\n          onDismiss: handleDismissConfirmation,\n          message: addLiquidityError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, _this) : !linkToUnamplifiedPool ? /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title:\n          /*i18n*/\n          i18n._(\"You will receive\"),\n          onDismiss: handleDismissConfirmation,\n          topContent: modalHeader,\n          bottomContent: modalBottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title:\n          /*i18n*/\n          i18n._(\"Unamplified Pool existed\"),\n          onDismiss: handleDismissConfirmation,\n          topContent: function topContent() {\n            return null;\n          },\n          bottomContent: function bottomContent() {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Please use the link below if you want to add liquidity to Unamplified Pool\", /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                onClick: handleDismissConfirmation,\n                id: \"unamplified-pool-link\",\n                to: \"/add/\".concat(currencyIdA, \"/\").concat(currencyIdB, \"/\").concat(unAmplifiedPairAddress),\n                children: \"Go to unamplified pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, _this);\n      },\n      pendingText: pendingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(GridColumn, {\n        children: [/*#__PURE__*/_jsxDEV(FirstColumn, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.CURRENCY_A],\n              onUserInput: onFieldAInput,\n              onMax: function onMax() {\n                var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n\n                onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n              },\n              onHalf: function onHalf() {\n                var _currencyBalances$Fie, _currencyBalances$Fie2;\n\n                onFieldAInput((_currencyBalances$Fie = (_currencyBalances$Fie2 = currencyBalances[Field.CURRENCY_A]) === null || _currencyBalances$Fie2 === void 0 ? void 0 : _currencyBalances$Fie2.divide(2).toExact()) !== null && _currencyBalances$Fie !== void 0 ? _currencyBalances$Fie : '');\n              },\n              showMaxButton: true,\n              currency: currencies[Field.CURRENCY_A],\n              id: \"add-liquidity-input-tokena\",\n              showCommonBases: true,\n              positionMax: \"top\",\n              estimatedUsd: formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined,\n              disableCurrencySelect: !currencyAIsWETH && !currencyAIsETHER,\n              isSwitchMode: currencyAIsWETH || currencyAIsETHER,\n              onSwitchCurrency: function onSwitchCurrency() {\n                chainId && history.replace(\"/add/\".concat(currencyAIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol, \"/\").concat(currencyIdB, \"/\").concat(pairAddress));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"0.5rem\",\n              children: /*#__PURE__*/_jsxDEV(USDPrice, {\n                children: usdPrices[0] ? \"1 \".concat(nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol, \" = \").concat(formattedNum(usdPrices[0].toString(), true)) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 109\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.CURRENCY_B],\n              onUserInput: onFieldBInput,\n              onMax: function onMax() {\n                var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n\n                onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n              },\n              onHalf: function onHalf() {\n                var _currencyBalances$Fie3, _currencyBalances$Fie4, _currencyBalances$Fie5;\n\n                onFieldBInput((_currencyBalances$Fie3 = (_currencyBalances$Fie4 = currencyBalances[Field.CURRENCY_B]) === null || _currencyBalances$Fie4 === void 0 ? void 0 : (_currencyBalances$Fie5 = _currencyBalances$Fie4.divide(2)) === null || _currencyBalances$Fie5 === void 0 ? void 0 : _currencyBalances$Fie5.toExact()) !== null && _currencyBalances$Fie3 !== void 0 ? _currencyBalances$Fie3 : '');\n              },\n              showMaxButton: true,\n              currency: currencies[Field.CURRENCY_B],\n              disableCurrencySelect: true,\n              id: \"add-liquidity-input-tokenb\",\n              showCommonBases: true,\n              positionMax: \"top\",\n              estimatedUsd: formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"0.5rem\",\n              children: [/*#__PURE__*/_jsxDEV(USDPrice, {\n                children: usdPrices[1] ? \"1 \".concat(nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol, \" = \").concat(formattedNum(usdPrices[1].toString(), true)) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 109\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, _this), pairAddress && chainId && (currencyBIsWETH || currencyBIsETHER) && /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                replace: true,\n                to: \"/add/\".concat(currencyIdA, \"/\").concat(currencyBIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol, \"/\").concat(pairAddress),\n                children: currencyBIsETHER ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Use Wrapped Token\"\n                }, void 0, false, void 0, _this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Use Native Token\"\n                }, void 0, false, void 0, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, _this), currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(Section, {\n            padding: \"0\",\n            marginTop: \"8px\",\n            style: {\n              marginTop: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(PoolPriceBar, {\n              currencies: currencies,\n              poolTokenPercentage: poolTokenPercentage,\n              noLiquidity: noLiquidity,\n              price: price,\n              pair: pair\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n          children: [currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(Section, {\n            borderRadius: '20px',\n            marginBottom: \"24px\",\n            children: /*#__PURE__*/_jsxDEV(ToggleComponent, {\n              title:\n              /*i18n*/\n              i18n._(\"Pool Information\"),\n              children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                padding: \"16px 0\",\n                style: {\n                  borderBottom: \"1px dashed \".concat(theme.border),\n                  gap: '1rem'\n                },\n                children: [!noLiquidity && /*#__PURE__*/_jsxDEV(CurrentPriceWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                    fontWeight: 500,\n                    fontSize: 12,\n                    color: theme.subText,\n                    children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Current Price\"\n                      }, void 0, false, void 0, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: /*#__PURE__*/_jsxDEV(CurrentPrice, {\n                      price: price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(PoolRatioWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                    fontWeight: 500,\n                    fontSize: 12,\n                    color: theme.subText,\n                    children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Pool Ratio\"\n                      }, void 0, false, void 0, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: [percentToken0, \"% \", pair === null || pair === void 0 ? void 0 : pair.token0.symbol, \" - \", percentToken1, \"% \", pair === null || pair === void 0 ? void 0 : pair.token1.symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(AutoRow, {\n                padding: \"16px 0\",\n                style: {\n                  borderBottom: \"1px dashed \".concat(theme.border),\n                  gap: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n                  style: {\n                    flex: '1'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontWeight: 500,\n                      fontSize: 12,\n                      color: theme.subText,\n                      children: \"AMP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                      text: AMP_HINT\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: !!pair ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)\n                    }, void 0, false) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 21\n                }, _this), (!!pairAddress || +amp >= 1) && /*#__PURE__*/_jsxDEV(DynamicFeeRangeWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontWeight: 500,\n                      fontSize: 12,\n                      color: theme.subText,\n                      children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                        children: isStaticFeePair || !pair ? /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Fee\"\n                        }, void 0, false, void 0, _this) : /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Dynamic Fee Range\"\n                        }, void 0, false, void 0, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                      text: isStaticFeePair || !pair ?\n                      /*i18n*/\n                      i18n._(\"Liquidity providers will earn this trading fee for each trade that uses this pool\") :\n                      /*i18n*/\n                      i18n._(\"Fees are adjusted dynamically according to market conditions to maximise returns for liquidity providers\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: !!pair ? isStaticFeePair && pair !== null && pair !== void 0 && pair.fee ? +new Fraction(JSBI.BigInt(pair.fee)).divide(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))).toSignificant(6) * 100 + '%' : feeRangeCalc(!!(pair !== null && pair !== void 0 && pair.amp) ? +new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5) : +amp) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, _this), currencies[independentField] && currencies[dependentField] && (!!pairAddress || +amp >= 1) && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '16px 0 0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                  marginBottom: \"8px\",\n                  children: [/*#__PURE__*/_jsxDEV(UppercaseText, {\n                    children: /*#__PURE__*/_jsxDEV(ActiveText, {\n                      children: \"Active Price Range\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                    text:\n                    /*i18n*/\n                    i18n._(\"Tradable token pair price range for this pool based on AMP. If the price goes below or above this range, the pool may become inactive\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 632,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(PoolPriceRangeBar, {\n                  currencies: currencies,\n                  price: price,\n                  pair: pair,\n                  amplification: ampConvertedInBps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, _this), showSanityPriceWarning && /*#__PURE__*/_jsxDEV(Warning, {\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              color: theme.yellow2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"0.75rem\",\n              marginLeft: \"0.75rem\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"The price is deviating quite a lot from that market price, please be careful!\"\n              }, void 0, false, void 0, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, _this), !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n            onClick: toggleWalletModal,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Connect Wallet\"\n            }, void 0, false, void 0, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: 'md',\n            children: [(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [approvalA !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveACallback,\n                disabled: approvalA === ApprovalState.PENDING,\n                width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalA === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: [\"Approving \", nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 29\n                }, _this) : 'Approve ' + (nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 25\n              }, _this), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveBCallback,\n                disabled: approvalB === ApprovalState.PENDING,\n                width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalB === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: [\"Approving \", nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 29\n                }, _this) : 'Approve ' + (nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: function onClick() {\n                expertMode ? onAdd() : setShowConfirm(true);\n              },\n              disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n              error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B] && !!(pairAddress && +amp < 1),\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 20,\n                fontWeight: 500,\n                children: error !== null && error !== void 0 ? error : !pairAddress && +amp < 1 ?\n                /*i18n*/\n                i18n._(\"Enter amp (>=1)\") :\n                /*i18n*/\n                i18n._(\"Supply\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TokenPair, \"zDoUNGPxgfH5oj4keb+v44okX9E=\", false, function () {\n  return [useActiveWeb3React, useTheme, useCurrency, useCurrency, useWalletModalToggle, useIsExpertMode, useMintState, useDerivedMintInfo, useCurrencyConvertedToNative, useCurrencyConvertedToNative, useMintActionHandlers, useTransactionDeadline, useUserSlippageTolerance, useApproveCallback, useApproveCallback, useTransactionAdder, usePairAdderByTokens, useTokensPrice, useTokensMarketPrice, useHistory];\n});\n\n_c = TokenPair;\nexport default TokenPair;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenPair\");","map":{"version":3,"names":["BigNumber","Fraction","WETH","captureException","parseUnits","JSBI","useCallback","useMemo","useState","AlertTriangle","useHistory","Flex","Text","ConfirmAddModalBottom","CurrentPrice","Loader","PoolPriceBar","PoolPriceRangeBar","ToggleComponent","QuestionHelper","NETWORKS_INFO","nativeOnChain","useTheme","useTokensMarketPrice","feeRangeCalc","useCurrencyConvertedToNative","isZero","ButtonError","ButtonLight","ButtonPrimary","AutoColumn","CurrencyInputPanel","Row","AutoRow","RowBetween","RowFlat","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","AMP_HINT","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","useTokensPrice","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","usePairAdderByTokens","useUserSlippageTolerance","StyledInternalLink","TYPE","UppercaseText","calculateGasMargin","calculateSlippageAmount","formattedNum","getDynamicFeeRouterContract","getOldStaticFeeRouterContract","getStaticFeeRouterContract","maxAmountSpend","Dots","Wrapper","ActiveText","CurrentPriceWrapper","DynamicFeeRangeWrapper","FirstColumn","GridColumn","PoolRatioWrapper","SecondColumn","Section","USDPrice","Warning","TokenPair","currencyIdA","currencyIdB","pairAddress","account","chainId","library","theme","currencyA","currencyB","currencyAIsETHER","isNative","currencyAIsWETH","equals","currencyBIsETHER","currencyBIsWETH","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","undefined","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","unAmplifiedPairAddress","isStaticFeePair","isOldStaticFeeContract","nativeA","CURRENCY_A","nativeB","CURRENCY_B","amp","BigInt","ampConvertedInBps","toString","linkToUnamplifiedPool","equalTo","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","addLiquidityError","setAddLiquidityError","formattedAmounts","toSignificant","maxAmounts","reduce","accumulator","field","routerAddress","classic","oldStatic","router","static","dynamic","approvalA","approveACallback","approvalB","approveBCallback","addTransactionWithType","addPair","onAdd","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","virtualReserveToken","virtualReserveOf","wrapped","virtualReserveETH","currentRate","divide","multiply","quotient","exponentiate","allowedSlippageAmount","vReserveRatioBounds","subtract","add","estimate","estimateGas","addLiquidityETH","method","args","address","toHexString","value","from","virtualReserveA","virtualReserveB","addLiquidity","then","estimatedGasLimit","gasLimit","response","cA","cB","type","summary","symbol","arbitrary","poolAddress","token_1","token_2","add_liquidity_method","hash","tA","tB","catch","err","e","Error","cause","name","extra","code","console","message","includes","pendingText","handleDismissConfirmation","realPercentToken0","reserve0","asFraction","virtualReserve0","reserve1","virtualReserve1","realPercentToken1","percentToken0","percentToken1","tokens","map","currency","usdPrices","marketPrices","estimatedUsdCurrencyA","parseFloat","estimatedUsdCurrencyB","poolPrice","Number","marketPrice","showSanityPriceWarning","Math","abs","history","modalHeader","marginTop","modalBottom","toExact","replace","INVALID","borderBottom","border","gap","subText","text","token0","token1","flex","fee","padding","yellow2","NOT_APPROVED","PENDING","APPROVED"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/AddLiquidity/TokenPair.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Fraction, TokenAmount, WETH } from '@kyberswap/ks-sdk-core'\nimport { Trans, t } from '@lingui/macro'\nimport { captureException } from '@sentry/react'\nimport { parseUnits } from 'ethers/lib/utils'\nimport JSBI from 'jsbi'\nimport { useCallback, useMemo, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useHistory } from 'react-router-dom'\nimport { Flex, Text } from 'rebass'\n\nimport { ConfirmAddModalBottom } from 'components/ConfirmAddModalBottom'\nimport CurrentPrice from 'components/CurrentPrice'\nimport Loader from 'components/Loader'\nimport { PoolPriceBar, PoolPriceRangeBar, ToggleComponent } from 'components/PoolPriceBar'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { nativeOnChain } from 'constants/tokens'\nimport useTheme from 'hooks/useTheme'\nimport useTokensMarketPrice from 'hooks/useTokensMarketPrice'\nimport { feeRangeCalc, useCurrencyConvertedToNative } from 'utils/dmm'\nimport isZero from 'utils/isZero'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport Row, { AutoRow, RowBetween, RowFlat } from '../../components/Row'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from '../../components/TransactionConfirmationModal'\nimport { AMP_HINT } from '../../constants'\nimport { PairState } from '../../data/Reserves'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useTokensPrice, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, usePairAdderByTokens, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { StyledInternalLink, TYPE, UppercaseText } from '../../theme'\nimport {\n  calculateGasMargin,\n  calculateSlippageAmount,\n  formattedNum,\n  getDynamicFeeRouterContract,\n  getOldStaticFeeRouterContract,\n  getStaticFeeRouterContract,\n} from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport {\n  ActiveText,\n  CurrentPriceWrapper,\n  DynamicFeeRangeWrapper,\n  FirstColumn,\n  GridColumn,\n  PoolRatioWrapper,\n  SecondColumn,\n  Section,\n  USDPrice,\n  Warning,\n} from './styled'\n\nconst TokenPair = ({\n  currencyIdA,\n  currencyIdB,\n  pairAddress,\n}: {\n  currencyIdA: string\n  currencyIdB: string\n  pairAddress: string\n}) => {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useTheme()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const currencyAIsETHER = !!(chainId && currencyA && currencyA.isNative)\n  const currencyAIsWETH = !!(chainId && currencyA && currencyA.equals(WETH[chainId]))\n  const currencyBIsETHER = !!(chainId && currencyB && currencyB.isNative)\n  const currencyBIsWETH = !!(chainId && currencyB && currencyB.equals(WETH[chainId]))\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    unAmplifiedPairAddress,\n    isStaticFeePair,\n    isOldStaticFeeContract,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined, pairAddress)\n  const nativeA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A])\n  const nativeB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B])\n\n  const amp = pair?.amp || JSBI.BigInt(0)\n\n  const ampConvertedInBps = !!amp.toString()\n    ? new Fraction(JSBI.BigInt(parseUnits(amp.toString() || '1', 20)), JSBI.BigInt(parseUnits('1', 16)))\n    : undefined\n\n  const linkToUnamplifiedPool =\n    !!ampConvertedInBps &&\n    ampConvertedInBps.equalTo(JSBI.BigInt(10000)) &&\n    !!unAmplifiedPairAddress &&\n    !isZero(unAmplifiedPairAddress)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n  const [addLiquidityError, setAddLiquidityError] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const routerAddress = chainId\n    ? isStaticFeePair\n      ? isOldStaticFeeContract\n        ? NETWORKS_INFO[chainId].classic.oldStatic?.router\n        : NETWORKS_INFO[chainId].classic.static.router\n      : NETWORKS_INFO[chainId].classic.dynamic?.router\n    : undefined\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], routerAddress || undefined)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], routerAddress || undefined)\n\n  const addTransactionWithType = useTransactionAdder()\n  const addPair = usePairAdderByTokens()\n\n  async function onAdd() {\n    // if (!pair) return\n    if (!chainId || !library || !account) return\n    const router = isStaticFeePair\n      ? isOldStaticFeeContract\n        ? getOldStaticFeeRouterContract(chainId, library, account)\n        : getStaticFeeRouterContract(chainId, library, account)\n      : getDynamicFeeRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n\n    if (!pair) return\n\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative\n\n      const virtualReserveToken = pair.virtualReserveOf(tokenBIsETH ? currencyA?.wrapped : currencyB?.wrapped)\n      const virtualReserveETH = pair.virtualReserveOf(tokenBIsETH ? currencyB?.wrapped : currencyA?.wrapped)\n\n      const currentRate = JSBI.divide(\n        JSBI.multiply(virtualReserveETH.quotient, JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(112))),\n        virtualReserveToken.quotient,\n      )\n\n      const allowedSlippageAmount = JSBI.divide(\n        JSBI.multiply(currentRate, JSBI.BigInt(allowedSlippage)),\n        JSBI.BigInt(10000),\n      )\n\n      const vReserveRatioBounds = [\n        JSBI.subtract(currentRate, allowedSlippageAmount).toString(),\n        JSBI.add(currentRate, allowedSlippageAmount).toString(),\n      ]\n\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n\n      args = [\n        (tokenBIsETH ? currencyA?.wrapped : currencyB?.wrapped)?.address ?? '', // token\n        pair.address,\n        // 40000,                                                                              //ampBps\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        vReserveRatioBounds,\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      const virtualReserveA = pair.virtualReserveOf(currencyA?.wrapped)\n      const virtualReserveB = pair.virtualReserveOf(currencyB?.wrapped)\n\n      const currentRate = JSBI.divide(\n        JSBI.multiply(virtualReserveB.quotient, JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(112))),\n        virtualReserveA.quotient,\n      )\n\n      const allowedSlippageAmount = JSBI.divide(\n        JSBI.multiply(currentRate, JSBI.BigInt(allowedSlippage)),\n        JSBI.BigInt(10000),\n      )\n\n      const vReserveRatioBounds = [\n        JSBI.subtract(currentRate, allowedSlippageAmount).toString(),\n        JSBI.add(currentRate, allowedSlippageAmount).toString(),\n      ]\n\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        currencyA?.wrapped.address ?? '',\n        currencyB?.wrapped.address ?? '',\n        pair.address,\n        // 40000,                                                                              //ampBps\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        vReserveRatioBounds,\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then(estimatedGasLimit =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then(response => {\n          const cA = currencies[Field.CURRENCY_A]\n          const cB = currencies[Field.CURRENCY_B]\n          if (!!cA && !!cB) {\n            setAttemptingTxn(false)\n            addTransactionWithType(response, {\n              type: 'Add liquidity',\n              summary:\n                parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) +\n                ' ' +\n                cA.symbol +\n                ' and ' +\n                parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) +\n                ' ' +\n                cB.symbol,\n              arbitrary: {\n                poolAddress: pairAddress,\n                token_1: cA.symbol,\n                token_2: cB.symbol,\n                add_liquidity_method: 'token pair',\n                amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\n                txHash: response.hash,\n              },\n            })\n            setTxHash(response.hash)\n            const tA = cA.wrapped\n            const tB = cB.wrapped\n            if (!!tA && !!tB) {\n              // In case subgraph sync is slow, doing this will show the pool in \"My Pools\" page.\n              addPair(tA, tB)\n            }\n          }\n        }),\n      )\n      .catch(err => {\n        setAttemptingTxn(false)\n        const e = new Error('Classic: Add liquidity Error', { cause: err })\n        e.name = 'AddLiquidityError'\n        captureException(e, { extra: { args } })\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n\n        if (err.message.includes('INSUFFICIENT')) {\n          setAddLiquidityError(t`Insufficient liquidity available. Please reload page and try again!`)\n        } else {\n          setAddLiquidityError(err?.message)\n        }\n      })\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    nativeA?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${nativeB?.symbol}`\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n    setAddLiquidityError('')\n  }, [onFieldAInput, txHash])\n\n  const realPercentToken0 = pair\n    ? pair.reserve0.asFraction\n        .divide(pair.virtualReserve0)\n        .multiply('100')\n        .divide(\n          pair.reserve0\n            .divide(pair.virtualReserve0)\n            .asFraction.add(pair.reserve1.divide(pair.virtualReserve1).asFraction),\n        )\n    : new Fraction(JSBI.BigInt(50))\n\n  const realPercentToken1 = new Fraction(JSBI.BigInt(100), JSBI.BigInt(1)).subtract(realPercentToken0 as Fraction)\n\n  const percentToken0 = realPercentToken0.toSignificant(4)\n  const percentToken1 = realPercentToken1.toSignificant(4)\n\n  const tokens = useMemo(\n    () => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]].map(currency => currency?.wrapped),\n    [currencies],\n  )\n\n  const usdPrices = useTokensPrice(tokens)\n  const marketPrices = useTokensMarketPrice(tokens)\n\n  const estimatedUsdCurrencyA =\n    parsedAmounts[Field.CURRENCY_A] && usdPrices[0]\n      ? parseFloat((parsedAmounts[Field.CURRENCY_A] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[0]\n      : 0\n\n  const estimatedUsdCurrencyB =\n    parsedAmounts[Field.CURRENCY_B] && usdPrices[1]\n      ? parseFloat((parsedAmounts[Field.CURRENCY_B] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[1]\n      : 0\n\n  const poolPrice = Number(price?.toSignificant(6))\n  const marketPrice = marketPrices[1] && marketPrices[0] / marketPrices[1]\n\n  const showSanityPriceWarning = !!(poolPrice && marketPrice && Math.abs(poolPrice - marketPrice) / marketPrice > 0.05)\n  const history = useHistory()\n\n  const modalHeader = () => {\n    return (\n      <AutoColumn gap=\"5px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"24px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">{'DMM ' + nativeA?.symbol + '/' + nativeB?.symbol + ' LP Tokens'}</Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          {t`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        pair={pair}\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={false}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n        amplification={ampConvertedInBps}\n        estimatedUsd={[estimatedUsdCurrencyA, estimatedUsdCurrencyB]}\n      />\n    )\n  }\n\n  return (\n    <Wrapper>\n      <TransactionConfirmationModal\n        isOpen={showConfirm}\n        onDismiss={handleDismissConfirmation}\n        attemptingTxn={attemptingTxn}\n        hash={txHash}\n        content={() =>\n          addLiquidityError ? (\n            <TransactionErrorContent onDismiss={handleDismissConfirmation} message={addLiquidityError} />\n          ) : !linkToUnamplifiedPool ? (\n            <ConfirmationModalContent\n              title={t`You will receive`}\n              onDismiss={handleDismissConfirmation}\n              topContent={modalHeader}\n              bottomContent={modalBottom}\n            />\n          ) : (\n            <ConfirmationModalContent\n              title={t`Unamplified Pool existed`}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => {\n                return null\n              }}\n              bottomContent={() => {\n                return (\n                  <>\n                    Please use the link below if you want to add liquidity to Unamplified Pool\n                    <StyledInternalLink\n                      onClick={handleDismissConfirmation}\n                      id=\"unamplified-pool-link\"\n                      to={`/add/${currencyIdA}/${currencyIdB}/${unAmplifiedPairAddress}`}\n                    >\n                      Go to unamplified pool\n                    </StyledInternalLink>\n                  </>\n                )\n              }}\n            />\n          )\n        }\n        pendingText={pendingText}\n      />\n\n      <AutoColumn gap=\"20px\">\n        <GridColumn>\n          <FirstColumn>\n            <div>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                onHalf={() => {\n                  onFieldAInput(currencyBalances[Field.CURRENCY_A]?.divide(2).toExact() ?? '')\n                }}\n                showMaxButton={true}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases\n                positionMax=\"top\"\n                estimatedUsd={formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined}\n                disableCurrencySelect={!currencyAIsWETH && !currencyAIsETHER}\n                isSwitchMode={currencyAIsWETH || currencyAIsETHER}\n                onSwitchCurrency={() => {\n                  chainId &&\n                    history.replace(\n                      `/add/${\n                        currencyAIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol\n                      }/${currencyIdB}/${pairAddress}`,\n                    )\n                }}\n              />\n              <Flex justifyContent=\"space-between\" alignItems=\"center\" marginTop=\"0.5rem\">\n                <USDPrice>\n                  {usdPrices[0] ? `1 ${nativeA?.symbol} = ${formattedNum(usdPrices[0].toString(), true)}` : <Loader />}\n                </USDPrice>\n              </Flex>\n            </div>\n            <div>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                onHalf={() => {\n                  onFieldBInput(currencyBalances[Field.CURRENCY_B]?.divide(2)?.toExact() ?? '')\n                }}\n                showMaxButton={true}\n                currency={currencies[Field.CURRENCY_B]}\n                disableCurrencySelect={true}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases\n                positionMax=\"top\"\n                estimatedUsd={formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined}\n              />\n              <Flex justifyContent=\"space-between\" alignItems=\"center\" marginTop=\"0.5rem\">\n                <USDPrice>\n                  {usdPrices[1] ? `1 ${nativeB?.symbol} = ${formattedNum(usdPrices[1].toString(), true)}` : <Loader />}\n                </USDPrice>\n\n                {pairAddress && chainId && (currencyBIsWETH || currencyBIsETHER) && (\n                  <StyledInternalLink\n                    replace\n                    to={`/add/${currencyIdA}/${\n                      currencyBIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol\n                    }/${pairAddress}`}\n                  >\n                    {currencyBIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\n                  </StyledInternalLink>\n                )}\n              </Flex>\n            </div>\n\n            {currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && (\n              <Section padding=\"0\" marginTop=\"8px\" style={{ marginTop: '8px' }}>\n                <PoolPriceBar\n                  currencies={currencies}\n                  poolTokenPercentage={poolTokenPercentage}\n                  noLiquidity={noLiquidity}\n                  price={price}\n                  pair={pair}\n                />\n              </Section>\n            )}\n          </FirstColumn>\n\n          <SecondColumn>\n            {currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && (\n              <Section borderRadius={'20px'} marginBottom=\"24px\">\n                <ToggleComponent title={t`Pool Information`}>\n                  <AutoRow padding=\"16px 0\" style={{ borderBottom: `1px dashed ${theme.border}`, gap: '1rem' }}>\n                    {!noLiquidity && (\n                      <CurrentPriceWrapper>\n                        <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\n                          <UppercaseText>\n                            <Trans>Current Price</Trans>\n                          </UppercaseText>\n                        </TYPE.subHeader>\n                        <TYPE.black fontWeight={400} fontSize={14} color={theme.text}>\n                          <CurrentPrice price={price} />\n                        </TYPE.black>\n                      </CurrentPriceWrapper>\n                    )}\n\n                    <PoolRatioWrapper>\n                      <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\n                        <UppercaseText>\n                          <Trans>Pool Ratio</Trans>\n                        </UppercaseText>\n                      </TYPE.subHeader>\n                      <TYPE.black fontWeight={400} fontSize={14} color={theme.text}>\n                        {percentToken0}% {pair?.token0.symbol} - {percentToken1}% {pair?.token1.symbol}\n                      </TYPE.black>\n                    </PoolRatioWrapper>\n                  </AutoRow>\n\n                  <AutoRow padding=\"16px 0\" style={{ borderBottom: `1px dashed ${theme.border}`, gap: '1rem' }}>\n                    <AutoColumn style={{ flex: '1' }}>\n                      <AutoRow>\n                        <Text fontWeight={500} fontSize={12} color={theme.subText}>\n                          AMP\n                        </Text>\n                        <QuestionHelper text={AMP_HINT} />\n                      </AutoRow>\n                      <Text fontWeight={400} fontSize={14} color={theme.text}>\n                        {!!pair ? (\n                          <>{new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)}</>\n                        ) : (\n                          ''\n                        )}\n                      </Text>\n                    </AutoColumn>\n\n                    {(!!pairAddress || +amp >= 1) && (\n                      <DynamicFeeRangeWrapper>\n                        <AutoRow>\n                          <Text fontWeight={500} fontSize={12} color={theme.subText}>\n                            <UppercaseText>\n                              {isStaticFeePair || !pair ? <Trans>Fee</Trans> : <Trans>Dynamic Fee Range</Trans>}\n                            </UppercaseText>\n                          </Text>\n                          <QuestionHelper\n                            text={\n                              isStaticFeePair || !pair\n                                ? t`Liquidity providers will earn this trading fee for each trade that uses this pool`\n                                : t`Fees are adjusted dynamically according to market conditions to maximise returns for liquidity providers`\n                            }\n                          />\n                        </AutoRow>\n                        <Text fontWeight={400} fontSize={14} color={theme.text}>\n                          {!!pair\n                            ? isStaticFeePair && pair?.fee\n                              ? +new Fraction(JSBI.BigInt(pair.fee))\n                                  .divide(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18)))\n                                  .toSignificant(6) *\n                                  100 +\n                                '%'\n                              : feeRangeCalc(\n                                  !!pair?.amp\n                                    ? +new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)\n                                    : +amp,\n                                )\n                            : ''}\n                        </Text>\n                      </DynamicFeeRangeWrapper>\n                    )}\n                  </AutoRow>\n\n                  {currencies[independentField] && currencies[dependentField] && (!!pairAddress || +amp >= 1) && (\n                    <div style={{ padding: '16px 0 0' }}>\n                      <AutoRow marginBottom=\"8px\">\n                        <UppercaseText>\n                          <ActiveText>Active Price Range</ActiveText>\n                        </UppercaseText>\n                        <QuestionHelper\n                          text={t`Tradable token pair price range for this pool based on AMP. If the price goes below or above this range, the pool may become inactive`}\n                        />\n                      </AutoRow>\n\n                      <PoolPriceRangeBar\n                        currencies={currencies}\n                        price={price}\n                        pair={pair}\n                        amplification={ampConvertedInBps}\n                      />\n                    </div>\n                  )}\n                </ToggleComponent>\n              </Section>\n            )}\n\n            {showSanityPriceWarning && (\n              <Warning>\n                <AlertTriangle color={theme.yellow2} />\n                <Text fontSize=\"0.75rem\" marginLeft=\"0.75rem\">\n                  <Trans>The price is deviating quite a lot from that market price, please be careful!</Trans>\n                </Text>\n              </Warning>\n            )}\n\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                <Trans>Connect Wallet</Trans>\n              </ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>Approving {nativeA?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + nativeA?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>Approving {nativeB?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + nativeB?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={\n                    !isValid &&\n                    !!parsedAmounts[Field.CURRENCY_A] &&\n                    !!parsedAmounts[Field.CURRENCY_B] &&\n                    !!(pairAddress && +amp < 1)\n                  }\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? (!pairAddress && +amp < 1 ? t`Enter amp (>=1)` : t`Supply`)}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </SecondColumn>\n        </GridColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default TokenPair\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}