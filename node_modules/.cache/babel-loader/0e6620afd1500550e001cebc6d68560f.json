{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { defaultAbiCoder } from '@ethersproject/abi';\nimport { getCreate2Address } from '@ethersproject/address';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { keccak256 } from '@ethersproject/solidity';\nimport { ChainId } from '@kyberswap/ks-sdk-core';\nimport { useMemo } from 'react';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { useActiveWeb3React } from 'hooks';\nimport { useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks';\nimport { useProAmmNFTPositionManagerContract } from './useContract'; //           { \"internalType\": \"uint96\", \"name\": \"nonce\", \"type\": \"uint96\" },\n//           { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" },\n//           { \"internalType\": \"uint80\", \"name\": \"poolId\", \"type\": \"uint80\" },\n//           { \"internalType\": \"int24\", \"name\": \"tickLower\", \"type\": \"int24\" },\n//           { \"internalType\": \"int24\", \"name\": \"tickUpper\", \"type\": \"int24\" },\n//           { \"internalType\": \"uint128\", \"name\": \"liquidity\", \"type\": \"uint128\" },\n//           { \"internalType\": \"uint256\", \"name\": \"rTokenOwed\", \"type\": \"uint256\" },\n//           { \"internalType\": \"uint256\", \"name\": \"feeGrowthInsideLast\", \"type\": \"uint256\" }\n\nexport function useProAmmPositionsFromTokenIds(tokenIds) {\n  _s();\n\n  var positionManager = useProAmmNFTPositionManagerContract();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId;\n\n  var inputs = useMemo(function () {\n    return tokenIds ? tokenIds.map(function (tokenId) {\n      return [tokenId];\n    }) : [];\n  }, [tokenIds]);\n  var results = useSingleContractMultipleData(positionManager, 'positions', inputs);\n  var loading = useMemo(function () {\n    return results.some(function (_ref) {\n      var loading = _ref.loading;\n      return loading;\n    });\n  }, [results]);\n  var error = useMemo(function () {\n    return results.some(function (_ref2) {\n      var error = _ref2.error;\n      return error;\n    });\n  }, [results]);\n  var positions = useMemo(function () {\n    if (!loading && !error && tokenIds) {\n      return results.map(function (call, i) {\n        var tokenId = tokenIds[i];\n        var result = call.result;\n        return {\n          tokenId: tokenId,\n          poolId: getCreate2Address(NETWORKS_INFO[chainId || ChainId.MAINNET].elastic.coreFactory, keccak256(['bytes'], [defaultAbiCoder.encode(['address', 'address', 'uint24'], [result.info.token0, result.info.token1, result.info.fee])]), NETWORKS_INFO[chainId || ChainId.MAINNET].elastic.initCodeHash),\n          feeGrowthInsideLast: result.pos.feeGrowthInsideLast,\n          nonce: result.pos.nonce,\n          liquidity: result.pos.liquidity,\n          operator: result.pos.operator,\n          tickLower: result.pos.tickLower,\n          tickUpper: result.pos.tickUpper,\n          rTokenOwed: result.pos.rTokenOwed,\n          fee: result.info.fee,\n          token0: result.info.token0,\n          token1: result.info.token1\n        };\n      });\n    }\n\n    return undefined;\n  }, [loading, error, results, tokenIds, chainId]);\n  return useMemo(function () {\n    return {\n      loading: loading,\n      positions: positions === null || positions === void 0 ? void 0 : positions.map(function (position, i) {\n        return _objectSpread(_objectSpread({}, position), {}, {\n          tokenId: inputs[i][0]\n        });\n      })\n    };\n  }, [loading, positions, inputs]);\n}\n\n_s(useProAmmPositionsFromTokenIds, \"+QJ+NOFKQjEDIZSOhzJ5KaJK0A4=\", false, function () {\n  return [useProAmmNFTPositionManagerContract, useActiveWeb3React, useSingleContractMultipleData];\n});\n\nexport function useProAmmPositionsFromTokenId(tokenId) {\n  _s2();\n\n  var _position$positions;\n\n  var position = useProAmmPositionsFromTokenIds(tokenId ? [tokenId] : undefined);\n  return {\n    loading: position.loading,\n    position: (_position$positions = position.positions) === null || _position$positions === void 0 ? void 0 : _position$positions[0]\n  };\n}\n\n_s2(useProAmmPositionsFromTokenId, \"tZjOAuYPzjCHHuxgEKyA4WkxTNA=\", false, function () {\n  return [useProAmmPositionsFromTokenIds];\n});\n\nexport var useTokenIdsOwnedByAddress = function useTokenIdsOwnedByAddress(address) {\n  _s3();\n\n  var _balanceResult$;\n\n  var positionManager = useProAmmNFTPositionManagerContract();\n\n  var _useSingleCallResult = useSingleCallResult(positionManager, 'balanceOf', [address !== null && address !== void 0 ? address : undefined]),\n      balanceLoading = _useSingleCallResult.loading,\n      balanceResult = _useSingleCallResult.result; // we don't expect any account balance to ever exceed the bounds of max safe int\n\n\n  var accountBalance = balanceResult === null || balanceResult === void 0 ? void 0 : (_balanceResult$ = balanceResult[0]) === null || _balanceResult$ === void 0 ? void 0 : _balanceResult$.toNumber();\n  var tokenIdsArgs = useMemo(function () {\n    if (accountBalance && address) {\n      var tokenRequests = [];\n\n      for (var i = 0; i < accountBalance; i++) {\n        tokenRequests.push([address, i]);\n      }\n\n      return tokenRequests;\n    }\n\n    return [];\n  }, [address, accountBalance]);\n  var tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs);\n  var someTokenIdsLoading = useMemo(function () {\n    return tokenIdResults.some(function (_ref3) {\n      var loading = _ref3.loading;\n      return loading;\n    });\n  }, [tokenIdResults]);\n  var tokenIds = useMemo(function () {\n    if (address) {\n      return tokenIdResults.map(function (_ref4) {\n        var result = _ref4.result;\n        return result;\n      }).filter(function (result) {\n        return !!result;\n      }).map(function (result) {\n        return BigNumber.from(result[0]);\n      });\n    }\n\n    return [];\n  }, [address, tokenIdResults]);\n  return {\n    loading: balanceLoading || someTokenIdsLoading,\n    tokenIds: tokenIds\n  };\n};\n\n_s3(useTokenIdsOwnedByAddress, \"8eBGDMiYF1/mjSoRx9CCnMZCtho=\", false, function () {\n  return [useProAmmNFTPositionManagerContract, useSingleCallResult, useSingleContractMultipleData];\n});\n\nexport function useProAmmPositions(account) {\n  _s4();\n\n  var _balanceResult$2;\n\n  var positionManager = useProAmmNFTPositionManagerContract();\n\n  var _useSingleCallResult2 = useSingleCallResult(positionManager, 'balanceOf', [account !== null && account !== void 0 ? account : undefined]),\n      balanceLoading = _useSingleCallResult2.loading,\n      balanceResult = _useSingleCallResult2.result; // we don't expect any account balance to ever exceed the bounds of max safe int\n\n\n  var accountBalance = balanceResult === null || balanceResult === void 0 ? void 0 : (_balanceResult$2 = balanceResult[0]) === null || _balanceResult$2 === void 0 ? void 0 : _balanceResult$2.toNumber();\n  var tokenIdsArgs = useMemo(function () {\n    if (accountBalance && account) {\n      var tokenRequests = [];\n\n      for (var i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i]);\n      }\n\n      return tokenRequests;\n    }\n\n    return [];\n  }, [account, accountBalance]);\n  var tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs);\n  var someTokenIdsLoading = useMemo(function () {\n    return tokenIdResults.some(function (_ref5) {\n      var loading = _ref5.loading;\n      return loading;\n    });\n  }, [tokenIdResults]);\n  var tokenIds = useMemo(function () {\n    if (account) {\n      return tokenIdResults.map(function (_ref6) {\n        var result = _ref6.result;\n        return result;\n      }).filter(function (result) {\n        return !!result;\n      }).map(function (result) {\n        return BigNumber.from(result[0]);\n      });\n    }\n\n    return [];\n  }, [account, tokenIdResults]);\n\n  var _useProAmmPositionsFr = useProAmmPositionsFromTokenIds(tokenIds),\n      positions = _useProAmmPositionsFr.positions,\n      positionsLoading = _useProAmmPositionsFr.loading;\n\n  return useMemo(function () {\n    return {\n      loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n      positions: positions\n    };\n  }, [someTokenIdsLoading, balanceLoading, positionsLoading, positions]);\n}\n\n_s4(useProAmmPositions, \"1LSjNLoe1SPL9GIvIXuO1teM++4=\", false, function () {\n  return [useProAmmNFTPositionManagerContract, useSingleCallResult, useSingleContractMultipleData, useProAmmPositionsFromTokenIds];\n});","map":{"version":3,"names":["defaultAbiCoder","getCreate2Address","BigNumber","keccak256","ChainId","useMemo","NETWORKS_INFO","useActiveWeb3React","useSingleCallResult","useSingleContractMultipleData","useProAmmNFTPositionManagerContract","useProAmmPositionsFromTokenIds","tokenIds","positionManager","chainId","inputs","map","tokenId","results","loading","some","error","positions","call","i","result","poolId","MAINNET","elastic","coreFactory","encode","info","token0","token1","fee","initCodeHash","feeGrowthInsideLast","pos","nonce","liquidity","operator","tickLower","tickUpper","rTokenOwed","undefined","position","useProAmmPositionsFromTokenId","useTokenIdsOwnedByAddress","address","balanceLoading","balanceResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","from","useProAmmPositions","account","positionsLoading"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useProAmmPositions.ts"],"sourcesContent":["import { defaultAbiCoder } from '@ethersproject/abi'\nimport { getCreate2Address } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { keccak256 } from '@ethersproject/solidity'\nimport { ChainId } from '@kyberswap/ks-sdk-core'\nimport { useMemo } from 'react'\n\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { useActiveWeb3React } from 'hooks'\nimport { Result, useSingleCallResult, useSingleContractMultipleData } from 'state/multicall/hooks'\nimport { PositionDetails } from 'types/position'\n\nimport { useProAmmNFTPositionManagerContract } from './useContract'\n\n//           { \"internalType\": \"uint96\", \"name\": \"nonce\", \"type\": \"uint96\" },\n//           { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" },\n//           { \"internalType\": \"uint80\", \"name\": \"poolId\", \"type\": \"uint80\" },\n//           { \"internalType\": \"int24\", \"name\": \"tickLower\", \"type\": \"int24\" },\n//           { \"internalType\": \"int24\", \"name\": \"tickUpper\", \"type\": \"int24\" },\n//           { \"internalType\": \"uint128\", \"name\": \"liquidity\", \"type\": \"uint128\" },\n//           { \"internalType\": \"uint256\", \"name\": \"rTokenOwed\", \"type\": \"uint256\" },\n//           { \"internalType\": \"uint256\", \"name\": \"feeGrowthInsideLast\", \"type\": \"uint256\" }\ninterface UseProAmmPositionsResults {\n  loading: boolean\n  positions: PositionDetails[] | undefined\n}\n\nexport function useProAmmPositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseProAmmPositionsResults {\n  const positionManager = useProAmmNFTPositionManagerContract()\n  const { chainId } = useActiveWeb3React()\n\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map(tokenId => [tokenId]) : []), [tokenIds])\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\n\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\n  const error = useMemo(() => results.some(({ error }) => error), [results])\n\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i]\n        const result = call.result as Result\n\n        return {\n          tokenId: tokenId,\n          poolId: getCreate2Address(\n            NETWORKS_INFO[chainId || ChainId.MAINNET].elastic.coreFactory,\n            keccak256(\n              ['bytes'],\n              [\n                defaultAbiCoder.encode(\n                  ['address', 'address', 'uint24'],\n                  [result.info.token0, result.info.token1, result.info.fee],\n                ),\n              ],\n            ),\n            NETWORKS_INFO[chainId || ChainId.MAINNET].elastic.initCodeHash,\n          ),\n          feeGrowthInsideLast: result.pos.feeGrowthInsideLast,\n          nonce: result.pos.nonce,\n          liquidity: result.pos.liquidity,\n          operator: result.pos.operator,\n          tickLower: result.pos.tickLower,\n          tickUpper: result.pos.tickUpper,\n          rTokenOwed: result.pos.rTokenOwed,\n          fee: result.info.fee,\n          token0: result.info.token0,\n          token1: result.info.token1,\n        }\n      })\n    }\n    return undefined\n  }, [loading, error, results, tokenIds, chainId])\n\n  return useMemo(() => {\n    return {\n      loading,\n      positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\n    }\n  }, [loading, positions, inputs])\n}\n\ninterface UseProAmmPositionResults {\n  loading: boolean\n  position: PositionDetails | undefined\n}\n\nexport function useProAmmPositionsFromTokenId(tokenId: BigNumber | undefined): UseProAmmPositionResults {\n  const position = useProAmmPositionsFromTokenIds(tokenId ? [tokenId] : undefined)\n  return {\n    loading: position.loading,\n    position: position.positions?.[0],\n  }\n}\n\nexport const useTokenIdsOwnedByAddress = (address: string): { loading: boolean; tokenIds: BigNumber[] } => {\n  const positionManager = useProAmmNFTPositionManagerContract()\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\n    address ?? undefined,\n  ])\n\n  // we don't expect any account balance to ever exceed the bounds of max safe int\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && address) {\n      const tokenRequests = []\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([address, i])\n      }\n      return tokenRequests\n    }\n    return []\n  }, [address, accountBalance])\n\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n  const tokenIds = useMemo(() => {\n    if (address) {\n      return tokenIdResults\n        .map(({ result }) => result)\n        .filter((result): result is Result => !!result)\n        .map(result => BigNumber.from(result[0]))\n    }\n    return []\n  }, [address, tokenIdResults])\n\n  return {\n    loading: balanceLoading || someTokenIdsLoading,\n    tokenIds,\n  }\n}\n\nexport function useProAmmPositions(account: string | null | undefined): UseProAmmPositionsResults {\n  const positionManager = useProAmmNFTPositionManagerContract()\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\n    account ?? undefined,\n  ])\n\n  // we don't expect any account balance to ever exceed the bounds of max safe int\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = []\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i])\n      }\n      return tokenRequests\n    }\n    return []\n  }, [account, accountBalance])\n\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults\n        .map(({ result }) => result)\n        .filter((result): result is Result => !!result)\n        .map(result => BigNumber.from(result[0]))\n    }\n    return []\n  }, [account, tokenIdResults])\n\n  const { positions, loading: positionsLoading } = useProAmmPositionsFromTokenIds(tokenIds)\n\n  return useMemo(() => {\n    return {\n      loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n      positions,\n    }\n  }, [someTokenIdsLoading, balanceLoading, positionsLoading, positions])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}