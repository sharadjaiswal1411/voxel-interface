{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _defineProperty = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _toConsumableArray = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createQrUrl = exports.getFavicon = exports.range = exports.isBigNumber = exports.ensureParsedJSONObject = exports.ensureBN = exports.ensureRegExpString = exports.ensureIntNumber = exports.ensureBuffer = exports.ensureAddressString = exports.ensureEvenLengthHexString = exports.ensureHexString = exports.isHexString = exports.prepend0x = exports.strip0x = exports.has0xPrefix = exports.hexStringFromIntNumber = exports.intNumberFromHexString = exports.bigIntStringFromBN = exports.hexStringFromBuffer = exports.hexStringToUint8Array = exports.uint8ArrayToHex = exports.randomBytesHex = void 0;\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar qs_1 = require(\"qs\");\n\nvar types_1 = require(\"./types\");\n\nvar INT_STRING_REGEX = /^[0-9]*$/;\nvar HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n/**\n * @param length number of bytes\n */\n\nfunction randomBytesHex(length) {\n  return uint8ArrayToHex(crypto.getRandomValues(new Uint8Array(length)));\n}\n\nexports.randomBytesHex = randomBytesHex;\n\nfunction uint8ArrayToHex(value) {\n  return _toConsumableArray(value).map(function (b) {\n    return b.toString(16).padStart(2, \"0\");\n  }).join(\"\");\n}\n\nexports.uint8ArrayToHex = uint8ArrayToHex;\n\nfunction hexStringToUint8Array(hexString) {\n  return new Uint8Array(hexString.match(/.{1,2}/g).map(function (byte) {\n    return parseInt(byte, 16);\n  }));\n}\n\nexports.hexStringToUint8Array = hexStringToUint8Array;\n\nfunction hexStringFromBuffer(buf) {\n  var includePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var hex = buf.toString(\"hex\");\n  return (0, types_1.HexString)(includePrefix ? \"0x\" + hex : hex);\n}\n\nexports.hexStringFromBuffer = hexStringFromBuffer;\n\nfunction bigIntStringFromBN(bn) {\n  return (0, types_1.BigIntString)(bn.toString(10));\n}\n\nexports.bigIntStringFromBN = bigIntStringFromBN;\n\nfunction intNumberFromHexString(hex) {\n  return (0, types_1.IntNumber)(new bn_js_1.default(ensureEvenLengthHexString(hex, false), 16).toNumber());\n}\n\nexports.intNumberFromHexString = intNumberFromHexString;\n\nfunction hexStringFromIntNumber(num) {\n  return (0, types_1.HexString)(\"0x\" + new bn_js_1.default(num).toString(16));\n}\n\nexports.hexStringFromIntNumber = hexStringFromIntNumber;\n\nfunction has0xPrefix(str) {\n  return str.startsWith(\"0x\") || str.startsWith(\"0X\");\n}\n\nexports.has0xPrefix = has0xPrefix;\n\nfunction strip0x(hex) {\n  if (has0xPrefix(hex)) {\n    return hex.slice(2);\n  }\n\n  return hex;\n}\n\nexports.strip0x = strip0x;\n\nfunction prepend0x(hex) {\n  if (has0xPrefix(hex)) {\n    return \"0x\" + hex.slice(2);\n  }\n\n  return \"0x\" + hex;\n}\n\nexports.prepend0x = prepend0x;\n\nfunction isHexString(hex) {\n  if (typeof hex !== \"string\") {\n    return false;\n  }\n\n  var s = strip0x(hex).toLowerCase();\n  return HEXADECIMAL_STRING_REGEX.test(s);\n}\n\nexports.isHexString = isHexString;\n\nfunction ensureHexString(hex) {\n  var includePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (typeof hex === \"string\") {\n    var s = strip0x(hex).toLowerCase();\n\n    if (HEXADECIMAL_STRING_REGEX.test(s)) {\n      return (0, types_1.HexString)(includePrefix ? \"0x\" + s : s);\n    }\n  }\n\n  throw new Error(\"\\\"\".concat(String(hex), \"\\\" is not a hexadecimal string\"));\n}\n\nexports.ensureHexString = ensureHexString;\n\nfunction ensureEvenLengthHexString(hex) {\n  var includePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var h = ensureHexString(hex, false);\n\n  if (h.length % 2 === 1) {\n    h = (0, types_1.HexString)(\"0\" + h);\n  }\n\n  return includePrefix ? (0, types_1.HexString)(\"0x\" + h) : h;\n}\n\nexports.ensureEvenLengthHexString = ensureEvenLengthHexString;\n\nfunction ensureAddressString(str) {\n  if (typeof str === \"string\") {\n    var s = strip0x(str).toLowerCase();\n\n    if (isHexString(s) && s.length === 40) {\n      return (0, types_1.AddressString)(prepend0x(s));\n    }\n  }\n\n  throw new Error(\"Invalid Ethereum address: \".concat(String(str)));\n}\n\nexports.ensureAddressString = ensureAddressString;\n\nfunction ensureBuffer(str) {\n  if (Buffer.isBuffer(str)) {\n    return str;\n  }\n\n  if (typeof str === \"string\") {\n    if (isHexString(str)) {\n      var s = ensureEvenLengthHexString(str, false);\n      return Buffer.from(s, \"hex\");\n    } else {\n      return Buffer.from(str, \"utf8\");\n    }\n  }\n\n  throw new Error(\"Not binary data: \".concat(String(str)));\n}\n\nexports.ensureBuffer = ensureBuffer;\n\nfunction ensureIntNumber(num) {\n  if (typeof num === \"number\" && Number.isInteger(num)) {\n    return (0, types_1.IntNumber)(num);\n  }\n\n  if (typeof num === \"string\") {\n    if (INT_STRING_REGEX.test(num)) {\n      return (0, types_1.IntNumber)(Number(num));\n    }\n\n    if (isHexString(num)) {\n      return (0, types_1.IntNumber)(new bn_js_1.default(ensureEvenLengthHexString(num, false), 16).toNumber());\n    }\n  }\n\n  throw new Error(\"Not an integer: \".concat(String(num)));\n}\n\nexports.ensureIntNumber = ensureIntNumber;\n\nfunction ensureRegExpString(regExp) {\n  if (regExp instanceof RegExp) {\n    return (0, types_1.RegExpString)(regExp.toString());\n  }\n\n  throw new Error(\"Not a RegExp: \".concat(String(regExp)));\n}\n\nexports.ensureRegExpString = ensureRegExpString;\n\nfunction ensureBN(val) {\n  if (val !== null && (bn_js_1.default.isBN(val) || isBigNumber(val))) {\n    return new bn_js_1.default(val.toString(10), 10);\n  }\n\n  if (typeof val === \"number\") {\n    return new bn_js_1.default(ensureIntNumber(val));\n  }\n\n  if (typeof val === \"string\") {\n    if (INT_STRING_REGEX.test(val)) {\n      return new bn_js_1.default(val, 10);\n    }\n\n    if (isHexString(val)) {\n      return new bn_js_1.default(ensureEvenLengthHexString(val, false), 16);\n    }\n  }\n\n  throw new Error(\"Not an integer: \".concat(String(val)));\n}\n\nexports.ensureBN = ensureBN;\n\nfunction ensureParsedJSONObject(val) {\n  if (typeof val === \"string\") {\n    return JSON.parse(val);\n  }\n\n  if (typeof val === \"object\") {\n    return val;\n  }\n\n  throw new Error(\"Not a JSON string or an object: \".concat(String(val)));\n}\n\nexports.ensureParsedJSONObject = ensureParsedJSONObject;\n\nfunction isBigNumber(val) {\n  if (val == null || typeof val.constructor !== \"function\") {\n    return false;\n  }\n\n  var constructor = val.constructor;\n  return typeof constructor.config === \"function\" && typeof constructor.EUCLID === \"number\";\n}\n\nexports.isBigNumber = isBigNumber;\n\nfunction range(start, stop) {\n  return Array.from({\n    length: stop - start\n  }, function (_, i) {\n    return start + i;\n  });\n}\n\nexports.range = range;\n\nfunction getFavicon() {\n  var el = document.querySelector('link[sizes=\"192x192\"]') || document.querySelector('link[sizes=\"180x180\"]') || document.querySelector('link[rel=\"icon\"]') || document.querySelector('link[rel=\"shortcut icon\"]');\n  var _document$location = document.location,\n      protocol = _document$location.protocol,\n      host = _document$location.host;\n  var href = el ? el.getAttribute(\"href\") : null;\n\n  if (!href || href.startsWith(\"javascript:\")) {\n    return null;\n  }\n\n  if (href.startsWith(\"http://\") || href.startsWith(\"https://\") || href.startsWith(\"data:\")) {\n    return href;\n  }\n\n  if (href.startsWith(\"//\")) {\n    return protocol + href;\n  }\n\n  return \"\".concat(protocol, \"//\").concat(host).concat(href);\n}\n\nexports.getFavicon = getFavicon;\n\nfunction createQrUrl(sessionId, sessionSecret, serverUrl, isParentConnection) {\n  var _ref;\n\n  var sessionIdKey = isParentConnection ? \"parent-id\" : \"id\";\n  var query = (0, qs_1.stringify)((_ref = {}, _defineProperty(_ref, sessionIdKey, sessionId), _defineProperty(_ref, \"secret\", sessionSecret), _defineProperty(_ref, \"server\", serverUrl), _defineProperty(_ref, \"v\", \"1\"), _ref));\n  var qrUrl = \"\".concat(serverUrl, \"/#/link?\").concat(query);\n  return qrUrl;\n}\n\nexports.createQrUrl = createQrUrl;","map":null,"metadata":{},"sourceType":"script"}