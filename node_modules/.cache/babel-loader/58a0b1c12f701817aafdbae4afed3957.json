{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"@0x/utils\");\n\nvar _ = require(\"lodash\");\n\nexports.utils = {\n  convertHexToNumber: function convertHexToNumber(value) {\n    var valueBigNumber = new utils_1.BigNumber(value);\n    var valueNumber = valueBigNumber.toNumber();\n    return valueNumber;\n  },\n  convertHexToNumberOrNull: function convertHexToNumberOrNull(hex) {\n    if (hex === null) {\n      return null;\n    }\n\n    var decimal = exports.utils.convertHexToNumber(hex);\n    return decimal;\n  },\n  convertAmountToBigNumber: function convertAmountToBigNumber(value) {\n    var num = value || 0;\n    var isBigNumber = utils_1.BigNumber.isBigNumber(num);\n\n    if (isBigNumber) {\n      return num;\n    }\n\n    if (_.isString(num) && (num.indexOf('0x') === 0 || num.indexOf('-0x') === 0)) {\n      return new utils_1.BigNumber(num.replace('0x', ''), 16);\n    }\n\n    var baseTen = 10;\n    return new utils_1.BigNumber(num.toString(baseTen), baseTen);\n  },\n  encodeAmountAsHexString: function encodeAmountAsHexString(value) {\n    var valueBigNumber = exports.utils.convertAmountToBigNumber(value);\n    var hexBase = 16;\n    var valueHex = valueBigNumber.toString(hexBase);\n    return valueBigNumber.isLessThan(0) ? \"-0x\" + valueHex.substr(1) : \"0x\" + valueHex;\n  },\n  numberToHex: function numberToHex(value) {\n    if (!isFinite(value) && !exports.utils.isHexStrict(value)) {\n      throw new Error(\"Given input \" + value + \" is not a number.\");\n    }\n\n    var valueBigNumber = new utils_1.BigNumber(value);\n    var hexBase = 16;\n    var result = valueBigNumber.toString(hexBase);\n    return valueBigNumber.lt(0) ? \"-0x\" + result.substr(1) : \"0x\" + result;\n  },\n  isHexStrict: function isHexStrict(hex) {\n    return (_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(_.isNumber(hex) ? hex.toString() : hex);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}