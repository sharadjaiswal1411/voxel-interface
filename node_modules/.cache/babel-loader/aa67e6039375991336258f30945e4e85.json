{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/UpcomingFarms/StartingIn.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport React from 'react';\nimport { Text } from 'rebass';\nimport useTheme from 'hooks/useTheme';\nimport { getFormattedTimeFromSecond } from 'utils/formatTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StartingIn = function StartingIn(_ref) {\n  _s();\n\n  var startingIn = _ref.startingIn;\n  var theme = useTheme();\n\n  if (!startingIn) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: theme.text,\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Coming soon\"\n      }, void 0, false, void 0, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this);\n  }\n\n  var timeDiff = new Date(startingIn).getTime() - Date.now();\n\n  if (timeDiff < 0) {\n    return null;\n  }\n\n  var seconds = Math.abs(timeDiff) / 1000;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    color: theme.text,\n    children: getFormattedTimeFromSecond(seconds)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(StartingIn, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = StartingIn;\nexport default StartingIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartingIn\");","map":{"version":3,"names":["React","Text","useTheme","getFormattedTimeFromSecond","StartingIn","startingIn","theme","text","timeDiff","Date","getTime","now","seconds","Math","abs"],"sources":["/Applications/XAMPP/voxel-interface/src/components/UpcomingFarms/StartingIn.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { Text } from 'rebass'\n\nimport useTheme from 'hooks/useTheme'\nimport { getFormattedTimeFromSecond } from 'utils/formatTime'\n\nconst StartingIn = ({ startingIn }: { startingIn?: string }) => {\n  const theme = useTheme()\n\n  if (!startingIn) {\n    return (\n      <Text color={theme.text}>\n        <Trans>Coming soon</Trans>\n      </Text>\n    )\n  }\n\n  const timeDiff = new Date(startingIn).getTime() - Date.now()\n\n  if (timeDiff < 0) {\n    return null\n  }\n\n  const seconds = Math.abs(timeDiff) / 1000\n\n  return <Text color={theme.text}>{getFormattedTimeFromSecond(seconds)}</Text>\n}\n\nexport default StartingIn\n"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,0BAAT,QAA2C,kBAA3C;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6C;EAAA;;EAAA,IAA1CC,UAA0C,QAA1CA,UAA0C;EAC9D,IAAMC,KAAK,GAAGJ,QAAQ,EAAtB;;EAEA,IAAI,CAACG,UAAL,EAAiB;IACf,oBACE,QAAC,IAAD;MAAM,KAAK,EAAEC,KAAK,CAACC,IAAnB;MAAA,uBACE;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SADF;EAKD;;EAED,IAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASJ,UAAT,EAAqBK,OAArB,KAAiCD,IAAI,CAACE,GAAL,EAAlD;;EAEA,IAAIH,QAAQ,GAAG,CAAf,EAAkB;IAChB,OAAO,IAAP;EACD;;EAED,IAAMI,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASN,QAAT,IAAqB,IAArC;EAEA,oBAAO,QAAC,IAAD;IAAM,KAAK,EAAEF,KAAK,CAACC,IAAnB;IAAA,UAA0BJ,0BAA0B,CAACS,OAAD;EAApD;IAAA;IAAA;IAAA;EAAA,SAAP;AACD,CApBD;;GAAMR,U;UACUF,Q;;;KADVE,U;AAsBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}