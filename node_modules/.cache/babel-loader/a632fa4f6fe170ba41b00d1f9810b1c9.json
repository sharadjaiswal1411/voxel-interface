{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/Vesting/RewardLockerSchedules.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { BigNumber } from '@ethersproject/bignumber';\nimport React from 'react';\nimport { ZERO_ADDRESS } from 'constants/index';\nimport { useActiveWeb3React } from 'hooks';\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel';\nimport { useTimestampFromBlock } from 'hooks/useTimestampFromBlock';\nimport useVesting from 'hooks/useVesting';\nimport { useBlockNumber, useTokensPrice } from 'state/application/hooks';\nimport { RewardLockerVersion } from 'state/farms/types';\nimport { useAppDispatch } from 'state/hooks';\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setVestingError } from 'state/vesting/actions';\nimport { fixedFormatting } from 'utils/formatBalance';\nimport VestingCard from './VestingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RewardLockerSchedules = function RewardLockerSchedules(_ref) {\n  _s();\n\n  var rewardLockerAddress = _ref.rewardLockerAddress,\n      schedules = _ref.schedules,\n      rewardLockerVersion = _ref.rewardLockerVersion;\n  var dispatch = useAppDispatch();\n  var currentBlockNumber = useBlockNumber();\n  var currentTimestamp = Math.round(Date.now() / 1000);\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account,\n      chainId = _useActiveWeb3React.chainId;\n\n  var _useVesting = useVesting(rewardLockerAddress),\n      vestMultipleTokensAtIndices = _useVesting.vestMultipleTokensAtIndices;\n\n  var _useMixpanel = useMixpanel(),\n      mixpanelHandler = _useMixpanel.mixpanelHandler;\n\n  if (!schedules) {\n    schedules = [];\n  }\n\n  var rewardTokenMap = {};\n  schedules.forEach(function (schedule) {\n    var address = schedule[4].isNative ? ZERO_ADDRESS : schedule[4].address;\n\n    if (!rewardTokenMap[address]) {\n      rewardTokenMap[address] = schedule[4];\n    }\n  });\n  var rewardTokens = Object.values(rewardTokenMap);\n  var rewardPrices = useTokensPrice(rewardTokens);\n  var rewardPriceMap = rewardTokens.reduce(function (acc, token, index) {\n    var address = token.isNative ? ZERO_ADDRESS : token.address;\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, address, rewardPrices[index]));\n  }, {});\n  var info = schedules.reduce(function (result, schedule) {\n    if (!currentBlockNumber) return result;\n    var address = schedule[4].isNative ? ZERO_ADDRESS : schedule[4].address;\n\n    if (!result[address]) {\n      result[address] = {\n        vestableIndexes: [],\n        vestableAmount: BigNumber.from(0),\n        // fullyIndexes: [],\n        // fullyAmount: BigNumber.from(0),\n        totalAmount: BigNumber.from(0),\n        unlockedAmount: BigNumber.from(0),\n        vestedAmount: BigNumber.from(0),\n        token: schedule[4],\n        tokenPrice: rewardPriceMap[address]\n      };\n    }\n\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule[2]));\n    result[address].vestedAmount = result[address].vestedAmount.add(BigNumber.from(schedule[3]));\n    /**\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\n     */\n\n    var fullyVestedAlready = schedule[2].sub(schedule[3]).isZero();\n    /**\n     * v1: isEnd = schedule.endBlock < currentBlock\n     * v2: isEnd = schedule.endTime < currentTimestamp\n     */\n\n    var isEnd = rewardLockerVersion === RewardLockerVersion.V1 ? schedule[1].lt(currentBlockNumber) : schedule[1].lt(currentTimestamp); // const vestedAndVestablePercent = BigNumber.from(currentBlockNumber)\n    //   .sub(BigNumber.from(s[1]))\n    //   .isNegative()\n    //   ? BigNumber.from(currentBlockNumber)\n    //       .sub(BigNumber.from(s[0]))\n    //       .mul(100)\n    //       .div(BigNumber.from(s[1]).sub(BigNumber.from(s[0])))\n    //   : 100\n    // const unlockedAmount = BigNumber.from(s[2])\n    //   .mul(vestedAndVestablePercent)\n    //   .div(100)\n\n    var unlockedAmount = isEnd ? schedule[2] : rewardLockerVersion === RewardLockerVersion.V1 ? schedule[2].mul(BigNumber.from(currentBlockNumber).sub(schedule[0])).div(schedule[1].sub(schedule[0])) : schedule[2].mul(BigNumber.from(currentTimestamp).sub(schedule[0])).div(schedule[1].sub(schedule[0]));\n    var vestableAmount = unlockedAmount.sub(BigNumber.from(schedule[3])); // vestableAmount = unlock - vestedQuanitty\n\n    if (!fullyVestedAlready) {\n      result[address].vestableIndexes.push(schedule[5]);\n    }\n\n    result[address].vestableAmount = result[address].vestableAmount.add(vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount); // if (!fullyVestedAlready && (rewardLockerVersion === RewardLockerVersion.V2 || !!currentBlockNumber) && isEnd) {\n    //   result[address].fullyIndexes.push(schedule[5])\n    //   result[address].fullyAmount = result[address].fullyAmount.add(schedule[2])\n    // }\n\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount);\n    return result;\n  }, {});\n\n  var onClaimAll = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var addresses, indices, txHash;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!chainId || !account)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              dispatch(setShowConfirm(true));\n              dispatch(setAttemptingTxn(true));\n              dispatch(setTxHash(''));\n              _context.prev = 5;\n              addresses = Object.values(info).filter(function (item) {\n                return item.vestableIndexes.length > 0;\n              }).map(function (item) {\n                return item.token.address;\n              });\n              indices = Object.keys(info).reduce(function (acc, k) {\n                if (info[k].vestableIndexes.length > 0) acc.push(info[k].vestableIndexes);\n                return acc;\n              }, []);\n              _context.next = 10;\n              return vestMultipleTokensAtIndices(addresses, indices);\n\n            case 10:\n              txHash = _context.sent;\n\n              if (txHash) {\n                mixpanelHandler(MIXPANEL_TYPE.ALL_REWARDS_CLAIMED, {\n                  reward_tokens_and_amounts: Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(info).map(function (k) {\n                    return _defineProperty({}, k, fixedFormatting(info[k].vestableAmount, info[k].token.decimals));\n                  }))))\n                });\n              }\n\n              dispatch(setTxHash(txHash));\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0);\n              dispatch(setVestingError(_context.t0));\n\n            case 19:\n              dispatch(setAttemptingTxn(false));\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 15]]);\n    }));\n\n    return function onClaimAll() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var maxEndBlock = schedules.reduce(function (acc, cur) {\n    // timestapm or blockNumber version\n    var version = cur[6];\n\n    if (version === RewardLockerVersion.V1) {\n      return acc && acc < cur[1].toNumber() ? cur[1].toNumber() : acc;\n    }\n\n    return acc;\n  }, currentBlockNumber);\n  var endTimestampFromBlock = useTimestampFromBlock(maxEndBlock);\n  var endTime = schedules.reduce(function (acc, cur) {\n    // timestapm or blockNumber version\n    var version = cur[6];\n\n    if (version === RewardLockerVersion.V2) {\n      return acc && acc < cur[1].toNumber() ? cur[1].toNumber() : acc;\n    }\n\n    return acc;\n  }, endTimestampFromBlock || 0);\n  return /*#__PURE__*/_jsxDEV(VestingCard, {\n    info: info,\n    endTime: endTime,\n    remainTime: endTime - currentTimestamp,\n    onClaimAll: onClaimAll\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(RewardLockerSchedules, \"PNHbM6GPjef6N5s0dW4j1AdiFlA=\", false, function () {\n  return [useAppDispatch, useBlockNumber, useActiveWeb3React, useVesting, useMixpanel, useTokensPrice, useTimestampFromBlock];\n});\n\n_c = RewardLockerSchedules;\nexport default RewardLockerSchedules;\n\nvar _c;\n\n$RefreshReg$(_c, \"RewardLockerSchedules\");","map":{"version":3,"names":["BigNumber","React","ZERO_ADDRESS","useActiveWeb3React","useMixpanel","MIXPANEL_TYPE","useTimestampFromBlock","useVesting","useBlockNumber","useTokensPrice","RewardLockerVersion","useAppDispatch","setAttemptingTxn","setShowConfirm","setTxHash","setVestingError","fixedFormatting","VestingCard","RewardLockerSchedules","rewardLockerAddress","schedules","rewardLockerVersion","dispatch","currentBlockNumber","currentTimestamp","Math","round","Date","now","account","chainId","vestMultipleTokensAtIndices","mixpanelHandler","rewardTokenMap","forEach","schedule","address","isNative","rewardTokens","Object","values","rewardPrices","rewardPriceMap","reduce","acc","token","index","info","result","vestableIndexes","vestableAmount","from","totalAmount","unlockedAmount","vestedAmount","tokenPrice","add","fullyVestedAlready","sub","isZero","isEnd","V1","lt","mul","div","push","isNegative","onClaimAll","addresses","filter","item","length","map","indices","keys","k","txHash","ALL_REWARDS_CLAIMED","reward_tokens_and_amounts","assign","decimals","console","error","maxEndBlock","cur","version","toNumber","endTimestampFromBlock","endTime","V2"],"sources":["/Applications/XAMPP/voxel-interface/src/components/Vesting/RewardLockerSchedules.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Token } from '@kyberswap/ks-sdk-core'\nimport React from 'react'\n\nimport { ZERO_ADDRESS } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\nimport { useTimestampFromBlock } from 'hooks/useTimestampFromBlock'\nimport useVesting from 'hooks/useVesting'\nimport { useBlockNumber, useTokensPrice } from 'state/application/hooks'\nimport { RewardLockerVersion } from 'state/farms/types'\nimport { useAppDispatch } from 'state/hooks'\nimport { setAttemptingTxn, setShowConfirm, setTxHash, setVestingError } from 'state/vesting/actions'\nimport { fixedFormatting } from 'utils/formatBalance'\n\nimport VestingCard from './VestingCard'\n\nconst RewardLockerSchedules = ({\n  rewardLockerAddress,\n  schedules,\n  rewardLockerVersion,\n}: {\n  rewardLockerAddress: string\n  schedules: [BigNumber, BigNumber, BigNumber, BigNumber, Token, number, RewardLockerVersion][]\n  rewardLockerVersion: RewardLockerVersion\n}) => {\n  const dispatch = useAppDispatch()\n  const currentBlockNumber = useBlockNumber()\n  const currentTimestamp = Math.round(Date.now() / 1000)\n  const { account, chainId } = useActiveWeb3React()\n  const { vestMultipleTokensAtIndices } = useVesting(rewardLockerAddress)\n  const { mixpanelHandler } = useMixpanel()\n  if (!schedules) {\n    schedules = []\n  }\n\n  const rewardTokenMap: { [address: string]: Token } = {}\n  schedules.forEach(schedule => {\n    const address = (schedule[4] as Token).isNative ? ZERO_ADDRESS : schedule[4].address\n    if (!rewardTokenMap[address]) {\n      rewardTokenMap[address] = schedule[4]\n    }\n  })\n\n  const rewardTokens = Object.values(rewardTokenMap)\n\n  const rewardPrices = useTokensPrice(rewardTokens)\n  const rewardPriceMap = rewardTokens.reduce((acc, token, index) => {\n    const address = token.isNative ? ZERO_ADDRESS : token.address\n    return {\n      ...acc,\n      [address]: rewardPrices[index],\n    }\n  }, {} as { [address: string]: number })\n\n  const info = schedules.reduce<{\n    [key: string]: {\n      vestableIndexes: number[]\n      vestableAmount: BigNumber\n      // fullyIndexes: number[]\n      // fullyAmount: BigNumber\n      totalAmount: BigNumber\n      unlockedAmount: BigNumber\n      vestedAmount: BigNumber\n      token: Token\n      tokenPrice: number\n    }\n  }>((result, schedule) => {\n    if (!currentBlockNumber) return result\n    const address = (schedule[4] as Token).isNative ? ZERO_ADDRESS : schedule[4].address\n\n    if (!result[address]) {\n      result[address] = {\n        vestableIndexes: [],\n        vestableAmount: BigNumber.from(0),\n        // fullyIndexes: [],\n        // fullyAmount: BigNumber.from(0),\n        totalAmount: BigNumber.from(0),\n        unlockedAmount: BigNumber.from(0),\n        vestedAmount: BigNumber.from(0),\n        token: schedule[4] as Token,\n        tokenPrice: rewardPriceMap[address],\n      }\n    }\n\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule[2]))\n\n    result[address].vestedAmount = result[address].vestedAmount.add(BigNumber.from(schedule[3]))\n    /**\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\n     */\n    const fullyVestedAlready = schedule[2].sub(schedule[3]).isZero()\n\n    /**\n     * v1: isEnd = schedule.endBlock < currentBlock\n     * v2: isEnd = schedule.endTime < currentTimestamp\n     */\n    const isEnd =\n      rewardLockerVersion === RewardLockerVersion.V1\n        ? schedule[1].lt(currentBlockNumber)\n        : schedule[1].lt(currentTimestamp)\n    // const vestedAndVestablePercent = BigNumber.from(currentBlockNumber)\n    //   .sub(BigNumber.from(s[1]))\n    //   .isNegative()\n    //   ? BigNumber.from(currentBlockNumber)\n    //       .sub(BigNumber.from(s[0]))\n    //       .mul(100)\n    //       .div(BigNumber.from(s[1]).sub(BigNumber.from(s[0])))\n    //   : 100\n    // const unlockedAmount = BigNumber.from(s[2])\n    //   .mul(vestedAndVestablePercent)\n    //   .div(100)\n    const unlockedAmount = isEnd\n      ? schedule[2]\n      : rewardLockerVersion === RewardLockerVersion.V1\n      ? schedule[2].mul(BigNumber.from(currentBlockNumber).sub(schedule[0])).div(schedule[1].sub(schedule[0]))\n      : schedule[2].mul(BigNumber.from(currentTimestamp).sub(schedule[0])).div(schedule[1].sub(schedule[0]))\n    const vestableAmount = unlockedAmount.sub(BigNumber.from(schedule[3])) // vestableAmount = unlock - vestedQuanitty\n    if (!fullyVestedAlready) {\n      result[address].vestableIndexes.push(schedule[5])\n    }\n    result[address].vestableAmount = result[address].vestableAmount.add(\n      vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount,\n    )\n    // if (!fullyVestedAlready && (rewardLockerVersion === RewardLockerVersion.V2 || !!currentBlockNumber) && isEnd) {\n    //   result[address].fullyIndexes.push(schedule[5])\n    //   result[address].fullyAmount = result[address].fullyAmount.add(schedule[2])\n    // }\n\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount)\n    return result\n  }, {})\n\n  const onClaimAll = async () => {\n    if (!chainId || !account) {\n      return\n    }\n\n    dispatch(setShowConfirm(true))\n    dispatch(setAttemptingTxn(true))\n    dispatch(setTxHash(''))\n\n    try {\n      const addresses = Object.values(info)\n        .filter(item => item.vestableIndexes.length > 0)\n        .map(item => item.token.address)\n      const indices = Object.keys(info).reduce<number[][]>((acc, k) => {\n        if (info[k].vestableIndexes.length > 0) acc.push(info[k].vestableIndexes)\n        return acc\n      }, [])\n      const txHash = await vestMultipleTokensAtIndices(addresses, indices)\n      if (txHash) {\n        mixpanelHandler(MIXPANEL_TYPE.ALL_REWARDS_CLAIMED, {\n          reward_tokens_and_amounts: Object.assign(\n            {},\n            ...Object.keys(info).map(k => {\n              return { [k]: fixedFormatting(info[k].vestableAmount, info[k].token.decimals) }\n            }),\n          ),\n        })\n      }\n      dispatch(setTxHash(txHash))\n    } catch (err) {\n      console.error(err)\n      dispatch(setVestingError(err as Error))\n    }\n\n    dispatch(setAttemptingTxn(false))\n  }\n\n  const maxEndBlock = schedules.reduce((acc, cur) => {\n    // timestapm or blockNumber version\n    const version = cur[6]\n    if (version === RewardLockerVersion.V1) {\n      return acc && acc < cur[1].toNumber() ? cur[1].toNumber() : acc\n    }\n\n    return acc\n  }, currentBlockNumber)\n\n  const endTimestampFromBlock = useTimestampFromBlock(maxEndBlock)\n\n  const endTime = schedules.reduce((acc, cur) => {\n    // timestapm or blockNumber version\n    const version = cur[6]\n    if (version === RewardLockerVersion.V2) {\n      return acc && acc < cur[1].toNumber() ? cur[1].toNumber() : acc\n    }\n\n    return acc\n  }, endTimestampFromBlock || 0)\n\n  return <VestingCard info={info} endTime={endTime} remainTime={endTime - currentTimestamp} onClaimAll={onClaimAll} />\n}\n\nexport default RewardLockerSchedules\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}