{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { Interface } from '@ethersproject/abi';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { ChainId, CurrencyAmount, Fraction } from '@kyberswap/ks-sdk-core';\nimport { ethers } from 'ethers';\nimport { parseUnits } from 'ethers/lib/utils';\nimport JSBI from 'jsbi';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FARM_HISTORIES } from 'apollo/queries';\nimport FAIRLAUNCH_V2_ABI from 'constants/abis/fairlaunch-v2.json';\nimport FAIRLAUNCH_ABI from 'constants/abis/fairlaunch.json';\nimport { DEFAULT_REWARDS, LP_TOKEN_DECIMALS, MAX_ALLOW_APY, OUTSIDE_FAIRLAUNCH_ADDRESSES, RESERVE_USD_DECIMALS, ZERO_ADDRESS } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { nativeOnChain } from 'constants/tokens';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useFairLaunchContracts } from 'hooks/useContract';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport useTokensMarketPrice from 'hooks/useTokensMarketPrice';\nimport { useBlockNumber, useETHPrice, useTokensPrice } from 'state/application/hooks';\nimport { FairLaunchVersion, FarmHistoryMethod } from 'state/farms/types';\nimport { useAppDispatch } from 'state/hooks';\nimport { useMultipleContractSingleData } from 'state/multicall/hooks';\nimport { getBulkPoolDataFromPoolList } from 'state/pools/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { isAddressString } from 'utils';\nimport { getTradingFeeAPR, parseSubgraphPoolData, useFarmApr } from 'utils/dmm';\nimport { setFarmsData, setLoading, setYieldPoolsError } from './actions';\nexport var useRewardTokens = function useRewardTokens() {\n  _s();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId;\n\n  var rewardTokensMulticallResult = useMultipleContractSingleData(NETWORKS_INFO[chainId || ChainId.MAINNET].classic.fairlaunch, new Interface(FAIRLAUNCH_ABI), 'getRewardTokens');\n  var rewardTokensV2MulticallResult = useMultipleContractSingleData(NETWORKS_INFO[chainId || ChainId.MAINNET].classic.fairlaunchV2, new Interface(FAIRLAUNCH_V2_ABI), 'getRewardTokens');\n  var defaultRewards = useMemo(function () {\n    return DEFAULT_REWARDS[chainId] || [];\n  }, [chainId]);\n  return useMemo(function () {\n    var result = [];\n    rewardTokensMulticallResult.forEach(function (token) {\n      var _token$result;\n\n      if (token !== null && token !== void 0 && (_token$result = token.result) !== null && _token$result !== void 0 && _token$result[0]) {\n        var _token$result2;\n\n        result = result.concat(token === null || token === void 0 ? void 0 : (_token$result2 = token.result) === null || _token$result2 === void 0 ? void 0 : _token$result2[0].filter(function (item) {\n          return result.indexOf(item) < 0;\n        }));\n      }\n    });\n    rewardTokensV2MulticallResult.forEach(function (token) {\n      var _token$result3;\n\n      if (token !== null && token !== void 0 && (_token$result3 = token.result) !== null && _token$result3 !== void 0 && _token$result3[0]) {\n        var _token$result4;\n\n        result = result.concat(token === null || token === void 0 ? void 0 : (_token$result4 = token.result) === null || _token$result4 === void 0 ? void 0 : _token$result4[0].filter(function (item) {\n          return result.indexOf(item) < 0;\n        }));\n      }\n    });\n    return [].concat(_toConsumableArray(defaultRewards), _toConsumableArray(result));\n  }, [rewardTokensMulticallResult, rewardTokensV2MulticallResult, defaultRewards]);\n};\n\n_s(useRewardTokens, \"f7BJsd6p3G+tE4naxbYqypgt5A0=\", false, function () {\n  return [useActiveWeb3React, useMultipleContractSingleData, useMultipleContractSingleData];\n});\n\nexport var useRewardTokenPrices = function useRewardTokenPrices(tokens, version) {\n  _s2();\n\n  var tokenPrices = useTokensPrice(tokens, version);\n  var marketPrices = useTokensMarketPrice(tokens);\n  return useMemo(function () {\n    return tokenPrices.map(function (price, index) {\n      return marketPrices[index] || price || 0;\n    });\n  }, [tokenPrices, marketPrices]);\n};\n\n_s2(useRewardTokenPrices, \"01S+S1Wbmd/wTclFypEaYF1v+hI=\", false, function () {\n  return [useTokensPrice, useTokensMarketPrice];\n});\n\nexport var useFarmsData = function useFarmsData() {\n  _s3();\n\n  var isIncludeOutsideFarms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var dispatch = useAppDispatch();\n\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React2.chainId,\n      account = _useActiveWeb3React2.account;\n\n  var fairLaunchContracts = useFairLaunchContracts();\n  var ethPrice = useETHPrice();\n  var allTokens = useAllTokens();\n  var blockNumber = useBlockNumber();\n  var apolloClient = NETWORKS_INFO[chainId || ChainId.MAINNET].classicClient;\n  var farmsData = useSelector(function (state) {\n    return state.farms.data;\n  });\n  var loading = useSelector(function (state) {\n    return state.farms.loading;\n  });\n  var error = useSelector(function (state) {\n    return state.farms.error;\n  });\n  var farmsDataRef = useRef(farmsData);\n  useEffect(function () {\n    farmsDataRef.current = farmsData;\n  }, [farmsData]); // Fix slow network speed when loading farm.\n\n  var latestChainId = useRef(chainId);\n  useEffect(function () {\n    latestChainId.current = chainId;\n  }, [chainId]);\n  useEffect(function () {\n    var cancelled = false;\n    var currentTimestamp = Math.round(Date.now() / 1000);\n\n    function getListFarmsForContract(_x) {\n      return _getListFarmsForContract.apply(this, arguments);\n    }\n\n    function _getListFarmsForContract() {\n      _getListFarmsForContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(contract) {\n        var rewardTokenAddresses, poolLength, pids, isV2, poolInfos, stakedBalances, pendingRewards, poolAddresses, farmsData, rewardTokens, farms, outsideFarm, poolData, totalSupply, _totalSupply$split, _totalSupply$split2, a, b;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return contract === null || contract === void 0 ? void 0 : contract.getRewardTokens();\n\n              case 2:\n                rewardTokenAddresses = _context4.sent;\n                _context4.next = 5;\n                return contract === null || contract === void 0 ? void 0 : contract.poolLength();\n\n              case 5:\n                poolLength = _context4.sent;\n                pids = _toConsumableArray(Array(BigNumber.from(poolLength).toNumber()).keys());\n                isV2 = NETWORKS_INFO[chainId || ChainId.MAINNET].classic.fairlaunchV2.includes(contract.address);\n                _context4.next = 10;\n                return Promise.all(pids.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(pid) {\n                    var poolInfo;\n                    return _regeneratorRuntime().wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return contract === null || contract === void 0 ? void 0 : contract.getPoolInfo(pid);\n\n                          case 2:\n                            poolInfo = _context.sent;\n\n                            if (!isV2) {\n                              _context.next = 5;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, poolInfo), {}, {\n                              accRewardPerShares: poolInfo.accRewardPerShares.map(function (accRewardPerShare, index) {\n                                return accRewardPerShare.div(poolInfo.rewardMultipliers[index]);\n                              }),\n                              rewardPerSeconds: poolInfo.rewardPerSeconds.map(function (accRewardPerShare, index) {\n                                return accRewardPerShare.div(poolInfo.rewardMultipliers[index]);\n                              }),\n                              pid: pid,\n                              fairLaunchVersion: FairLaunchVersion.V2\n                            }));\n\n                          case 5:\n                            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, poolInfo), {}, {\n                              pid: pid,\n                              fairLaunchVersion: FairLaunchVersion.V1\n                            }));\n\n                          case 6:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 10:\n                poolInfos = _context4.sent;\n                _context4.next = 13;\n                return Promise.all(pids.map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(pid) {\n                    var stakedBalance;\n                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!account) {\n                              _context2.next = 6;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return contract === null || contract === void 0 ? void 0 : contract.getUserInfo(pid, account);\n\n                          case 3:\n                            _context2.t0 = _context2.sent;\n                            _context2.next = 7;\n                            break;\n\n                          case 6:\n                            _context2.t0 = {\n                              amount: 0\n                            };\n\n                          case 7:\n                            stakedBalance = _context2.t0;\n                            return _context2.abrupt(\"return\", stakedBalance.amount);\n\n                          case 9:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n\n              case 13:\n                stakedBalances = _context4.sent;\n                _context4.next = 16;\n                return Promise.all(pids.map( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(pid) {\n                    var pendingRewards;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            if (!account) {\n                              _context3.next = 6;\n                              break;\n                            }\n\n                            _context3.next = 3;\n                            return contract === null || contract === void 0 ? void 0 : contract.pendingRewards(pid, account);\n\n                          case 3:\n                            _context3.t0 = _context3.sent;\n                            _context3.next = 7;\n                            break;\n\n                          case 6:\n                            _context3.t0 = null;\n\n                          case 7:\n                            pendingRewards = _context3.t0;\n                            return _context3.abrupt(\"return\", pendingRewards);\n\n                          case 9:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x4) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()));\n\n              case 16:\n                pendingRewards = _context4.sent;\n                poolAddresses = poolInfos.map(function (poolInfo) {\n                  return poolInfo.stakeToken.toLowerCase();\n                });\n                _context4.next = 20;\n                return getBulkPoolDataFromPoolList(poolAddresses, apolloClient, ethPrice.currentPrice, chainId);\n\n              case 20:\n                farmsData = _context4.sent;\n                rewardTokens = rewardTokenAddresses.map(function (address) {\n                  return address.toLowerCase() === ZERO_ADDRESS.toLowerCase() ? nativeOnChain(chainId) : allTokens[address];\n                }).filter(Boolean);\n                farms = poolInfos.map(function (poolInfo, index) {\n                  return _objectSpread(_objectSpread(_objectSpread({}, farmsData.find(function (farmData) {\n                    return farmData && farmData.id.toLowerCase() === poolInfo.stakeToken.toLowerCase();\n                  })), poolInfo), {}, {\n                    rewardTokens: rewardTokens,\n                    fairLaunchAddress: contract.address,\n                    userData: {\n                      stakedBalance: stakedBalances[index],\n                      rewards: poolInfo.fairLaunchVersion === FairLaunchVersion.V2 ? pendingRewards[index] && pendingRewards[index].map(function (pendingReward, pendingRewardIndex) {\n                        return pendingReward.div(poolInfo.rewardMultipliers[pendingRewardIndex]);\n                      }) : pendingRewards[index]\n                    },\n                    isEnded: poolInfo.fairLaunchVersion === FairLaunchVersion.V2 ? poolInfo.endTime <= currentTimestamp : poolInfo.endBlock <= (blockNumber || Number.MAX_SAFE_INTEGER)\n                  });\n                });\n                outsideFarm = OUTSIDE_FAIRLAUNCH_ADDRESSES[contract.address];\n\n                if (!(isIncludeOutsideFarms && outsideFarm)) {\n                  _context4.next = 32;\n                  break;\n                }\n\n                _context4.next = 27;\n                return fetch(outsideFarm.subgraphAPI, {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    query: outsideFarm.query\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 27:\n                poolData = _context4.sent;\n                // Defend data totalSupply from pancake greater than 18 decimals\n                totalSupply = poolData.data.pair.totalSupply;\n                _totalSupply$split = totalSupply.split('.'), _totalSupply$split2 = _slicedToArray(_totalSupply$split, 2), a = _totalSupply$split2[0], b = _totalSupply$split2[1];\n                totalSupply = a + '.' + b.slice(0, 18);\n                farms.push(_objectSpread(_objectSpread(_objectSpread({}, poolData.data.pair), {}, {\n                  amp: 10000,\n                  vReserve0: poolData.data.pair.reserve0,\n                  vReserve1: poolData.data.pair.reserve1,\n                  token0: _objectSpread(_objectSpread({}, poolData.data.pair.token0), {}, {\n                    derivedETH: poolData.data.pair.token0.derivedBNB\n                  }),\n                  token1: _objectSpread(_objectSpread({}, poolData.data.pair.token1), {}, {\n                    derivedETH: poolData.data.pair.token1.derivedBNB\n                  }),\n                  trackedReserveETH: poolData.data.pair.trackedReserveBNB,\n                  totalSupply: totalSupply\n                }, poolInfos[0]), {}, {\n                  rewardTokens: rewardTokens,\n                  fairLaunchAddress: contract.address,\n                  userData: {\n                    stakedBalance: stakedBalances[0],\n                    rewards: pendingRewards[0]\n                  }\n                }));\n\n              case 32:\n                return _context4.abrupt(\"return\", farms.filter(function (farm) {\n                  return !!farm.totalSupply;\n                }));\n\n              case 33:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return _getListFarmsForContract.apply(this, arguments);\n    }\n\n    function checkForFarms() {\n      return _checkForFarms.apply(this, arguments);\n    }\n\n    function _checkForFarms() {\n      _checkForFarms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var result, fairLaunchAddresses, promises, promiseResult;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n\n                if (fairLaunchContracts) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                dispatch(setFarmsData({}));\n                return _context5.abrupt(\"return\");\n\n              case 4:\n                dispatch(setLoading(true));\n                result = {};\n                fairLaunchAddresses = Object.keys(fairLaunchContracts);\n                promises = [];\n                fairLaunchAddresses.forEach(function (address) {\n                  promises.push(getListFarmsForContract(fairLaunchContracts[address]));\n                });\n                _context5.next = 11;\n                return Promise.all(promises);\n\n              case 11:\n                promiseResult = _context5.sent;\n                fairLaunchAddresses.forEach(function (address, index) {\n                  result[address] = promiseResult[index];\n                });\n\n                if (latestChainId.current === chainId && (Object.keys(farmsDataRef.current).length === 0 || !cancelled)) {\n                  dispatch(setFarmsData(result));\n                }\n\n                _context5.next = 19;\n                break;\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                if (!cancelled) {\n                  console.error(_context5.t0);\n                  dispatch(setYieldPoolsError(_context5.t0));\n                }\n\n              case 19:\n                dispatch(setLoading(false));\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 16]]);\n      }));\n      return _checkForFarms.apply(this, arguments);\n    }\n\n    checkForFarms();\n    return function () {\n      cancelled = true;\n    };\n  }, [apolloClient, dispatch, ethPrice.currentPrice, chainId, fairLaunchContracts, account, blockNumber, allTokens, isIncludeOutsideFarms]);\n  return useMemo(function () {\n    return {\n      loading: loading,\n      error: error,\n      data: farmsData\n    };\n  }, [error, farmsData, loading]);\n};\n\n_s3(useFarmsData, \"tcTovDAzw9IWUBooISlg8pxc7RQ=\", false, function () {\n  return [useAppDispatch, useActiveWeb3React, useFairLaunchContracts, useETHPrice, useAllTokens, useBlockNumber, useSelector, useSelector, useSelector];\n});\n\nexport var useActiveAndUniqueFarmsData = function useActiveAndUniqueFarmsData() {\n  _s4();\n\n  var farmsData = useFarmsData(false);\n  return useMemo(function () {\n    var loading = farmsData.loading,\n        error = farmsData.error,\n        farms = farmsData.data;\n    var existedPairs = {};\n    var uniqueAndActiveFarms = Object.values(farms).flat().filter(function (farm) {\n      return !farm.isEnded;\n    }).filter(function (farm) {\n      var _farm$token, _farm$token2;\n\n      var pairKey = \"\".concat((_farm$token = farm.token0) === null || _farm$token === void 0 ? void 0 : _farm$token.symbol, \" - \").concat((_farm$token2 = farm.token1) === null || _farm$token2 === void 0 ? void 0 : _farm$token2.symbol);\n      if (existedPairs[pairKey]) return false;\n      existedPairs[pairKey] = true;\n      return true;\n    });\n    return {\n      loading: loading,\n      error: error,\n      data: uniqueAndActiveFarms\n    };\n  }, [farmsData]);\n};\n\n_s4(useActiveAndUniqueFarmsData, \"Z13mDm6e4rJ7rZOhq+FRx6KvuSQ=\", false, function () {\n  return [useFarmsData];\n});\n\nexport var useYieldHistories = function useYieldHistories(isModalOpen) {\n  _s5();\n\n  var _useActiveWeb3React3 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React3.chainId,\n      account = _useActiveWeb3React3.account;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      histories = _useState2[0],\n      setHistories = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var apolloClient = NETWORKS_INFO[chainId || ChainId.MAINNET].classicClient;\n  useEffect(function () {\n    function fetchFarmHistories() {\n      return _fetchFarmHistories.apply(this, arguments);\n    }\n\n    function _fetchFarmHistories() {\n      _fetchFarmHistories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var result, historiesData;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(!account || !isModalOpen)) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 2:\n                setLoading(true);\n                _context6.prev = 3;\n                _context6.next = 6;\n                return apolloClient.query({\n                  query: FARM_HISTORIES,\n                  variables: {\n                    user: account\n                  },\n                  fetchPolicy: 'network-only'\n                });\n\n              case 6:\n                result = _context6.sent;\n                historiesData = [];\n                result.data.deposits.forEach(function (deposit) {\n                  historiesData.push({\n                    id: deposit.id,\n                    timestamp: deposit.timestamp,\n                    method: FarmHistoryMethod.DEPOSIT,\n                    amount: deposit.amount,\n                    stakeToken: deposit.stakeToken\n                  });\n                });\n                result.data.withdraws.forEach(function (withdraw) {\n                  historiesData.push({\n                    id: withdraw.id,\n                    timestamp: withdraw.timestamp,\n                    method: FarmHistoryMethod.WITHDRAW,\n                    amount: withdraw.amount,\n                    stakeToken: withdraw.stakeToken\n                  });\n                });\n                result.data.harvests.forEach(function (harvest) {\n                  var _harvest$id$split;\n\n                  var txHash = (_harvest$id$split = harvest.id.split('-')) === null || _harvest$id$split === void 0 ? void 0 : _harvest$id$split[0];\n                  var index = historiesData.findIndex(function (history) {\n                    return history.method === FarmHistoryMethod.HARVEST && history.rewardToken === harvest.rewardToken && history.id.includes(txHash);\n                  });\n\n                  if (index < 0) {\n                    historiesData.push({\n                      id: harvest.id,\n                      timestamp: harvest.timestamp,\n                      method: FarmHistoryMethod.HARVEST,\n                      amount: harvest.amount,\n                      stakeToken: harvest.stakeToken,\n                      rewardToken: harvest.rewardToken\n                    });\n                  } else {\n                    historiesData[index].amount = BigNumber.from(historiesData[index].amount).add(BigNumber.from(harvest.amount)).toString();\n                  }\n                });\n                result.data.vests.forEach(function (vest) {\n                  var _vest$id$split;\n\n                  var txHash = (_vest$id$split = vest.id.split('-')) === null || _vest$id$split === void 0 ? void 0 : _vest$id$split[0];\n                  var index = historiesData.findIndex(function (history) {\n                    return history.method === FarmHistoryMethod.CLAIM && history.rewardToken === vest.rewardToken && history.id.includes(txHash);\n                  });\n\n                  if (index < 0) {\n                    historiesData.push({\n                      id: vest.id,\n                      timestamp: vest.timestamp,\n                      method: FarmHistoryMethod.CLAIM,\n                      amount: vest.amount,\n                      rewardToken: vest.rewardToken\n                    });\n                  } else {\n                    historiesData[index].amount = BigNumber.from(historiesData[index].amount).add(BigNumber.from(vest.amount)).toString();\n                  }\n                });\n                historiesData.sort(function (a, b) {\n                  return parseInt(b.timestamp) - parseInt(a.timestamp);\n                });\n                setHistories(historiesData);\n                _context6.next = 19;\n                break;\n\n              case 16:\n                _context6.prev = 16;\n                _context6.t0 = _context6[\"catch\"](3);\n                setHistories([]);\n\n              case 19:\n                setLoading(false);\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[3, 16]]);\n      }));\n      return _fetchFarmHistories.apply(this, arguments);\n    }\n\n    fetchFarmHistories();\n  }, [chainId, account, isModalOpen, apolloClient]);\n  return {\n    loading: loading,\n    data: histories\n  };\n};\n\n_s5(useYieldHistories, \"Z89QfSURzcfTZQ3PjLkoyFVcSaU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport var useTotalApr = function useTotalApr(farm) {\n  _s6();\n\n  var poolAddressChecksum = isAddressString(farm.id);\n\n  var _useTokenBalance = useTokenBalance(poolAddressChecksum),\n      lpTokenDecimals = _useTokenBalance.decimals; // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n\n\n  var lpTokenRatio = new Fraction(farm.totalStake.toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals))).divide(new Fraction(ethers.utils.parseUnits(farm.totalSupply, lpTokenDecimals).toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals))));\n  var liquidity = parseFloat(lpTokenRatio.toSignificant(6)) * parseFloat(farm.reserveUSD);\n  var farmAPR = useFarmApr(farm, liquidity.toString());\n  var tradingFee = farm !== null && farm !== void 0 && farm.oneDayFeeUSD ? farm === null || farm === void 0 ? void 0 : farm.oneDayFeeUSD : farm === null || farm === void 0 ? void 0 : farm.oneDayFeeUntracked;\n  var tradingFeeAPR = getTradingFeeAPR(farm === null || farm === void 0 ? void 0 : farm.reserveUSD, tradingFee);\n  var apr = farmAPR + (tradingFeeAPR < MAX_ALLOW_APY ? tradingFeeAPR : 0);\n  return {\n    tradingFeeAPR: tradingFeeAPR,\n    farmAPR: farmAPR,\n    apr: apr\n  };\n};\n\n_s6(useTotalApr, \"HHfv6CiAFdxEQebrjtjzMImeK9o=\", false, function () {\n  return [useTokenBalance, useFarmApr];\n});\n\nexport var useUserStakedBalance = function useUserStakedBalance(poolData) {\n  _s7();\n\n  var _useActiveWeb3React4 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React4.chainId;\n\n  var _parseSubgraphPoolDat = parseSubgraphPoolData(poolData, chainId),\n      currency0 = _parseSubgraphPoolDat.currency0,\n      currency1 = _parseSubgraphPoolDat.currency1;\n\n  var farmData = useFarmsData(false);\n  var userStakedData = Object.values(farmData.data).flat().filter(function (farm) {\n    return farm.id.toLowerCase() === poolData.id;\n  }).map(function (farm) {\n    var _farm$userData, _tryParseAmount, _tryParseAmount2;\n\n    var userStakedBalance = (_farm$userData = farm.userData) !== null && _farm$userData !== void 0 && _farm$userData.stakedBalance ? new Fraction(farm.userData.stakedBalance, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(LP_TOKEN_DECIMALS))) : new Fraction('0');\n    var lpUserStakedTokenRatio = userStakedBalance.divide(new Fraction(ethers.utils.parseUnits(farm.totalSupply, LP_TOKEN_DECIMALS).toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(LP_TOKEN_DECIMALS))));\n    var userStakedToken0Balance = ((_tryParseAmount = tryParseAmount(farm.reserve0, currency0)) === null || _tryParseAmount === void 0 ? void 0 : _tryParseAmount.multiply(lpUserStakedTokenRatio)) || CurrencyAmount.fromRawAmount(currency0, 0);\n    var userStakedToken1Balance = ((_tryParseAmount2 = tryParseAmount(farm.reserve1, currency1)) === null || _tryParseAmount2 === void 0 ? void 0 : _tryParseAmount2.multiply(lpUserStakedTokenRatio)) || CurrencyAmount.fromRawAmount(currency1, 0);\n    var userStakedBalanceUSD = new Fraction(parseUnits(farm.reserveUSD, RESERVE_USD_DECIMALS).toString(), JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(RESERVE_USD_DECIMALS))).multiply(lpUserStakedTokenRatio);\n    return {\n      userStakedToken0Balance: userStakedToken0Balance,\n      userStakedToken1Balance: userStakedToken1Balance,\n      userStakedBalanceUSD: userStakedBalanceUSD,\n      userStakedBalance: userStakedBalance\n    };\n  });\n\n  var _userStakedData$reduc = userStakedData.reduce(function (acc, value) {\n    return {\n      userStakedToken0Balance: value.userStakedToken0Balance.add(acc.userStakedToken0Balance),\n      userStakedToken1Balance: value.userStakedToken1Balance.add(acc.userStakedToken1Balance),\n      userStakedBalanceUSD: value.userStakedBalanceUSD.add(acc.userStakedBalanceUSD),\n      userStakedBalance: value.userStakedBalance.add(acc.userStakedBalance)\n    };\n  }, {\n    userStakedToken0Balance: CurrencyAmount.fromRawAmount(currency0, 0),\n    userStakedToken1Balance: CurrencyAmount.fromRawAmount(currency1, 0),\n    userStakedBalanceUSD: new Fraction('0'),\n    userStakedBalance: new Fraction('0')\n  }),\n      userStakedToken0Balance = _userStakedData$reduc.userStakedToken0Balance,\n      userStakedToken1Balance = _userStakedData$reduc.userStakedToken1Balance,\n      userStakedBalanceUSD = _userStakedData$reduc.userStakedBalanceUSD,\n      userStakedBalance = _userStakedData$reduc.userStakedBalance;\n\n  return {\n    userStakedToken0Balance: userStakedToken0Balance,\n    userStakedToken1Balance: userStakedToken1Balance,\n    userStakedBalanceUSD: userStakedBalanceUSD,\n    userStakedBalance: userStakedBalance\n  };\n};\n\n_s7(useUserStakedBalance, \"8y6DnCDjXtxxjyp5o9aerO1k5Lk=\", false, function () {\n  return [useActiveWeb3React, useFarmsData];\n});","map":{"version":3,"names":["Interface","BigNumber","ChainId","CurrencyAmount","Fraction","ethers","parseUnits","JSBI","useEffect","useMemo","useRef","useState","useSelector","FARM_HISTORIES","FAIRLAUNCH_V2_ABI","FAIRLAUNCH_ABI","DEFAULT_REWARDS","LP_TOKEN_DECIMALS","MAX_ALLOW_APY","OUTSIDE_FAIRLAUNCH_ADDRESSES","RESERVE_USD_DECIMALS","ZERO_ADDRESS","NETWORKS_INFO","nativeOnChain","useActiveWeb3React","useAllTokens","useFairLaunchContracts","useTokenBalance","useTokensMarketPrice","useBlockNumber","useETHPrice","useTokensPrice","FairLaunchVersion","FarmHistoryMethod","useAppDispatch","useMultipleContractSingleData","getBulkPoolDataFromPoolList","tryParseAmount","isAddressString","getTradingFeeAPR","parseSubgraphPoolData","useFarmApr","setFarmsData","setLoading","setYieldPoolsError","useRewardTokens","chainId","rewardTokensMulticallResult","MAINNET","classic","fairlaunch","rewardTokensV2MulticallResult","fairlaunchV2","defaultRewards","result","forEach","token","concat","filter","item","indexOf","useRewardTokenPrices","tokens","version","tokenPrices","marketPrices","map","price","index","useFarmsData","isIncludeOutsideFarms","dispatch","account","fairLaunchContracts","ethPrice","allTokens","blockNumber","apolloClient","classicClient","farmsData","state","farms","data","loading","error","farmsDataRef","current","latestChainId","cancelled","currentTimestamp","Math","round","Date","now","getListFarmsForContract","contract","getRewardTokens","rewardTokenAddresses","poolLength","pids","Array","from","toNumber","keys","isV2","includes","address","Promise","all","pid","getPoolInfo","poolInfo","accRewardPerShares","accRewardPerShare","div","rewardMultipliers","rewardPerSeconds","fairLaunchVersion","V2","V1","poolInfos","getUserInfo","amount","stakedBalance","stakedBalances","pendingRewards","poolAddresses","stakeToken","toLowerCase","currentPrice","rewardTokens","Boolean","find","farmData","id","fairLaunchAddress","userData","rewards","pendingReward","pendingRewardIndex","isEnded","endTime","endBlock","Number","MAX_SAFE_INTEGER","outsideFarm","fetch","subgraphAPI","method","body","JSON","stringify","query","then","res","json","poolData","totalSupply","pair","split","a","b","slice","push","amp","vReserve0","reserve0","vReserve1","reserve1","token0","derivedETH","derivedBNB","token1","trackedReserveETH","trackedReserveBNB","farm","checkForFarms","fairLaunchAddresses","Object","promises","promiseResult","length","console","useActiveAndUniqueFarmsData","existedPairs","uniqueAndActiveFarms","values","flat","pairKey","symbol","useYieldHistories","isModalOpen","histories","setHistories","fetchFarmHistories","variables","user","fetchPolicy","historiesData","deposits","deposit","timestamp","DEPOSIT","withdraws","withdraw","WITHDRAW","harvests","harvest","txHash","findIndex","history","HARVEST","rewardToken","add","toString","vests","vest","CLAIM","sort","parseInt","useTotalApr","poolAddressChecksum","lpTokenDecimals","decimals","lpTokenRatio","totalStake","exponentiate","BigInt","divide","utils","liquidity","parseFloat","toSignificant","reserveUSD","farmAPR","tradingFee","oneDayFeeUSD","oneDayFeeUntracked","tradingFeeAPR","apr","useUserStakedBalance","currency0","currency1","userStakedData","userStakedBalance","lpUserStakedTokenRatio","userStakedToken0Balance","multiply","fromRawAmount","userStakedToken1Balance","userStakedBalanceUSD","reduce","acc","value"],"sources":["/Applications/XAMPP/voxel-interface/src/state/farms/hooks.ts"],"sourcesContent":["import { Interface } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, CurrencyAmount, Fraction, Token } from '@kyberswap/ks-sdk-core'\nimport { ethers } from 'ethers'\nimport { parseUnits } from 'ethers/lib/utils'\nimport JSBI from 'jsbi'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { FARM_HISTORIES } from 'apollo/queries'\nimport FAIRLAUNCH_V2_ABI from 'constants/abis/fairlaunch-v2.json'\nimport FAIRLAUNCH_ABI from 'constants/abis/fairlaunch.json'\nimport {\n  DEFAULT_REWARDS,\n  LP_TOKEN_DECIMALS,\n  MAX_ALLOW_APY,\n  OUTSIDE_FAIRLAUNCH_ADDRESSES,\n  RESERVE_USD_DECIMALS,\n  ZERO_ADDRESS,\n} from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { nativeOnChain } from 'constants/tokens'\nimport { VERSION } from 'constants/v2'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useFairLaunchContracts } from 'hooks/useContract'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useTokensMarketPrice from 'hooks/useTokensMarketPrice'\nimport { AppState } from 'state'\nimport { useBlockNumber, useETHPrice, useTokensPrice } from 'state/application/hooks'\nimport { FairLaunchVersion, Farm, FarmHistoriesSubgraphResult, FarmHistory, FarmHistoryMethod } from 'state/farms/types'\nimport { useAppDispatch } from 'state/hooks'\nimport { useMultipleContractSingleData } from 'state/multicall/hooks'\nimport { SubgraphPoolData, getBulkPoolDataFromPoolList } from 'state/pools/hooks'\nimport { tryParseAmount } from 'state/swap/hooks'\nimport { isAddressString } from 'utils'\nimport { getTradingFeeAPR, parseSubgraphPoolData, useFarmApr } from 'utils/dmm'\n\nimport { setFarmsData, setLoading, setYieldPoolsError } from './actions'\n\nexport const useRewardTokens = () => {\n  const { chainId } = useActiveWeb3React()\n  const rewardTokensMulticallResult = useMultipleContractSingleData(\n    NETWORKS_INFO[chainId || ChainId.MAINNET].classic.fairlaunch,\n    new Interface(FAIRLAUNCH_ABI),\n    'getRewardTokens',\n  )\n\n  const rewardTokensV2MulticallResult = useMultipleContractSingleData(\n    NETWORKS_INFO[chainId || ChainId.MAINNET].classic.fairlaunchV2,\n    new Interface(FAIRLAUNCH_V2_ABI),\n    'getRewardTokens',\n  )\n\n  const defaultRewards = useMemo(() => {\n    return DEFAULT_REWARDS[chainId as ChainId] || []\n  }, [chainId])\n\n  return useMemo(() => {\n    let result: string[] = []\n\n    rewardTokensMulticallResult.forEach(token => {\n      if (token?.result?.[0]) {\n        result = result.concat(token?.result?.[0].filter((item: string) => result.indexOf(item) < 0))\n      }\n    })\n\n    rewardTokensV2MulticallResult.forEach(token => {\n      if (token?.result?.[0]) {\n        result = result.concat(token?.result?.[0].filter((item: string) => result.indexOf(item) < 0))\n      }\n    })\n\n    return [...defaultRewards, ...result]\n  }, [rewardTokensMulticallResult, rewardTokensV2MulticallResult, defaultRewards])\n}\n\nexport const useRewardTokenPrices = (tokens: (Token | undefined | null)[], version?: VERSION) => {\n  const tokenPrices = useTokensPrice(tokens, version)\n  const marketPrices = useTokensMarketPrice(tokens)\n\n  return useMemo(\n    () => tokenPrices.map((price, index) => marketPrices[index] || price || 0),\n    [tokenPrices, marketPrices],\n  )\n}\n\nexport const useFarmsData = (isIncludeOutsideFarms = true) => {\n  const dispatch = useAppDispatch()\n  const { chainId, account } = useActiveWeb3React()\n  const fairLaunchContracts = useFairLaunchContracts()\n  const ethPrice = useETHPrice()\n  const allTokens = useAllTokens()\n  const blockNumber = useBlockNumber()\n\n  const apolloClient = NETWORKS_INFO[chainId || ChainId.MAINNET].classicClient\n  const farmsData = useSelector((state: AppState) => state.farms.data)\n  const loading = useSelector((state: AppState) => state.farms.loading)\n  const error = useSelector((state: AppState) => state.farms.error)\n\n  const farmsDataRef = useRef(farmsData)\n  useEffect(() => {\n    farmsDataRef.current = farmsData\n  }, [farmsData])\n\n  // Fix slow network speed when loading farm.\n  const latestChainId = useRef(chainId)\n  useEffect(() => {\n    latestChainId.current = chainId\n  }, [chainId])\n\n  useEffect(() => {\n    let cancelled = false\n    const currentTimestamp = Math.round(Date.now() / 1000)\n\n    async function getListFarmsForContract(contract: Contract): Promise<Farm[]> {\n      const rewardTokenAddresses: string[] = await contract?.getRewardTokens()\n      const poolLength = await contract?.poolLength()\n\n      const pids = [...Array(BigNumber.from(poolLength).toNumber()).keys()]\n\n      const isV2 = NETWORKS_INFO[chainId || ChainId.MAINNET].classic.fairlaunchV2.includes(contract.address)\n      const poolInfos = await Promise.all(\n        pids.map(async (pid: number) => {\n          const poolInfo = await contract?.getPoolInfo(pid)\n          if (isV2) {\n            return {\n              ...poolInfo,\n              accRewardPerShares: poolInfo.accRewardPerShares.map((accRewardPerShare: BigNumber, index: number) =>\n                accRewardPerShare.div(poolInfo.rewardMultipliers[index]),\n              ),\n              rewardPerSeconds: poolInfo.rewardPerSeconds.map((accRewardPerShare: BigNumber, index: number) =>\n                accRewardPerShare.div(poolInfo.rewardMultipliers[index]),\n              ),\n              pid,\n              fairLaunchVersion: FairLaunchVersion.V2,\n            }\n          }\n\n          return {\n            ...poolInfo,\n            pid,\n            fairLaunchVersion: FairLaunchVersion.V1,\n          }\n        }),\n      )\n\n      const stakedBalances = await Promise.all(\n        pids.map(async (pid: number) => {\n          const stakedBalance = account ? await contract?.getUserInfo(pid, account as string) : { amount: 0 }\n\n          return stakedBalance.amount\n        }),\n      )\n\n      const pendingRewards = await Promise.all(\n        pids.map(async (pid: number) => {\n          const pendingRewards = account ? await contract?.pendingRewards(pid, account as string) : null\n\n          return pendingRewards\n        }),\n      )\n\n      const poolAddresses = poolInfos.map(poolInfo => poolInfo.stakeToken.toLowerCase())\n\n      const farmsData = await getBulkPoolDataFromPoolList(poolAddresses, apolloClient, ethPrice.currentPrice, chainId)\n\n      const rewardTokens = rewardTokenAddresses\n        .map(address =>\n          address.toLowerCase() === ZERO_ADDRESS.toLowerCase() ? nativeOnChain(chainId as ChainId) : allTokens[address],\n        )\n        .filter(Boolean)\n\n      const farms: Farm[] = poolInfos.map((poolInfo, index) => {\n        return {\n          ...farmsData.find(\n            (farmData: Farm) => farmData && farmData.id.toLowerCase() === poolInfo.stakeToken.toLowerCase(),\n          ),\n          ...poolInfo,\n          rewardTokens,\n          fairLaunchAddress: contract.address,\n          userData: {\n            stakedBalance: stakedBalances[index],\n            rewards:\n              poolInfo.fairLaunchVersion === FairLaunchVersion.V2\n                ? pendingRewards[index] &&\n                  pendingRewards[index].map((pendingReward: BigNumber, pendingRewardIndex: number) =>\n                    pendingReward.div(poolInfo.rewardMultipliers[pendingRewardIndex]),\n                  )\n                : pendingRewards[index],\n          },\n          isEnded:\n            poolInfo.fairLaunchVersion === FairLaunchVersion.V2\n              ? poolInfo.endTime <= currentTimestamp\n              : poolInfo.endBlock <= (blockNumber || Number.MAX_SAFE_INTEGER),\n        }\n      })\n\n      const outsideFarm = OUTSIDE_FAIRLAUNCH_ADDRESSES[contract.address]\n      if (isIncludeOutsideFarms && outsideFarm) {\n        const poolData = await fetch(outsideFarm.subgraphAPI, {\n          method: 'POST',\n          body: JSON.stringify({\n            query: outsideFarm.query,\n          }),\n        }).then(res => res.json())\n\n        // Defend data totalSupply from pancake greater than 18 decimals\n        let totalSupply = poolData.data.pair.totalSupply\n\n        const [a, b] = totalSupply.split('.')\n        totalSupply = a + '.' + b.slice(0, 18)\n\n        farms.push({\n          ...poolData.data.pair,\n          amp: 10000,\n          vReserve0: poolData.data.pair.reserve0,\n          vReserve1: poolData.data.pair.reserve1,\n          token0: {\n            ...poolData.data.pair.token0,\n            derivedETH: poolData.data.pair.token0.derivedBNB,\n          },\n\n          token1: {\n            ...poolData.data.pair.token1,\n            derivedETH: poolData.data.pair.token1.derivedBNB,\n          },\n          trackedReserveETH: poolData.data.pair.trackedReserveBNB,\n          totalSupply,\n\n          ...poolInfos[0],\n          rewardTokens,\n          fairLaunchAddress: contract.address,\n          userData: {\n            stakedBalance: stakedBalances[0],\n            rewards: pendingRewards[0],\n          },\n        })\n      }\n\n      return farms.filter(farm => !!farm.totalSupply)\n    }\n\n    async function checkForFarms() {\n      try {\n        if (!fairLaunchContracts) {\n          dispatch(setFarmsData({}))\n          return\n        }\n\n        dispatch(setLoading(true))\n\n        const result: { [key: string]: Farm[] } = {}\n\n        const fairLaunchAddresses = Object.keys(fairLaunchContracts)\n        const promises: Promise<Farm[]>[] = []\n\n        fairLaunchAddresses.forEach(address => {\n          promises.push(getListFarmsForContract(fairLaunchContracts[address]))\n        })\n\n        const promiseResult = await Promise.all(promises)\n\n        fairLaunchAddresses.forEach((address, index) => {\n          result[address] = promiseResult[index]\n        })\n\n        if (latestChainId.current === chainId && (Object.keys(farmsDataRef.current).length === 0 || !cancelled)) {\n          dispatch(setFarmsData(result))\n        }\n      } catch (err) {\n        if (!cancelled) {\n          console.error(err)\n          dispatch(setYieldPoolsError(err as Error))\n        }\n      }\n\n      dispatch(setLoading(false))\n    }\n\n    checkForFarms()\n\n    return () => {\n      cancelled = true\n    }\n  }, [\n    apolloClient,\n    dispatch,\n    ethPrice.currentPrice,\n    chainId,\n    fairLaunchContracts,\n    account,\n    blockNumber,\n    allTokens,\n    isIncludeOutsideFarms,\n  ])\n\n  return useMemo(() => ({ loading, error, data: farmsData }), [error, farmsData, loading])\n}\n\nexport const useActiveAndUniqueFarmsData = (): { loading: boolean; error: string; data: Farm[] } => {\n  const farmsData = useFarmsData(false)\n\n  return useMemo(() => {\n    const { loading, error, data: farms } = farmsData\n\n    const existedPairs: { [key: string]: boolean } = {}\n    const uniqueAndActiveFarms = Object.values(farms)\n      .flat()\n      .filter(farm => !farm.isEnded)\n      .filter(farm => {\n        const pairKey = `${farm.token0?.symbol} - ${farm.token1?.symbol}`\n        if (existedPairs[pairKey]) return false\n        existedPairs[pairKey] = true\n        return true\n      })\n\n    return {\n      loading,\n      error,\n      data: uniqueAndActiveFarms,\n    }\n  }, [farmsData])\n}\n\nexport const useYieldHistories = (isModalOpen: boolean) => {\n  const { chainId, account } = useActiveWeb3React()\n  const [histories, setHistories] = useState<FarmHistory[]>([])\n  const [loading, setLoading] = useState(false)\n  const apolloClient = NETWORKS_INFO[chainId || ChainId.MAINNET].classicClient\n\n  useEffect(() => {\n    async function fetchFarmHistories() {\n      if (!account || !isModalOpen) {\n        return\n      }\n\n      setLoading(true)\n\n      try {\n        const result = await apolloClient.query<FarmHistoriesSubgraphResult>({\n          query: FARM_HISTORIES,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'network-only',\n        })\n\n        const historiesData: FarmHistory[] = []\n\n        result.data.deposits.forEach(deposit => {\n          historiesData.push({\n            id: deposit.id,\n            timestamp: deposit.timestamp,\n            method: FarmHistoryMethod.DEPOSIT,\n            amount: deposit.amount,\n            stakeToken: deposit.stakeToken,\n          })\n        })\n\n        result.data.withdraws.forEach(withdraw => {\n          historiesData.push({\n            id: withdraw.id,\n            timestamp: withdraw.timestamp,\n            method: FarmHistoryMethod.WITHDRAW,\n            amount: withdraw.amount,\n            stakeToken: withdraw.stakeToken,\n          })\n        })\n\n        result.data.harvests.forEach(harvest => {\n          const txHash = harvest.id.split('-')?.[0]\n\n          const index = historiesData.findIndex(\n            history =>\n              history.method === FarmHistoryMethod.HARVEST &&\n              history.rewardToken === harvest.rewardToken &&\n              history.id.includes(txHash),\n          )\n\n          if (index < 0) {\n            historiesData.push({\n              id: harvest.id,\n              timestamp: harvest.timestamp,\n              method: FarmHistoryMethod.HARVEST,\n              amount: harvest.amount,\n              stakeToken: harvest.stakeToken,\n              rewardToken: harvest.rewardToken,\n            })\n          } else {\n            historiesData[index].amount = BigNumber.from(historiesData[index].amount)\n              .add(BigNumber.from(harvest.amount))\n              .toString()\n          }\n        })\n\n        result.data.vests.forEach(vest => {\n          const txHash = vest.id.split('-')?.[0]\n\n          const index = historiesData.findIndex(\n            history =>\n              history.method === FarmHistoryMethod.CLAIM &&\n              history.rewardToken === vest.rewardToken &&\n              history.id.includes(txHash),\n          )\n\n          if (index < 0) {\n            historiesData.push({\n              id: vest.id,\n              timestamp: vest.timestamp,\n              method: FarmHistoryMethod.CLAIM,\n              amount: vest.amount,\n              rewardToken: vest.rewardToken,\n            })\n          } else {\n            historiesData[index].amount = BigNumber.from(historiesData[index].amount)\n              .add(BigNumber.from(vest.amount))\n              .toString()\n          }\n        })\n\n        historiesData.sort(function (a, b) {\n          return parseInt(b.timestamp) - parseInt(a.timestamp)\n        })\n\n        setHistories(historiesData)\n      } catch (err) {\n        setHistories([])\n      }\n\n      setLoading(false)\n    }\n\n    fetchFarmHistories()\n  }, [chainId, account, isModalOpen, apolloClient])\n\n  return { loading, data: histories }\n}\n\nexport const useTotalApr = (farm: Farm) => {\n  const poolAddressChecksum = isAddressString(farm.id)\n  const { decimals: lpTokenDecimals } = useTokenBalance(poolAddressChecksum)\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new Fraction(\n    farm.totalStake.toString(),\n    JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\n  ).divide(\n    new Fraction(\n      ethers.utils.parseUnits(farm.totalSupply, lpTokenDecimals).toString(),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(lpTokenDecimals)),\n    ),\n  )\n  const liquidity = parseFloat(lpTokenRatio.toSignificant(6)) * parseFloat(farm.reserveUSD)\n\n  const farmAPR = useFarmApr(farm, liquidity.toString())\n  const tradingFee = farm?.oneDayFeeUSD ? farm?.oneDayFeeUSD : farm?.oneDayFeeUntracked\n\n  const tradingFeeAPR = getTradingFeeAPR(farm?.reserveUSD, tradingFee)\n  const apr = farmAPR + (tradingFeeAPR < MAX_ALLOW_APY ? tradingFeeAPR : 0)\n\n  return { tradingFeeAPR, farmAPR, apr }\n}\n\nexport const useUserStakedBalance = (poolData: SubgraphPoolData) => {\n  const { chainId } = useActiveWeb3React()\n\n  const { currency0, currency1 } = parseSubgraphPoolData(poolData, chainId as ChainId)\n\n  const farmData = useFarmsData(false)\n\n  const userStakedData = Object.values(farmData.data)\n    .flat()\n    .filter(farm => farm.id.toLowerCase() === poolData.id)\n    .map(farm => {\n      const userStakedBalance = farm.userData?.stakedBalance\n        ? new Fraction(farm.userData.stakedBalance, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(LP_TOKEN_DECIMALS)))\n        : new Fraction('0')\n\n      const lpUserStakedTokenRatio = userStakedBalance.divide(\n        new Fraction(\n          ethers.utils.parseUnits(farm.totalSupply, LP_TOKEN_DECIMALS).toString(),\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(LP_TOKEN_DECIMALS)),\n        ),\n      )\n\n      const userStakedToken0Balance =\n        tryParseAmount(farm.reserve0, currency0)?.multiply(lpUserStakedTokenRatio) ||\n        CurrencyAmount.fromRawAmount(currency0, 0)\n      const userStakedToken1Balance =\n        tryParseAmount(farm.reserve1, currency1)?.multiply(lpUserStakedTokenRatio) ||\n        CurrencyAmount.fromRawAmount(currency1, 0)\n\n      const userStakedBalanceUSD = new Fraction(\n        parseUnits(farm.reserveUSD, RESERVE_USD_DECIMALS).toString(),\n        JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(RESERVE_USD_DECIMALS)),\n      ).multiply(lpUserStakedTokenRatio)\n\n      return {\n        userStakedToken0Balance,\n        userStakedToken1Balance,\n        userStakedBalanceUSD,\n        userStakedBalance,\n      }\n    })\n\n  const { userStakedToken0Balance, userStakedToken1Balance, userStakedBalanceUSD, userStakedBalance } =\n    userStakedData.reduce(\n      (acc, value) => ({\n        userStakedToken0Balance: value.userStakedToken0Balance.add(acc.userStakedToken0Balance),\n        userStakedToken1Balance: value.userStakedToken1Balance.add(acc.userStakedToken1Balance),\n        userStakedBalanceUSD: value.userStakedBalanceUSD.add(acc.userStakedBalanceUSD),\n        userStakedBalance: value.userStakedBalance.add(acc.userStakedBalance),\n      }),\n      {\n        userStakedToken0Balance: CurrencyAmount.fromRawAmount(currency0, 0),\n        userStakedToken1Balance: CurrencyAmount.fromRawAmount(currency1, 0),\n        userStakedBalanceUSD: new Fraction('0'),\n        userStakedBalance: new Fraction('0'),\n      },\n    )\n\n  return {\n    userStakedToken0Balance,\n    userStakedToken1Balance,\n    userStakedBalanceUSD,\n    userStakedBalance,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}