{"ast":null,"code":"import _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/SwapProAmm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport JSBI from 'jsbi';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport AddressInputPanel from 'components/AddressInputPanel';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button';\nimport { GreyCard } from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport Loader from 'components/Loader';\nimport { AutoRow, RowBetween } from 'components/Row';\nimport TokenWarningModal from 'components/TokenWarningModal';\nimport TransactionSettings from 'components/TransactionSettings';\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal';\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, Container, PageWrapper, SwapCallbackError, SwapFormActions, Wrapper } from 'components/swapv2/styleds';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens, useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useProAmmApproveCallback } from 'hooks/useApproveCallback';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useTheme from 'hooks/useTheme';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport { AppBodyWrapped } from 'pages/SwapV2';\nimport { useWalletModalToggle } from 'state/application/hooks';\nimport { TradeState } from 'state/routing/types';\nimport { Field } from 'state/swap/actions';\nimport { useDefaultsFromURLSearch, useSwapActionHandlers, useSwapState } from 'state/swap/hooks';\nimport { useProAmmDerivedSwapInfo } from 'state/swap/proamm/hooks';\nimport { useExpertModeManager } from 'state/user/hooks';\nimport { LinkStyledButton, TYPE } from 'theme';\nimport { basisPointsToPercent } from 'utils';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { warningSeverity } from 'utils/prices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SwapProAmm(_ref) {\n  _s();\n\n  var _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n\n  var history = _ref.history;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account;\n\n  var loadedUrlParams = useDefaultsFromURLSearch(); // token warning stuff\n\n  var _ref2 = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)],\n      loadedInputCurrency = _ref2[0],\n      loadedOutputCurrency = _ref2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dismissTokenWarning = _useState2[0],\n      setDismissTokenWarning = _useState2[1];\n\n  var urlLoadedTokens = useMemo(function () {\n    var _filter, _ref3;\n\n    return (_filter = (_ref3 = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref3 === void 0 ? void 0 : _ref3.filter(function (c) {\n      var _c$isToken;\n\n      return (_c$isToken = c === null || c === void 0 ? void 0 : c.isToken) !== null && _c$isToken !== void 0 ? _c$isToken : false;\n    })) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  var handleConfirmTokenWarning = useCallback(function () {\n    setDismissTokenWarning(true);\n  }, []); // dismiss warning if all imported tokens are in active lists\n\n  var defaultTokens = useAllTokens();\n  var importTokensNotInDefault = useMemo(function () {\n    return urlLoadedTokens && urlLoadedTokens.filter(function (token) {\n      return !Boolean(token.address in defaultTokens);\n    });\n  }, [defaultTokens, urlLoadedTokens]);\n  var theme = useTheme(); // toggle wallet when disconnected\n\n  var toggleWalletModal = useWalletModalToggle(); // for expert mode\n\n  var _useExpertModeManager = useExpertModeManager(),\n      _useExpertModeManager2 = _slicedToArray(_useExpertModeManager, 1),\n      isExpertMode = _useExpertModeManager2[0]; // swap state\n\n\n  var _useSwapState = useSwapState(),\n      independentField = _useSwapState.independentField,\n      typedValue = _useSwapState.typedValue,\n      recipient = _useSwapState.recipient;\n\n  var _useProAmmDerivedSwap = useProAmmDerivedSwapInfo(),\n      _useProAmmDerivedSwap2 = _useProAmmDerivedSwap.trade,\n      tradeState = _useProAmmDerivedSwap2.state,\n      trade = _useProAmmDerivedSwap2.trade,\n      allowedSlippage = _useProAmmDerivedSwap.allowedSlippage,\n      currencyBalances = _useProAmmDerivedSwap.currencyBalances,\n      parsedAmount = _useProAmmDerivedSwap.parsedAmount,\n      currencies = _useProAmmDerivedSwap.currencies,\n      swapInputError = _useProAmmDerivedSwap.inputError;\n\n  var _useWrapCallback = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue),\n      wrapType = _useWrapCallback.wrapType,\n      onWrap = _useWrapCallback.execute,\n      wrapInputError = _useWrapCallback.inputError;\n\n  var showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  var parsedAmounts = useMemo(function () {\n    var _ref4, _ref5;\n\n    return showWrap ? (_ref4 = {}, _defineProperty(_ref4, Field.INPUT, parsedAmount), _defineProperty(_ref4, Field.OUTPUT, parsedAmount), _ref4) : (_ref5 = {}, _defineProperty(_ref5, Field.INPUT, independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount), _defineProperty(_ref5, Field.OUTPUT, independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount), _ref5);\n  }, [independentField, parsedAmount, showWrap, trade]);\n\n  var _useMemo = useMemo(function () {\n    return [!(trade !== null && trade !== void 0 && trade.swaps), TradeState.LOADING === tradeState, TradeState.SYNCING === tradeState];\n  }, [trade, tradeState]),\n      _useMemo2 = _slicedToArray(_useMemo, 3),\n      routeNotFound = _useMemo2[0],\n      routeIsLoading = _useMemo2[1],\n      routeIsSyncing = _useMemo2[2];\n\n  var _useSwapActionHandler = useSwapActionHandlers(),\n      onSwitchTokens = _useSwapActionHandler.onSwitchTokens,\n      onCurrencySelection = _useSwapActionHandler.onCurrencySelection,\n      onUserInput = _useSwapActionHandler.onUserInput,\n      onChangeRecipient = _useSwapActionHandler.onChangeRecipient;\n\n  var isValid = !swapInputError;\n  var dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  var handleTypeInput = useCallback(function (value) {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  var handleTypeOutput = useCallback(function (value) {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // reset if they close warning without tokens in params\n\n  var handleDismissTokenWarning = useCallback(function () {\n    setDismissTokenWarning(true);\n    history.push('/elastic/swap/');\n  }, [history]); // modal and loading\n\n  var _useState3 = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _useState4$ = _useState4[0],\n      showConfirm = _useState4$.showConfirm,\n      tradeToConfirm = _useState4$.tradeToConfirm,\n      swapErrorMessage = _useState4$.swapErrorMessage,\n      attemptingTxn = _useState4$.attemptingTxn,\n      txHash = _useState4$.txHash,\n      setSwapState = _useState4[1];\n\n  var formattedAmounts = useMemo(function () {\n    var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _ref6;\n\n    return _ref6 = {}, _defineProperty(_ref6, independentField, typedValue), _defineProperty(_ref6, dependentField, showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _ref6;\n  }, [dependentField, independentField, parsedAmounts, showWrap, typedValue]);\n  var userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n\n  var _useProAmmApproveCall = useProAmmApproveCallback(trade, basisPointsToPercent(allowedSlippage)),\n      _useProAmmApproveCall2 = _slicedToArray(_useProAmmApproveCall, 2),\n      approvalState = _useProAmmApproveCall2[0],\n      approveCallback = _useProAmmApproveCall2[1]; // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      approvalSubmitted = _useState6[0],\n      setApprovalSubmitted = _useState6[1];\n\n  useEffect(function () {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approvalState, approvalSubmitted]);\n  var maxInputAmount = useMemo(function () {\n    return maxAmountSpend(currencyBalances[Field.INPUT]);\n  }, [currencyBalances]);\n  var showMaxButton = Boolean((maxInputAmount === null || maxInputAmount === void 0 ? void 0 : maxInputAmount.greaterThan(0)) && !((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) !== null && _parsedAmounts$Field$ !== void 0 && _parsedAmounts$Field$.equalTo(maxInputAmount))); // the callback to execute the swap\n\n  var _useSwapCallback = useSwapCallback(trade, allowedSlippage, recipient),\n      swapCallback = _useSwapCallback.callback,\n      swapCallbackError = _useSwapCallback.error;\n\n  var priceImpact = trade && trade.priceImpact;\n  var handleSwap = useCallback(function () {\n    if (!swapCallback) {\n      return;\n    }\n\n    if (priceImpact && !confirmPriceImpactWithoutFee(priceImpact)) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm: tradeToConfirm,\n      showConfirm: showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(function (hash) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n    }).catch(function (error) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [swapCallback, priceImpact, tradeToConfirm, showConfirm]); // warnings on slippage\n\n  var priceImpactSeverity = warningSeverity(priceImpact); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  var showApproveFlow = !swapInputError && (approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING || approvalSubmitted && approvalState === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  var handleConfirmDismiss = useCallback(function () {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm: tradeToConfirm,\n      attemptingTxn: attemptingTxn,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash\n    }); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  var handleAcceptChanges = useCallback(function () {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash,\n      attemptingTxn: attemptingTxn,\n      showConfirm: showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  var handleInputSelect = useCallback(function (inputCurrency) {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  var handleMaxInput = useCallback(function () {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact());\n  }, [maxInputAmount, onUserInput]);\n  var handleOutputSelect = useCallback(function (outputCurrency) {\n    return onCurrencySelection(Field.OUTPUT, outputCurrency);\n  }, [onCurrencySelection]);\n  var priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: importTokensNotInDefault.length > 0 && !dismissTokenWarning,\n      tokens: importTokensNotInDefault,\n      onConfirm: handleConfirmTokenWarning,\n      onDismiss: handleDismissTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(AppBodyWrapped, {\n          children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n            mb: '16px',\n            children: /*#__PURE__*/_jsxDEV(SwapFormActions, {\n              children: /*#__PURE__*/_jsxDEV(TransactionSettings, {\n                isShowDisplaySettings: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n            id: \"swap-page\",\n            children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n              isOpen: showConfirm,\n              trade: trade,\n              originalTrade: tradeToConfirm,\n              onAcceptChanges: handleAcceptChanges,\n              attemptingTxn: attemptingTxn,\n              txHash: txHash,\n              recipient: recipient,\n              allowedSlippage: allowedSlippage,\n              onConfirm: handleSwap,\n              swapErrorMessage: swapErrorMessage,\n              onDismiss: handleConfirmDismiss // tokenAddtoMetaMask={currencies[Field.OUTPUT] ? (currencies[Field.OUTPUT] as Currency) : undefined}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: 'sm',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                  label: independentField === Field.OUTPUT && !showWrap ? \"From (at most)\" : \"From\",\n                  value: formattedAmounts[Field.INPUT],\n                  showMaxButton: showMaxButton,\n                  currency: currencies[Field.INPUT],\n                  onUserInput: handleTypeInput,\n                  onMax: handleMaxInput,\n                  onCurrencySelect: handleInputSelect,\n                  otherCurrency: currencies[Field.OUTPUT],\n                  showCommonBases: true,\n                  id: \"swap-currency-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                  children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                    size: \"16\",\n                    onClick: function onClick() {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n                      onSwitchTokens();\n                    },\n                    color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.text : theme.text3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                  value: formattedAmounts[Field.OUTPUT],\n                  onUserInput: handleTypeOutput,\n                  label: independentField === Field.INPUT && !showWrap ? \"To (at least)\" : \"To\",\n                  showMaxButton: false,\n                  hideBalance: false,\n                  currency: currencies[Field.OUTPUT],\n                  onCurrencySelect: handleOutputSelect,\n                  otherCurrency: currencies[Field.INPUT],\n                  showCommonBases: true,\n                  id: \"swap-currency-output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                  justify: \"space-between\",\n                  style: {\n                    padding: '0 1rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                    children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                      size: \"16\",\n                      color: theme.text2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                    id: \"remove-recipient-button\",\n                    onClick: function onClick() {\n                      return onChangeRecipient(null);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"- Remove recipient\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n                  id: \"recipient\",\n                  value: recipient,\n                  onChange: onChangeRecipient\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [!account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n                  onClick: toggleWalletModal,\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Connect Wallet\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this) : showWrap ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                  disabled: Boolean(wrapInputError),\n                  onClick: onWrap,\n                  children: wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this) : routeNotFound && userHasSpecifiedInputOutput && !routeIsLoading && !routeIsSyncing ? /*#__PURE__*/_jsxDEV(GreyCard, {\n                  style: {\n                    textAlign: 'center',\n                    borderRadius: '5.5px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n                    mb: \"4px\",\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Insufficient liquidity for this trade2.\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                    onClick: approveCallback,\n                    disabled: approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n                    width: \"48%\",\n                    altDisabledStyle: approvalState === ApprovalState.PENDING // show solid button while waiting\n                    ,\n                    confirmed: approvalState === ApprovalState.APPROVED,\n                    children: approvalState === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                      gap: \"6px\",\n                      justify: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Approving\"\n                      }, void 0, false, void 0, this), \" \", /*#__PURE__*/_jsxDEV(Loader, {\n                        stroke: \"white\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 54\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 27\n                    }, this) : approvalSubmitted && approvalState === ApprovalState.APPROVED ?\n                    /*i18n*/\n                    i18n._(\"Approved\") :\n                    /*i18n*/\n                    i18n._(\"Approve {0}\", {\n                      0: (_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                    onClick: function onClick() {\n                      if (isExpertMode) {\n                        handleSwap();\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined\n                        });\n                      }\n                    },\n                    width: \"100%\",\n                    id: \"swap-button\",\n                    disabled: !isValid || routeIsSyncing || routeIsLoading || approvalState !== ApprovalState.APPROVED || priceImpactTooHigh,\n                    error: isValid && priceImpactSeverity > 2,\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 16,\n                      fontWeight: 500,\n                      children: priceImpactTooHigh ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"High Price Impact\"\n                      }, void 0, false, void 0, this) : trade && priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap Anyway\"\n                      }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ButtonError, {\n                    onClick: function onClick() {\n                      if (isExpertMode) {\n                        handleSwap();\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined\n                        });\n                      }\n                    },\n                    id: \"swap-button\",\n                    disabled: !isValid || routeIsSyncing || routeIsLoading || priceImpactTooHigh || !!swapCallbackError,\n                    error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 20,\n                      fontWeight: 500,\n                      children: swapInputError ? swapInputError : routeIsSyncing || routeIsLoading ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap\"\n                      }, void 0, false, void 0, this) : priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap Anyway\"\n                      }, void 0, false, void 0, this) : priceImpactTooHigh ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Price Impact Too High\"\n                      }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this), \"route-fee: \", trade === null || trade === void 0 ? void 0 : trade.swaps.map(function (swap) {\n                    return swap.route.pools.map(function (pool) {\n                      return pool.fee;\n                    });\n                  })]\n                }, void 0, true), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n                  error: swapErrorMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 55\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SwapProAmm, \"BvCoZIgbW5aA7rsfaj2YibJENp8=\", false, function () {\n  return [useActiveWeb3React, useDefaultsFromURLSearch, useCurrency, useCurrency, useAllTokens, useTheme, useWalletModalToggle, useExpertModeManager, useSwapState, useProAmmDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useProAmmApproveCallback, useSwapCallback];\n});\n\n_c = SwapProAmm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapProAmm\");","map":{"version":3,"names":["JSBI","React","useCallback","useEffect","useMemo","useState","ArrowDown","Text","AddressInputPanel","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","GreyCard","AutoColumn","CurrencyInputPanel","Loader","AutoRow","RowBetween","TokenWarningModal","TransactionSettings","ConfirmSwapModal","confirmPriceImpactWithoutFee","ArrowWrapper","Container","PageWrapper","SwapCallbackError","SwapFormActions","Wrapper","useActiveWeb3React","useAllTokens","useCurrency","ApprovalState","useProAmmApproveCallback","useSwapCallback","useTheme","useWrapCallback","WrapType","AppBodyWrapped","useWalletModalToggle","TradeState","Field","useDefaultsFromURLSearch","useSwapActionHandlers","useSwapState","useProAmmDerivedSwapInfo","useExpertModeManager","LinkStyledButton","TYPE","basisPointsToPercent","maxAmountSpend","warningSeverity","SwapProAmm","history","account","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","isToken","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","theme","toggleWalletModal","isExpertMode","independentField","typedValue","recipient","trade","tradeState","state","allowedSlippage","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","parsedAmounts","inputAmount","outputAmount","swaps","LOADING","SYNCING","routeNotFound","routeIsLoading","routeIsSyncing","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","handleDismissTokenWarning","push","showConfirm","tradeToConfirm","undefined","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","userHasSpecifiedInputOutput","greaterThan","BigInt","approvalState","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxInputAmount","showMaxButton","equalTo","swapCallback","callback","swapCallbackError","error","priceImpact","handleSwap","then","hash","catch","message","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","priceImpactTooHigh","length","display","text","text3","padding","text2","WRAP","UNWRAP","textAlign","borderRadius","symbol","map","swap","route","pools","pool","fee"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/SwapProAmm/index.tsx"],"sourcesContent":["import { Currency, CurrencyAmount, Token, TradeType } from '@kyberswap/ks-sdk-core'\nimport { Trade } from '@kyberswap/ks-sdk-elastic'\nimport { Trans, t } from '@lingui/macro'\nimport JSBI from 'jsbi'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\n\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\nimport { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport Loader from 'components/Loader'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport TransactionSettings from 'components/TransactionSettings'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport {\n  ArrowWrapper,\n  Container,\n  PageWrapper,\n  SwapCallbackError,\n  SwapFormActions,\n  Wrapper,\n} from 'components/swapv2/styleds'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTokens, useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useProAmmApproveCallback } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useTheme from 'hooks/useTheme'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { AppBodyWrapped } from 'pages/SwapV2'\nimport { useWalletModalToggle } from 'state/application/hooks'\nimport { TradeState } from 'state/routing/types'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useProAmmDerivedSwapInfo } from 'state/swap/proamm/hooks'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { LinkStyledButton, TYPE } from 'theme'\nimport { basisPointsToPercent } from 'utils'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { warningSeverity } from 'utils/prices'\n\nexport default function SwapProAmm({ history }: RouteComponentProps) {\n  const { account } = useActiveWeb3React()\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c?.isToken ?? false) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault = useMemo(\n    () =>\n      urlLoadedTokens &&\n      urlLoadedTokens.filter((token: Token) => {\n        return !Boolean(token.address in defaultTokens)\n      }),\n    [defaultTokens, urlLoadedTokens],\n  )\n\n  const theme = useTheme()\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    trade: { state: tradeState, trade },\n    allowedSlippage,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n  } = useProAmmDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const parsedAmounts = useMemo(\n    () =>\n      showWrap\n        ? {\n            [Field.INPUT]: parsedAmount,\n            [Field.OUTPUT]: parsedAmount,\n          }\n        : {\n            [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n            [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n          },\n    [independentField, parsedAmount, showWrap, trade],\n  )\n  const [routeNotFound, routeIsLoading, routeIsSyncing] = useMemo(\n    () => [!trade?.swaps, TradeState.LOADING === tradeState, TradeState.SYNCING === tradeState],\n    [trade, tradeState],\n  )\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n    history.push('/elastic/swap/')\n  }, [history])\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]: typedValue,\n      [dependentField]: showWrap\n        ? parsedAmounts[independentField]?.toExact() ?? ''\n        : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n    }),\n    [dependentField, independentField, parsedAmounts, showWrap, typedValue],\n  )\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const [approvalState, approveCallback] = useProAmmApproveCallback(trade, basisPointsToPercent(allowedSlippage))\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approvalState, approvalSubmitted])\n  \n  const maxInputAmount: CurrencyAmount<Currency> | undefined = useMemo(\n    () => maxAmountSpend(currencyBalances[Field.INPUT]),\n    [currencyBalances],\n  )\n  const showMaxButton = Boolean(maxInputAmount?.greaterThan(0) && !parsedAmounts[Field.INPUT]?.equalTo(maxInputAmount))\n  // the callback to execute the swap\n\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n  const priceImpact = trade && trade.priceImpact\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return\n    }\n    if (priceImpact && !confirmPriceImpactWithoutFee(priceImpact)) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [swapCallback, priceImpact, tradeToConfirm, showConfirm])\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpact)\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency: Currency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact())\n  }, [maxInputAmount, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency: Currency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection],\n  )\n\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n        onDismiss={handleDismissTokenWarning}\n      />\n      <PageWrapper>\n        <Container>\n          <AppBodyWrapped>\n            <RowBetween mb={'16px'}>\n              <SwapFormActions>\n                <TransactionSettings isShowDisplaySettings />\n              </SwapFormActions>\n            </RowBetween>\n            <Wrapper id=\"swap-page\">\n              <ConfirmSwapModal\n                isOpen={showConfirm}\n                trade={trade}\n                originalTrade={tradeToConfirm}\n                onAcceptChanges={handleAcceptChanges}\n                attemptingTxn={attemptingTxn}\n                txHash={txHash}\n                recipient={recipient}\n                allowedSlippage={allowedSlippage}\n                onConfirm={handleSwap}\n                swapErrorMessage={swapErrorMessage}\n                onDismiss={handleConfirmDismiss}\n                // tokenAddtoMetaMask={currencies[Field.OUTPUT] ? (currencies[Field.OUTPUT] as Currency) : undefined}\n              />\n              <AutoColumn gap={'sm'}>\n                <div style={{ display: 'relative' }}>\n                  <CurrencyInputPanel\n                    label={independentField === Field.OUTPUT && !showWrap ? `From (at most)` : `From`}\n                    value={formattedAmounts[Field.INPUT]}\n                    showMaxButton={showMaxButton}\n                    currency={currencies[Field.INPUT]}\n                    onUserInput={handleTypeInput}\n                    onMax={handleMaxInput}\n                    onCurrencySelect={handleInputSelect}\n                    otherCurrency={currencies[Field.OUTPUT]}\n                    showCommonBases={true}\n                    id=\"swap-currency-input\"\n                  />\n                  <ArrowWrapper>\n                    <ArrowDown\n                      size=\"16\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.text : theme.text3}\n                    />\n                  </ArrowWrapper>\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.OUTPUT]}\n                    onUserInput={handleTypeOutput}\n                    label={independentField === Field.INPUT && !showWrap ? `To (at least)` : `To`}\n                    showMaxButton={false}\n                    hideBalance={false}\n                    currency={currencies[Field.OUTPUT]}\n                    onCurrencySelect={handleOutputSelect}\n                    otherCurrency={currencies[Field.INPUT]}\n                    showCommonBases={true}\n                    id=\"swap-currency-output\"\n                  />\n                </div>\n                {recipient !== null && !showWrap ? (\n                  <>\n                    <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                      <ArrowWrapper>\n                        <ArrowDown size=\"16\" color={theme.text2} />\n                      </ArrowWrapper>\n                      <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                        <Trans>- Remove recipient</Trans>\n                      </LinkStyledButton>\n                    </AutoRow>\n                    <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                  </>\n                ) : null}\n                <div>\n                  {!account ? (\n                    <ButtonLight onClick={toggleWalletModal}>\n                      <Trans>Connect Wallet</Trans>\n                    </ButtonLight>\n                  ) : showWrap ? (\n                    <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                      {wrapInputError ??\n                        (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                    </ButtonPrimary>\n                  ) : routeNotFound && userHasSpecifiedInputOutput && !routeIsLoading && !routeIsSyncing ? (\n                    <GreyCard style={{ textAlign: 'center', borderRadius: '5.5px' }}>\n                      <TYPE.main mb=\"4px\">\n                        <Trans>Insufficient liquidity for this trade2.</Trans>\n                      </TYPE.main>\n                    </GreyCard>\n                  ) : showApproveFlow ? (\n                    <RowBetween>\n                      <ButtonConfirmed\n                        onClick={approveCallback}\n                        disabled={approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                        width=\"48%\"\n                        altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                        confirmed={approvalState === ApprovalState.APPROVED}\n                      >\n                        {approvalState === ApprovalState.PENDING ? (\n                          <AutoRow gap=\"6px\" justify=\"center\">\n                            <Trans>Approving</Trans> <Loader stroke=\"white\" />\n                          </AutoRow>\n                        ) : approvalSubmitted && approvalState === ApprovalState.APPROVED ? (\n                          t`Approved`\n                        ) : (\n                          t`Approve ${currencies[Field.INPUT]?.symbol}`\n                        )}\n                      </ButtonConfirmed>\n                      <ButtonError\n                        onClick={() => {\n                          if (isExpertMode) {\n                            handleSwap()\n                          } else {\n                            setSwapState({\n                              tradeToConfirm: trade,\n                              attemptingTxn: false,\n                              swapErrorMessage: undefined,\n                              showConfirm: true,\n                              txHash: undefined,\n                            })\n                          }\n                        }}\n                        width=\"100%\"\n                        id=\"swap-button\"\n                        disabled={\n                          !isValid ||\n                          routeIsSyncing ||\n                          routeIsLoading ||\n                          approvalState !== ApprovalState.APPROVED ||\n                          priceImpactTooHigh\n                        }\n                        error={isValid && priceImpactSeverity > 2}\n                      >\n                        <Text fontSize={16} fontWeight={500}>\n                          {priceImpactTooHigh ? (\n                            <Trans>High Price Impact</Trans>\n                          ) : trade && priceImpactSeverity > 2 ? (\n                            <Trans>Swap Anyway</Trans>\n                          ) : (\n                            <Trans>Swap</Trans>\n                          )}\n                        </Text>\n                      </ButtonError>\n                    </RowBetween>\n                  ) : (\n                    <>\n                      <ButtonError\n                        onClick={() => {\n                          if (isExpertMode) {\n                            handleSwap()\n                          } else {\n                            setSwapState({\n                              tradeToConfirm: trade,\n                              attemptingTxn: false,\n                              swapErrorMessage: undefined,\n                              showConfirm: true,\n                              txHash: undefined,\n                            })\n                          }\n                        }}\n                        id=\"swap-button\"\n                        disabled={\n                          !isValid || routeIsSyncing || routeIsLoading || priceImpactTooHigh || !!swapCallbackError\n                        }\n                        error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n                      >\n                        <Text fontSize={20} fontWeight={500}>\n                          {swapInputError ? (\n                            swapInputError\n                          ) : routeIsSyncing || routeIsLoading ? (\n                            <Trans>Swap</Trans>\n                          ) : priceImpactSeverity > 2 ? (\n                            <Trans>Swap Anyway</Trans>\n                          ) : priceImpactTooHigh ? (\n                            <Trans>Price Impact Too High</Trans>\n                          ) : (\n                            <Trans>Swap</Trans>\n                          )}\n                        </Text>\n                      </ButtonError>\n                      route-fee: {trade?.swaps.map(swap => swap.route.pools.map(pool => pool.fee))}\n                    </>\n                  )}\n                  {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n                </div>\n              </AutoColumn>\n            </Wrapper>\n          </AppBodyWrapped>\n        </Container>\n      </PageWrapper>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}