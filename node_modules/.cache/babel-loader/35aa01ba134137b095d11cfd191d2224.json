{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/LiveChart/ProChartToggle.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport useTheme from 'hooks/useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ToggleButton = styled.span.withConfig({\n  displayName: \"ProChartToggle__ToggleButton\",\n  componentId: \"sc-8pz8g7-0\"\n})([\"position:absolute;transition:all 0.2s ease;background-color:\", \";\", \" border-radius:\", \";height:100%;top:0;\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.tabActive;\n}, function (_ref2) {\n  var _element$offsetLeft;\n\n  var element = _ref2.element;\n  return \"\\n    transform: translateX(\".concat((_element$offsetLeft = element === null || element === void 0 ? void 0 : element.offsetLeft) !== null && _element$offsetLeft !== void 0 ? _element$offsetLeft : 55, \"px);\\n    width: \").concat((element === null || element === void 0 ? void 0 : element.offsetWidth) || 44, \"px;\\n  \");\n}, function (_ref3) {\n  var size = _ref3.size;\n  return size === 'md' ? '16px' : '12px';\n});\n_c = ToggleButton;\nvar ToggleElement = styled.span.withConfig({\n  displayName: \"ProChartToggle__ToggleElement\",\n  componentId: \"sc-8pz8g7-1\"\n})([\"font-size:\", \";font-weight:500;height:\", \";padding:6px 12px;display:flex;align-items:center;justify-content:center;z-index:1;transition:all 0.2s ease;color:\", \";cursor:\", \";\"], function (_ref4) {\n  var size = _ref4.size;\n  return size === 'md' ? '16px' : '12px';\n}, function (_ref5) {\n  var size = _ref5.size,\n      border = _ref5.border;\n  return (size === 'md' ? 32 : 20) + (border ? 0 : 2) + 'px';\n}, function (_ref6) {\n  var theme = _ref6.theme,\n      isActive = _ref6.isActive,\n      disabled = _ref6.disabled;\n  return isActive ? theme.text : disabled ? theme.buttonGray : theme.subText;\n}, function (_ref7) {\n  var disabled = _ref7.disabled;\n  return disabled ? 'inherit' : 'pointer';\n});\n_c2 = ToggleElement;\nvar ToggleWrapper = styled.button.withConfig({\n  displayName: \"ProChartToggle__ToggleWrapper\",\n  componentId: \"sc-8pz8g7-2\"\n})([\"position:relative;border-radius:\", \";border:\", \";background:\", \";display:flex;width:fit-content;outline:none;padding:0;\"], function (_ref8) {\n  var size = _ref8.size;\n  return size === 'md' ? '18px' : '12px';\n}, function (_ref9) {\n  var background = _ref9.background,\n      border = _ref9.border;\n  return border ? \"2px solid \".concat(background) : 'none';\n}, function (_ref10) {\n  var background = _ref10.background;\n  return background;\n});\n_c3 = ToggleWrapper;\nexport default function ProChartToggle(_ref11) {\n  _s();\n\n  var _this = this;\n\n  var id = _ref11.id,\n      _ref11$activeName = _ref11.activeName,\n      activeName = _ref11$activeName === void 0 ? 'pro' : _ref11$activeName,\n      _ref11$buttons = _ref11.buttons,\n      buttons = _ref11$buttons === void 0 ? [{\n    name: 'basic',\n    title: 'Basic'\n  }, {\n    name: 'pro',\n    title: 'Pro'\n  }] : _ref11$buttons,\n      toggle = _ref11.toggle,\n      _ref11$size = _ref11.size,\n      size = _ref11$size === void 0 ? 'sm' : _ref11$size,\n      _ref11$border = _ref11.border,\n      border = _ref11$border === void 0 ? false : _ref11$border;\n  var buttonsRef = useRef({});\n  var theme = useTheme();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeElement = _useState2[0],\n      setActiveElement = _useState2[1];\n\n  useEffect(function () {\n    setActiveElement(buttonsRef.current[activeName]);\n  }, [activeName]);\n  return /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n    id: id,\n    size: size,\n    border: border,\n    background: \"\".concat(theme.tabBackgound).concat(buttons.some(function (b) {\n      return b.disabled;\n    }) ? '20' : ''),\n    children: [buttons.map(function (button) {\n      return /*#__PURE__*/_jsxDEV(ToggleElement, {\n        ref: function ref(el) {\n          buttonsRef.current[button.name] = el;\n        },\n        isActive: activeName === button.name,\n        size: size,\n        border: border,\n        disabled: button.disabled,\n        onClick: function onClick() {\n          !button.disabled && toggle(button.name);\n        },\n        children: button.title\n      }, button.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      element: activeElement,\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProChartToggle, \"V8d3iDj4b0lmooKSMVTsmgtBpyM=\", false, function () {\n  return [useTheme];\n});\n\n_c4 = ProChartToggle;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ToggleButton\");\n$RefreshReg$(_c2, \"ToggleElement\");\n$RefreshReg$(_c3, \"ToggleWrapper\");\n$RefreshReg$(_c4, \"ProChartToggle\");","map":{"version":3,"names":["useEffect","useRef","useState","styled","useTheme","ToggleButton","span","theme","tabActive","element","offsetLeft","offsetWidth","size","ToggleElement","border","isActive","disabled","text","buttonGray","subText","ToggleWrapper","button","background","ProChartToggle","id","activeName","buttons","name","title","toggle","buttonsRef","activeElement","setActiveElement","current","tabBackgound","some","b","map","el"],"sources":["/Applications/XAMPP/voxel-interface/src/components/LiveChart/ProChartToggle.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport useTheme from 'hooks/useTheme'\n\nconst ToggleButton = styled.span<{ size?: string; element?: HTMLSpanElement }>`\n  position: absolute;\n  transition: all 0.2s ease;\n  background-color: ${({ theme }) => theme.tabActive};\n  ${({ element }) => `\n    transform: translateX(${element?.offsetLeft ?? 55}px);\n    width: ${element?.offsetWidth || 44}px;\n  `}\n  border-radius: ${({ size }) => (size === 'md' ? '16px' : '12px')};\n  height: 100%;\n\n  top: 0;\n`\n\nconst ToggleElement = styled.span<{\n  isActive?: boolean\n  size?: string\n  border?: boolean\n  disabled?: boolean\n}>`\n  font-size: ${({ size }) => (size === 'md' ? '16px' : '12px')};\n  font-weight: 500;\n  height: ${({ size, border }) => (size === 'md' ? 32 : 20) + (border ? 0 : 2) + 'px'};\n  padding: 6px 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 1;\n  transition: all 0.2s ease;\n  color: ${({ theme, isActive, disabled }) => (isActive ? theme.text : disabled ? theme.buttonGray : theme.subText)};\n  cursor: ${({ disabled }) => (disabled ? 'inherit' : 'pointer')};\n`\n\nconst ToggleWrapper = styled.button<{ size?: string; border?: boolean; background?: string }>`\n  position: relative;\n  border-radius: ${({ size }) => (size === 'md' ? '18px' : '12px')};\n  border: ${({ background, border }) => (border ? `2px solid ${background}` : 'none')};\n  background: ${({ background }) => background};\n  display: flex;\n  width: fit-content;\n  outline: none;\n  padding: 0;\n`\n\nexport interface IToggleButton {\n  name: string\n  title: string\n  disabled?: boolean\n}\nexport interface ProChartToggleProps {\n  id?: string\n  activeName?: string\n  buttons?: IToggleButton[]\n  toggle: (name: string) => void\n  size?: 'sm' | 'md'\n  border?: boolean\n}\n\nexport default function ProChartToggle({\n  id,\n  activeName = 'pro',\n  buttons = [\n    { name: 'basic', title: 'Basic' },\n    { name: 'pro', title: 'Pro' },\n  ],\n  toggle,\n  size = 'sm',\n  border = false,\n}: ProChartToggleProps) {\n  const buttonsRef = useRef<any>({})\n  const theme = useTheme()\n  const [activeElement, setActiveElement] = useState()\n\n  useEffect(() => {\n    setActiveElement(buttonsRef.current[activeName])\n  }, [activeName])\n\n  return (\n    <ToggleWrapper\n      id={id}\n      size={size}\n      border={border}\n      background={`${theme.tabBackgound}${buttons.some((b: any) => b.disabled) ? '20' : ''}`}\n    >\n      {buttons.map(button => {\n        return (\n          <ToggleElement\n            key={button.name}\n            ref={el => {\n              buttonsRef.current[button.name] = el\n            }}\n            isActive={activeName === button.name}\n            size={size}\n            border={border}\n            disabled={button.disabled}\n            onClick={() => {\n              !button.disabled && toggle(button.name)\n            }}\n          >\n            {button.title}\n          </ToggleElement>\n        )\n      })}\n      <ToggleButton element={activeElement} size={size} />\n    </ToggleWrapper>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}