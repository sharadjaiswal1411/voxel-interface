{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getAddress } from '@ethersproject/address';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { ChainId, Percent, Token, WETH } from '@kyberswap/ks-sdk-core';\nimport dayjs from 'dayjs';\nimport JSBI from 'jsbi';\nimport Numeral from 'numeral';\nimport { GET_BLOCK, GET_BLOCKS } from 'apollo/queries';\nimport ZAP_STATIC_FEE_ABI from 'constants/abis/zap-static-fee.json';\nimport { DEFAULT_GAS_LIMIT_MARGIN, KNC, KNCL_ADDRESS, KNCL_ADDRESS_ROPSTEN, ROPSTEN_TOKEN_LOGOS_MAPPING, ZERO_ADDRESS } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport store from 'state';\nimport CLAIM_REWARD_ABI from '../constants/abis/claim-reward.json';\nimport ROUTER_DYNAMIC_FEE_ABI from '../constants/abis/dmm-router-dynamic-fee.json';\nimport ROUTER_STATIC_FEE_ABI from '../constants/abis/dmm-router-static-fee.json';\nimport KS_ROUTER_STATIC_FEE_ABI from '../constants/abis/ks-router-static-fee.json';\nimport ROUTER_PRO_AMM from '../constants/abis/v2/ProAmmRouter.json';\nimport ZAP_ABI from '../constants/abis/zap.json';\nimport { getAuroraTokenLogoURL } from './auroraTokenMapping';\nimport { getAvaxMainnetTokenLogoURL } from './avaxMainnetTokenMapping';\nimport { getAvaxTestnetTokenLogoURL } from './avaxTestnetTokenMapping';\nimport { getBscMainnetTokenLogoURL } from './bscMainnetTokenMapping';\nimport { getBscTestnetTokenLogoURL } from './bscTestnetTokenMapping';\nimport { getCronosTokenLogoURL } from './cronosTokenMapping';\nimport { getEthereumMainnetTokenLogoURL } from './ethereumMainnetTokenMapping';\nimport { getFantomTokenLogoURL } from './fantomTokenMapping';\nimport { getMaticTokenLogoURL } from './maticTokenMapping';\nimport { getMumbaiTokenLogoURL } from './mumbaiTokenMapping'; // returns the checksummed address if the address is valid, otherwise returns false\n\nexport function isAddress(value) {\n  try {\n    return getAddress(value);\n  } catch (_unused) {\n    return false;\n  }\n}\nexport function isAddressString(value) {\n  try {\n    return getAddress(value);\n  } catch (_unused2) {\n    return '';\n  }\n}\nexport function getEtherscanLink(chainId, data, type) {\n  var prefix = NETWORKS_INFO[chainId].etherscanUrl;\n\n  switch (type) {\n    case 'transaction':\n      {\n        return \"\".concat(prefix, \"/tx/\").concat(data);\n      }\n\n    case 'token':\n      {\n        return \"\".concat(prefix, \"/token/\").concat(data);\n      }\n\n    case 'block':\n      {\n        return \"\".concat(prefix, \"/block/\").concat(data);\n      }\n\n    case 'address':\n    default:\n      {\n        return \"\".concat(prefix, \"/address/\").concat(data);\n      }\n  }\n}\nexport function getEtherscanLinkText(chainId) {\n  return NETWORKS_INFO[chainId].etherscanName;\n} // shorten the checksummed version of the input address to have 0x + 4 characters at start and end\n\nexport function shortenAddress(address) {\n  var chars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var parsed = isAddress(address);\n\n  if (!parsed) {\n    throw Error(\"Invalid 'address' parameter '\".concat(address, \"'.\"));\n  }\n\n  return \"\".concat(parsed.substring(0, chars + 2), \"...\").concat(parsed.substring(42 - chars));\n}\n/**\n * Add a margin amount equal to max of 20000 or 20% of estimatedGas\n * total = estimate + max(20k, 20% * estimate)\n *\n * @param value BigNumber\n * @returns BigNumber\n */\n\nexport function calculateGasMargin(value) {\n  var defaultGasLimitMargin = BigNumber.from(DEFAULT_GAS_LIMIT_MARGIN);\n  var gasMargin = value.mul(BigNumber.from(2000)).div(BigNumber.from(10000));\n  return gasMargin.gte(defaultGasLimitMargin) ? value.add(gasMargin) : value.add(defaultGasLimitMargin);\n} // converts a basis points value to a sdk percent\n\nexport function basisPointsToPercent(num) {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000));\n}\nexport function calculateSlippageAmount(value, slippage) {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(\"Unexpected slippage value: \".concat(slippage));\n  }\n\n  return [JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)), JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))];\n} // account is not optional\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n} // account is optional\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n} // account is optional\n\nexport function getContract(address, ABI, library, account) {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(\"Invalid 'address' parameter '\".concat(address, \"'.\"));\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n} // account is optional\n\nexport function getContractForReading(address, ABI, library) {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(\"Invalid 'address' parameter '\".concat(address, \"'.\"));\n  }\n\n  return new Contract(address, ABI, library);\n} // account is optional\n\nexport function getOldStaticFeeRouterContract(chainId, library, account) {\n  var _NETWORKS_INFO$chainI, _NETWORKS_INFO$chainI2;\n\n  return getContract((_NETWORKS_INFO$chainI = (_NETWORKS_INFO$chainI2 = NETWORKS_INFO[chainId].classic.oldStatic) === null || _NETWORKS_INFO$chainI2 === void 0 ? void 0 : _NETWORKS_INFO$chainI2.router) !== null && _NETWORKS_INFO$chainI !== void 0 ? _NETWORKS_INFO$chainI : '', ROUTER_STATIC_FEE_ABI, library, account);\n} // account is optional\n\nexport function getStaticFeeRouterContract(chainId, library, account) {\n  return getContract(NETWORKS_INFO[chainId].classic.static.router, KS_ROUTER_STATIC_FEE_ABI, library, account);\n} // account is optional\n\nexport function getDynamicFeeRouterContract(chainId, library, account) {\n  var _NETWORKS_INFO$chainI3, _NETWORKS_INFO$chainI4;\n\n  return getContract((_NETWORKS_INFO$chainI3 = (_NETWORKS_INFO$chainI4 = NETWORKS_INFO[chainId].classic.dynamic) === null || _NETWORKS_INFO$chainI4 === void 0 ? void 0 : _NETWORKS_INFO$chainI4.router) !== null && _NETWORKS_INFO$chainI3 !== void 0 ? _NETWORKS_INFO$chainI3 : '', ROUTER_DYNAMIC_FEE_ABI, library, account);\n} // account is optional\n\nexport function getProAmmRouterContract(chainId, library, account) {\n  return getContract(NETWORKS_INFO[chainId].elastic.routers, ROUTER_PRO_AMM.abi, library, account);\n} // account is optional\n\nexport function getZapContract(chainId, library, account, isStaticFeeContract, isOldStaticFeeContract) {\n  var _NETWORKS_INFO$chainI5, _NETWORKS_INFO$chainI6;\n\n  return getContract(isStaticFeeContract ? isOldStaticFeeContract ? ((_NETWORKS_INFO$chainI5 = NETWORKS_INFO[chainId].classic.oldStatic) === null || _NETWORKS_INFO$chainI5 === void 0 ? void 0 : _NETWORKS_INFO$chainI5.zap) || '' : NETWORKS_INFO[chainId].classic.static.zap : ((_NETWORKS_INFO$chainI6 = NETWORKS_INFO[chainId].classic.dynamic) === null || _NETWORKS_INFO$chainI6 === void 0 ? void 0 : _NETWORKS_INFO$chainI6.zap) || '', isStaticFeeContract && !isOldStaticFeeContract ? ZAP_STATIC_FEE_ABI : ZAP_ABI, library, account);\n}\nexport function getClaimRewardContract(chainId, library, account) {\n  if (!NETWORKS_INFO[chainId].classic.claimReward) return;\n  return getContract(NETWORKS_INFO[chainId].classic.claimReward, CLAIM_REWARD_ABI, library, account);\n}\nexport function escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nexport function isTokenOnList(defaultTokens, currency) {\n  var _defaultTokens$curren;\n\n  if (currency !== null && currency !== void 0 && currency.isNative) return true;\n  return Boolean(currency instanceof Token && ((_defaultTokens$curren = defaultTokens[currency.chainId]) === null || _defaultTokens$curren === void 0 ? void 0 : _defaultTokens$curren[currency.address]));\n}\nexport var toK = function toK(num) {\n  return Numeral(num).format('0.[00]a');\n};\nexport var toKInChart = function toKInChart(num, unit) {\n  if (parseFloat(num) < 0.0000001) return \"< \".concat(unit !== null && unit !== void 0 ? unit : '', \"0.0000001\");\n  if (parseFloat(num) >= 0.1) return (unit !== null && unit !== void 0 ? unit : '') + Numeral(num).format('0.[00]a');\n  return (unit !== null && unit !== void 0 ? unit : '') + Numeral(num).format('0.[0000000]a');\n}; // using a currency library here in case we want to add more in future\n\nexport var formatDollarFractionAmount = function formatDollarFractionAmount(num, digits) {\n  var formatter = new Intl.NumberFormat(['en-US'], {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits\n  });\n  return formatter.format(num);\n};\nexport var formatDollarSignificantAmount = function formatDollarSignificantAmount(num, minDigits, maxDigits) {\n  var formatter = new Intl.NumberFormat(['en-US'], {\n    style: 'currency',\n    currency: 'USD',\n    minimumSignificantDigits: minDigits,\n    maximumSignificantDigits: maxDigits !== null && maxDigits !== void 0 ? maxDigits : minDigits\n  });\n  return formatter.format(num);\n};\nexport function formatNumberWithPrecisionRange(number) {\n  var minPrecision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var maxPrecision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision\n  };\n  return number.toLocaleString(undefined, options);\n}\nexport function formattedNum(number) {\n  var usd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n\n  if (number === '' || number === undefined) {\n    return usd ? '$0' : 0;\n  }\n\n  var num = parseFloat(number);\n\n  if (num > 500000000) {\n    return (usd ? '$' : '') + toK(num.toFixed(0));\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0';\n    }\n\n    return 0;\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001';\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarFractionAmount(num, 0) : Number(num.toFixed(0)).toLocaleString();\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return formatDollarFractionAmount(num, 4);\n    } else {\n      return formatDollarFractionAmount(num, 2);\n    }\n  }\n\n  return Number(num.toFixed(fractionDigits)).toLocaleString();\n}\nexport function formattedNumLong(num) {\n  var usd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (num === 0) {\n    if (usd) {\n      return '$0';\n    }\n\n    return '0';\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarFractionAmount(num, 0) : Number(num.toFixed(0)).toLocaleString();\n  }\n\n  if (usd) return formatDollarSignificantAmount(num, 1, 4);\n  return Number(num.toFixed(5)).toLocaleString();\n}\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\n\nexport var getPercentChange = function getPercentChange(valueNow, value24HoursAgo) {\n  var adjustedPercentChange = (parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo) * 100;\n\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return 0;\n  }\n\n  return adjustedPercentChange;\n};\nexport function getTimestampsForChanges() {\n  var utcCurrentTime = dayjs();\n  var t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix();\n  var t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix();\n  var tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix();\n  return [t1, t2, tWeek];\n}\nexport function splitQuery(_x, _x2, _x3, _x4) {\n  return _splitQuery.apply(this, arguments);\n}\n/**\n * @notice Fetches first block after a given timestamp\n * @dev Query speed is optimized by limiting to a 600-second period\n * @param {Int} timestamp in seconds\n */\n\nfunction _splitQuery() {\n  _splitQuery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(query, localClient, vars, list) {\n    var skipCount,\n        fetchedData,\n        allFound,\n        skip,\n        end,\n        sliced,\n        result,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            skipCount = _args.length > 4 && _args[4] !== undefined ? _args[4] : 100;\n            fetchedData = {};\n            allFound = false;\n            skip = 0;\n\n          case 4:\n            if (allFound) {\n              _context.next = 15;\n              break;\n            }\n\n            end = list.length;\n\n            if (skip + skipCount < list.length) {\n              end = skip + skipCount;\n            }\n\n            sliced = list.slice(skip, end);\n            _context.next = 10;\n            return localClient.query({\n              query: query.apply(void 0, _toConsumableArray(vars).concat([sliced])),\n              fetchPolicy: 'no-cache'\n            });\n\n          case 10:\n            result = _context.sent;\n            fetchedData = _objectSpread(_objectSpread({}, fetchedData), result.data);\n\n            if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\n              allFound = true;\n            } else {\n              skip += skipCount;\n            }\n\n            _context.next = 4;\n            break;\n\n          case 15:\n            return _context.abrupt(\"return\", fetchedData);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _splitQuery.apply(this, arguments);\n}\n\nexport function getBlockFromTimestamp(_x5, _x6) {\n  return _getBlockFromTimestamp.apply(this, arguments);\n}\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\n\nfunction _getBlockFromTimestamp() {\n  _getBlockFromTimestamp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(timestamp, chainId) {\n    var _result$data, _result$data$blocks, _result$data$blocks$;\n\n    var result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return NETWORKS_INFO[chainId || ChainId.MAINNET].blockClient.query({\n              query: GET_BLOCK,\n              variables: {\n                timestampFrom: timestamp,\n                timestampTo: timestamp + 600\n              },\n              fetchPolicy: 'cache-first'\n            });\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$blocks = _result$data.blocks) === null || _result$data$blocks === void 0 ? void 0 : (_result$data$blocks$ = _result$data$blocks[0]) === null || _result$data$blocks$ === void 0 ? void 0 : _result$data$blocks$.number);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getBlockFromTimestamp.apply(this, arguments);\n}\n\nexport function getBlocksFromTimestamps(_x7, _x8) {\n  return _getBlocksFromTimestamps.apply(this, arguments);\n}\n/**\n * gets the amount difference in 24h\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\n\nfunction _getBlocksFromTimestamps() {\n  _getBlocksFromTimestamps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(timestamps, chainId) {\n    var skipCount,\n        fetchedData,\n        blocks,\n        t,\n        _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            skipCount = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 500;\n\n            if (!((timestamps === null || timestamps === void 0 ? void 0 : timestamps.length) === 0)) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", []);\n\n          case 3:\n            _context3.next = 5;\n            return splitQuery(GET_BLOCKS, NETWORKS_INFO[chainId || ChainId.MAINNET].blockClient, [], timestamps, skipCount);\n\n          case 5:\n            fetchedData = _context3.sent;\n            blocks = [];\n\n            if (fetchedData) {\n              for (t in fetchedData) {\n                if (fetchedData[t].length > 0) {\n                  blocks.push({\n                    timestamp: t.split('t')[1],\n                    number: fetchedData[t][0]['number']\n                  });\n                }\n              }\n            }\n\n            return _context3.abrupt(\"return\", blocks);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getBlocksFromTimestamps.apply(this, arguments);\n}\n\nexport var get24hValue = function get24hValue(valueNow, value24HoursAgo) {\n  if (value24HoursAgo === undefined) {\n    return 0;\n  } // get volume info for both 24 hour periods\n\n\n  var currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo);\n  return currentChange;\n};\nexport var getRopstenTokenLogoURL = function getRopstenTokenLogoURL(address) {\n  if (address.toLowerCase() === KNCL_ADDRESS_ROPSTEN.toLowerCase()) {\n    return 'https://raw.githubusercontent.com/KyberNetwork/kyberswap-interface/develop/src/assets/images/KNCL.png';\n  }\n\n  if (ROPSTEN_TOKEN_LOGOS_MAPPING[address.toLowerCase()]) {\n    address = ROPSTEN_TOKEN_LOGOS_MAPPING[address.toLowerCase()];\n  }\n\n  return \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\".concat(isAddress(address), \"/logo.png\");\n};\nexport var getTokenLogoURL = function getTokenLogoURL(inputAddress, chainId) {\n  var _store$getState$lists, _store$getState$lists2;\n\n  var address = inputAddress;\n\n  if (address === ZERO_ADDRESS && chainId) {\n    address = WETH[chainId].address;\n  }\n\n  if (chainId !== ChainId.ETHW) {\n    if (address.toLowerCase() === KNC[chainId].address.toLowerCase()) {\n      return 'https://raw.githubusercontent.com/KyberNetwork/kyberswap-interface/develop/src/assets/images/KNC.svg';\n    }\n\n    if (address.toLowerCase() === KNCL_ADDRESS.toLowerCase()) {\n      return 'https://raw.githubusercontent.com/KyberNetwork/kyberswap-interface/develop/src/assets/images/KNCL.png';\n    } // WBTC\n\n\n    if (address.toLowerCase() === '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f') {\n      return 'https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png?1548822744';\n    }\n  }\n\n  var imageURL;\n  imageURL = (_store$getState$lists = store.getState().lists.byUrl[NETWORKS_INFO[chainId || ChainId.MAINNET].tokenListUrl].current) === null || _store$getState$lists === void 0 ? void 0 : (_store$getState$lists2 = _store$getState$lists.tokens.find(function (item) {\n    return item.address.toLowerCase() === address.toLowerCase();\n  })) === null || _store$getState$lists2 === void 0 ? void 0 : _store$getState$lists2.logoURI;\n  if (imageURL) return imageURL;\n\n  switch (chainId) {\n    //todo namgold: merge these adhoc func to tokenllist\n    case ChainId.MAINNET:\n      imageURL = getEthereumMainnetTokenLogoURL(address);\n      break;\n\n    case ChainId.ROPSTEN:\n      imageURL = getRopstenTokenLogoURL(address);\n      break;\n\n    case ChainId.MATIC:\n      imageURL = getMaticTokenLogoURL(address);\n      break;\n\n    case ChainId.MUMBAI:\n      imageURL = getMumbaiTokenLogoURL(address);\n      break;\n\n    case ChainId.BSCTESTNET:\n      imageURL = getBscTestnetTokenLogoURL(address);\n      break;\n\n    case ChainId.BSCMAINNET:\n      imageURL = getBscMainnetTokenLogoURL(address);\n      break;\n\n    case ChainId.AVAXTESTNET:\n      imageURL = getAvaxTestnetTokenLogoURL(address);\n      break;\n\n    case ChainId.AVAXMAINNET:\n      imageURL = getAvaxMainnetTokenLogoURL(address);\n      break;\n\n    case ChainId.FANTOM:\n      imageURL = getFantomTokenLogoURL(address);\n      break;\n\n    case ChainId.CRONOS:\n      imageURL = getCronosTokenLogoURL(address);\n      break;\n\n    case ChainId.AURORA:\n      imageURL = getAuroraTokenLogoURL(address);\n      break;\n\n    case ChainId.ARBITRUM:\n      imageURL = \"https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/arbitrum/assets/\".concat(address, \"/logo.png\");\n      break;\n\n    case ChainId.ETHW:\n      {\n        imageURL = '';\n        break;\n      }\n\n    default:\n      imageURL = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\".concat(isAddress(address), \"/logo.png\");\n      break;\n  }\n\n  return imageURL;\n};\nexport var getTokenSymbol = function getTokenSymbol(token, chainId) {\n  if (chainId && token.address.toLowerCase() === WETH[chainId].address.toLowerCase()) {\n    return NETWORKS_INFO[chainId].nativeToken.symbol;\n  }\n\n  return token.symbol || 'ETH';\n};\nexport var nativeNameFromETH = function nativeNameFromETH(chainId) {\n  if (!chainId) return 'ETH';\n  return NETWORKS_INFO[chainId].nativeToken.symbol;\n}; // push unique\n// return original instance if no change\n\nexport var pushUnique = function pushUnique(array, element) {\n  if (!array) return [element];\n  var set = new Set(array);\n  if (set.has(element)) return array;\n  return [].concat(_toConsumableArray(array), [element]);\n}; // delete unique\n// return original instance if no change\n\nexport var deleteUnique = function deleteUnique(array, element) {\n  if (!array) return [];\n  var set = new Set(array);\n\n  if (set.has(element)) {\n    set.delete(element);\n    return _toConsumableArray(set);\n  }\n\n  return array;\n};\nexport var filterTruthy = function filterTruthy(array) {\n  return array.filter(Boolean);\n};","map":{"version":3,"names":["getAddress","BigNumber","AddressZero","Contract","ChainId","Percent","Token","WETH","dayjs","JSBI","Numeral","GET_BLOCK","GET_BLOCKS","ZAP_STATIC_FEE_ABI","DEFAULT_GAS_LIMIT_MARGIN","KNC","KNCL_ADDRESS","KNCL_ADDRESS_ROPSTEN","ROPSTEN_TOKEN_LOGOS_MAPPING","ZERO_ADDRESS","NETWORKS_INFO","store","CLAIM_REWARD_ABI","ROUTER_DYNAMIC_FEE_ABI","ROUTER_STATIC_FEE_ABI","KS_ROUTER_STATIC_FEE_ABI","ROUTER_PRO_AMM","ZAP_ABI","getAuroraTokenLogoURL","getAvaxMainnetTokenLogoURL","getAvaxTestnetTokenLogoURL","getBscMainnetTokenLogoURL","getBscTestnetTokenLogoURL","getCronosTokenLogoURL","getEthereumMainnetTokenLogoURL","getFantomTokenLogoURL","getMaticTokenLogoURL","getMumbaiTokenLogoURL","isAddress","value","isAddressString","getEtherscanLink","chainId","data","type","prefix","etherscanUrl","getEtherscanLinkText","etherscanName","shortenAddress","address","chars","parsed","Error","substring","calculateGasMargin","defaultGasLimitMargin","from","gasMargin","mul","div","gte","add","basisPointsToPercent","num","BigInt","calculateSlippageAmount","slippage","divide","multiply","quotient","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","ABI","getContractForReading","getOldStaticFeeRouterContract","classic","oldStatic","router","getStaticFeeRouterContract","static","getDynamicFeeRouterContract","dynamic","getProAmmRouterContract","elastic","routers","abi","getZapContract","isStaticFeeContract","isOldStaticFeeContract","zap","getClaimRewardContract","claimReward","escapeRegExp","string","replace","isTokenOnList","defaultTokens","currency","isNative","Boolean","toK","format","toKInChart","unit","parseFloat","formatDollarFractionAmount","digits","formatter","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formatDollarSignificantAmount","minDigits","maxDigits","minimumSignificantDigits","maximumSignificantDigits","formatNumberWithPrecisionRange","number","minPrecision","maxPrecision","options","toLocaleString","undefined","formattedNum","usd","fractionDigits","toFixed","Number","formattedNumLong","getPercentChange","valueNow","value24HoursAgo","adjustedPercentChange","isNaN","isFinite","getTimestampsForChanges","utcCurrentTime","t1","subtract","startOf","unix","t2","tWeek","splitQuery","query","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","length","sliced","slice","fetchPolicy","result","Object","keys","getBlockFromTimestamp","timestamp","MAINNET","blockClient","variables","timestampFrom","timestampTo","blocks","getBlocksFromTimestamps","timestamps","t","push","split","get24hValue","currentChange","getRopstenTokenLogoURL","toLowerCase","getTokenLogoURL","inputAddress","ETHW","imageURL","getState","lists","byUrl","tokenListUrl","current","tokens","find","item","logoURI","ROPSTEN","MATIC","MUMBAI","BSCTESTNET","BSCMAINNET","AVAXTESTNET","AVAXMAINNET","FANTOM","CRONOS","AURORA","ARBITRUM","getTokenSymbol","token","nativeToken","symbol","nativeNameFromETH","pushUnique","array","element","set","Set","has","deleteUnique","delete","filterTruthy","filter"],"sources":["/Applications/XAMPP/voxel-interface/src/utils/index.ts"],"sourcesContent":["import { getAddress } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Contract } from '@ethersproject/contracts'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { ChainId, Currency, CurrencyAmount, Percent, Token, WETH } from '@kyberswap/ks-sdk-core'\nimport dayjs from 'dayjs'\nimport { ethers } from 'ethers'\nimport JSBI from 'jsbi'\nimport Numeral from 'numeral'\n\nimport { GET_BLOCK, GET_BLOCKS } from 'apollo/queries'\nimport ZAP_STATIC_FEE_ABI from 'constants/abis/zap-static-fee.json'\nimport {\n  DEFAULT_GAS_LIMIT_MARGIN,\n  KNC,\n  KNCL_ADDRESS,\n  KNCL_ADDRESS_ROPSTEN,\n  ROPSTEN_TOKEN_LOGOS_MAPPING,\n  ZERO_ADDRESS,\n} from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport store from 'state'\n\nimport CLAIM_REWARD_ABI from '../constants/abis/claim-reward.json'\nimport ROUTER_DYNAMIC_FEE_ABI from '../constants/abis/dmm-router-dynamic-fee.json'\nimport ROUTER_STATIC_FEE_ABI from '../constants/abis/dmm-router-static-fee.json'\nimport KS_ROUTER_STATIC_FEE_ABI from '../constants/abis/ks-router-static-fee.json'\nimport ROUTER_PRO_AMM from '../constants/abis/v2/ProAmmRouter.json'\nimport ZAP_ABI from '../constants/abis/zap.json'\nimport { TokenAddressMap } from '../state/lists/hooks'\nimport { getAuroraTokenLogoURL } from './auroraTokenMapping'\nimport { getAvaxMainnetTokenLogoURL } from './avaxMainnetTokenMapping'\nimport { getAvaxTestnetTokenLogoURL } from './avaxTestnetTokenMapping'\nimport { getBscMainnetTokenLogoURL } from './bscMainnetTokenMapping'\nimport { getBscTestnetTokenLogoURL } from './bscTestnetTokenMapping'\nimport { getCronosTokenLogoURL } from './cronosTokenMapping'\nimport { getEthereumMainnetTokenLogoURL } from './ethereumMainnetTokenMapping'\nimport { getFantomTokenLogoURL } from './fantomTokenMapping'\nimport { getMaticTokenLogoURL } from './maticTokenMapping'\nimport { getMumbaiTokenLogoURL } from './mumbaiTokenMapping'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function isAddressString(value: any): string {\n  try {\n    return getAddress(value)\n  } catch {\n    return ''\n  }\n}\n\nexport function getEtherscanLink(\n  chainId: ChainId,\n  data: string,\n  type: 'transaction' | 'token' | 'address' | 'block',\n): string {\n  const prefix = NETWORKS_INFO[chainId].etherscanUrl\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'block': {\n      return `${prefix}/block/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\nexport function getEtherscanLinkText(chainId: ChainId): string {\n  return NETWORKS_INFO[chainId].etherscanName\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n/**\n * Add a margin amount equal to max of 20000 or 20% of estimatedGas\n * total = estimate + max(20k, 20% * estimate)\n *\n * @param value BigNumber\n * @returns BigNumber\n */\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  const defaultGasLimitMargin = BigNumber.from(DEFAULT_GAS_LIMIT_MARGIN)\n  const gasMargin = value.mul(BigNumber.from(2000)).div(BigNumber.from(10000))\n\n  return gasMargin.gte(defaultGasLimitMargin) ? value.add(gasMargin) : value.add(defaultGasLimitMargin)\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.quotient, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n// account is optional\nexport function getContractForReading(address: string, ABI: any, library: ethers.providers.JsonRpcProvider): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, library)\n}\n\n// account is optional\nexport function getOldStaticFeeRouterContract(chainId: ChainId, library: Web3Provider, account?: string): Contract {\n  return getContract(NETWORKS_INFO[chainId].classic.oldStatic?.router ?? '', ROUTER_STATIC_FEE_ABI, library, account)\n}\n// account is optional\nexport function getStaticFeeRouterContract(chainId: ChainId, library: Web3Provider, account?: string): Contract {\n  return getContract(NETWORKS_INFO[chainId].classic.static.router, KS_ROUTER_STATIC_FEE_ABI, library, account)\n}\n// account is optional\nexport function getDynamicFeeRouterContract(chainId: ChainId, library: Web3Provider, account?: string): Contract {\n  return getContract(NETWORKS_INFO[chainId].classic.dynamic?.router ?? '', ROUTER_DYNAMIC_FEE_ABI, library, account)\n}\n\n// account is optional\nexport function getProAmmRouterContract(chainId: ChainId, library: Web3Provider, account?: string): Contract {\n  return getContract(NETWORKS_INFO[chainId].elastic.routers, ROUTER_PRO_AMM.abi, library, account)\n}\n\n// account is optional\nexport function getZapContract(\n  chainId: ChainId,\n  library: Web3Provider,\n  account?: string,\n  isStaticFeeContract?: boolean,\n  isOldStaticFeeContract?: boolean,\n): Contract {\n  return getContract(\n    isStaticFeeContract\n      ? isOldStaticFeeContract\n        ? NETWORKS_INFO[chainId].classic.oldStatic?.zap || ''\n        : NETWORKS_INFO[chainId].classic.static.zap\n      : NETWORKS_INFO[chainId].classic.dynamic?.zap || '',\n    isStaticFeeContract && !isOldStaticFeeContract ? ZAP_STATIC_FEE_ABI : ZAP_ABI,\n    library,\n    account,\n  )\n}\n\nexport function getClaimRewardContract(\n  chainId: ChainId,\n  library: Web3Provider,\n  account?: string,\n): Contract | undefined {\n  if (!NETWORKS_INFO[chainId].classic.claimReward) return\n  return getContract(NETWORKS_INFO[chainId].classic.claimReward, CLAIM_REWARD_ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency?.isNative) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n\nexport const toK = (num: string) => {\n  return Numeral(num).format('0.[00]a')\n}\n\nexport const toKInChart = (num: string, unit?: string) => {\n  if (parseFloat(num) < 0.0000001) return `< ${unit ?? ''}0.0000001`\n  if (parseFloat(num) >= 0.1) return (unit ?? '') + Numeral(num).format('0.[00]a')\n  return (unit ?? '') + Numeral(num).format('0.[0000000]a')\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarFractionAmount = (num: number, digits: number) => {\n  const formatter = new Intl.NumberFormat(['en-US'], {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits,\n  })\n  return formatter.format(num)\n}\n\nexport const formatDollarSignificantAmount = (num: number, minDigits: number, maxDigits?: number) => {\n  const formatter = new Intl.NumberFormat(['en-US'], {\n    style: 'currency',\n    currency: 'USD',\n    minimumSignificantDigits: minDigits,\n    maximumSignificantDigits: maxDigits ?? minDigits,\n  })\n  return formatter.format(num)\n}\n\nexport function formatNumberWithPrecisionRange(number: number, minPrecision = 2, maxPrecision = 2) {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\nexport function formattedNum(number: string, usd = false, fractionDigits = 5) {\n  if (number === '' || number === undefined) {\n    return usd ? '$0' : 0\n  }\n\n  const num = parseFloat(number)\n\n  if (num > 500000000) {\n    return (usd ? '$' : '') + toK(num.toFixed(0))\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0'\n    }\n    return 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarFractionAmount(num, 0) : Number(num.toFixed(0)).toLocaleString()\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return formatDollarFractionAmount(num, 4)\n    } else {\n      return formatDollarFractionAmount(num, 2)\n    }\n  }\n\n  return Number(num.toFixed(fractionDigits)).toLocaleString()\n}\n\nexport function formattedNumLong(num: number, usd = false) {\n  if (num === 0) {\n    if (usd) {\n      return '$0'\n    }\n    return '0'\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarFractionAmount(num, 0) : Number(num.toFixed(0)).toLocaleString()\n  }\n\n  if (usd) return formatDollarSignificantAmount(num, 1, 4)\n\n  return Number(num.toFixed(5)).toLocaleString()\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow: string, value24HoursAgo: string) => {\n  const adjustedPercentChange =\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return 0\n  }\n\n  return adjustedPercentChange\n}\n\nexport function getTimestampsForChanges(): [number, number, number] {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n\nexport async function splitQuery(query: any, localClient: any, vars: any, list: any, skipCount = 100): Promise<any> {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n\n  while (!allFound) {\n    let end = list.length\n    if (skip + skipCount < list.length) {\n      end = skip + skipCount\n    }\n    const sliced = list.slice(skip, end)\n    const result = await localClient.query({\n      query: query(...vars, sliced),\n      fetchPolicy: 'no-cache',\n    })\n    fetchedData = {\n      ...fetchedData,\n      ...result.data,\n    }\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\n      allFound = true\n    } else {\n      skip += skipCount\n    }\n  }\n\n  return fetchedData\n}\n\n/**\n * @notice Fetches first block after a given timestamp\n * @dev Query speed is optimized by limiting to a 600-second period\n * @param {Int} timestamp in seconds\n */\nexport async function getBlockFromTimestamp(timestamp: number, chainId?: ChainId) {\n  const result = await NETWORKS_INFO[chainId || ChainId.MAINNET].blockClient.query({\n    query: GET_BLOCK,\n    variables: {\n      timestampFrom: timestamp,\n      timestampTo: timestamp + 600,\n    },\n    fetchPolicy: 'cache-first',\n  })\n\n  return result?.data?.blocks?.[0]?.number\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(\n  timestamps: number[],\n  chainId?: ChainId,\n  skipCount = 500,\n): Promise<{ timestamp: string; number: number }[]> {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  const fetchedData = await splitQuery(\n    GET_BLOCKS,\n    NETWORKS_INFO[chainId || ChainId.MAINNET].blockClient,\n    [],\n    timestamps,\n    skipCount,\n  )\n  const blocks: { timestamp: string; number: number }[] = []\n  if (fetchedData) {\n    for (const t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n  return blocks\n}\n\n/**\n * gets the amount difference in 24h\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const get24hValue = (valueNow: string, value24HoursAgo: string | undefined): number => {\n  if (value24HoursAgo === undefined) {\n    return 0\n  }\n  // get volume info for both 24 hour periods\n  const currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n\n  return currentChange\n}\n\nexport const getRopstenTokenLogoURL = (address: string) => {\n  if (address.toLowerCase() === KNCL_ADDRESS_ROPSTEN.toLowerCase()) {\n    return 'https://raw.githubusercontent.com/KyberNetwork/kyberswap-interface/develop/src/assets/images/KNCL.png'\n  }\n\n  if (ROPSTEN_TOKEN_LOGOS_MAPPING[address.toLowerCase()]) {\n    address = ROPSTEN_TOKEN_LOGOS_MAPPING[address.toLowerCase()]\n  }\n\n  return `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\n    address,\n  )}/logo.png`\n}\n\nexport const getTokenLogoURL = (inputAddress: string, chainId?: ChainId): string => {\n  let address = inputAddress\n  if (address === ZERO_ADDRESS && chainId) {\n    address = WETH[chainId].address\n  }\n\n  if (chainId !== ChainId.ETHW) {\n    if (address.toLowerCase() === KNC[chainId as ChainId].address.toLowerCase()) {\n      return 'https://raw.githubusercontent.com/KyberNetwork/kyberswap-interface/develop/src/assets/images/KNC.svg'\n    }\n\n    if (address.toLowerCase() === KNCL_ADDRESS.toLowerCase()) {\n      return 'https://raw.githubusercontent.com/KyberNetwork/kyberswap-interface/develop/src/assets/images/KNCL.png'\n    }\n\n    // WBTC\n    if (address.toLowerCase() === '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f') {\n      return 'https://assets.coingecko.com/coins/images/7598/thumb/wrapped_bitcoin_wbtc.png?1548822744'\n    }\n  }\n\n  let imageURL\n\n  imageURL = store\n    .getState()\n    .lists.byUrl[NETWORKS_INFO[chainId || ChainId.MAINNET].tokenListUrl].current?.tokens.find(\n      item => item.address.toLowerCase() === address.toLowerCase(),\n    )?.logoURI\n\n  if (imageURL) return imageURL\n\n  switch (chainId) {\n    //todo namgold: merge these adhoc func to tokenllist\n    case ChainId.MAINNET:\n      imageURL = getEthereumMainnetTokenLogoURL(address)\n      break\n    case ChainId.ROPSTEN:\n      imageURL = getRopstenTokenLogoURL(address)\n      break\n    case ChainId.MATIC:\n      imageURL = getMaticTokenLogoURL(address)\n      break\n    case ChainId.MUMBAI:\n      imageURL = getMumbaiTokenLogoURL(address)\n      break\n    case ChainId.BSCTESTNET:\n      imageURL = getBscTestnetTokenLogoURL(address)\n      break\n    case ChainId.BSCMAINNET:\n      imageURL = getBscMainnetTokenLogoURL(address)\n      break\n    case ChainId.AVAXTESTNET:\n      imageURL = getAvaxTestnetTokenLogoURL(address)\n      break\n    case ChainId.AVAXMAINNET:\n      imageURL = getAvaxMainnetTokenLogoURL(address)\n      break\n    case ChainId.FANTOM:\n      imageURL = getFantomTokenLogoURL(address)\n      break\n    case ChainId.CRONOS:\n      imageURL = getCronosTokenLogoURL(address)\n      break\n    case ChainId.AURORA:\n      imageURL = getAuroraTokenLogoURL(address)\n      break\n    case ChainId.ARBITRUM:\n      imageURL = `https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/arbitrum/assets/${address}/logo.png`\n      break\n    case ChainId.ETHW: {\n      imageURL = ''\n      break\n    }\n    default:\n      imageURL = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\n        address,\n      )}/logo.png`\n      break\n  }\n\n  return imageURL\n}\n\nexport const getTokenSymbol = (token: Token, chainId?: ChainId): string => {\n  if (chainId && token.address.toLowerCase() === WETH[chainId as ChainId].address.toLowerCase()) {\n    return NETWORKS_INFO[chainId].nativeToken.symbol\n  }\n\n  return token.symbol || 'ETH'\n}\n\nexport const nativeNameFromETH = (chainId: ChainId | undefined) => {\n  if (!chainId) return 'ETH'\n  return NETWORKS_INFO[chainId].nativeToken.symbol\n}\n\n// push unique\n// return original instance if no change\nexport const pushUnique = <T>(array: T[] | undefined, element: T): T[] => {\n  if (!array) return [element]\n\n  const set = new Set<T>(array)\n\n  if (set.has(element)) return array\n  return [...array, element]\n}\n\n// delete unique\n// return original instance if no change\nexport const deleteUnique = <T>(array: T[] | undefined, element: T): T[] => {\n  if (!array) return []\n\n  const set = new Set<T>(array)\n\n  if (set.has(element)) {\n    set.delete(element)\n    return [...set]\n  }\n  return array\n}\n\nexport const filterTruthy = <T>(array: (T | undefined | null | false)[]): T[] => {\n  return array.filter(Boolean) as T[]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}