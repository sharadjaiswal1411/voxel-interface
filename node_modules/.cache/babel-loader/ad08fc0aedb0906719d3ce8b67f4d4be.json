{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport { getMessaging, getToken } from 'firebase/messaging';\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nvar vapidKey = process.env.REACT_APP_FIREBASE_VAPID_KEY;\nexport var fetchToken = function fetchToken() {\n  var firebaseApp = firebase.initializeApp(firebaseConfig);\n  var messaging = getMessaging(firebaseApp);\n  return getToken(messaging, {\n    vapidKey: vapidKey\n  }).then(function (currentToken) {\n    if (currentToken) {\n      return currentToken; // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      return ''; // shows on the UI that permission is required\n    }\n  }).catch(function (err) {\n    console.log(err); // catch error while creating client token\n\n    return '';\n  });\n};","map":{"version":3,"names":["firebase","getMessaging","getToken","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","vapidKey","REACT_APP_FIREBASE_VAPID_KEY","fetchToken","firebaseApp","initializeApp","messaging","then","currentToken","catch","err","console","log"],"sources":["/Applications/XAMPP/voxel-interface/src/utils/firebase.ts"],"sourcesContent":["import firebase from 'firebase/compat/app'\nimport { getMessaging, getToken } from 'firebase/messaging'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\nconst vapidKey = process.env.REACT_APP_FIREBASE_VAPID_KEY\n\nexport const fetchToken = () => {\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\n  const messaging = getMessaging(firebaseApp)\n  return getToken(messaging, {\n    vapidKey,\n  })\n    .then(currentToken => {\n      if (currentToken) {\n        return currentToken\n        // Track the token -> client mapping, by sending to backend server\n        // show on the UI that permission is secured\n      } else {\n        return ''\n        // shows on the UI that permission is required\n      }\n    })\n    .catch(err => {\n      console.log(err)\n      // catch error while creating client token\n      return ''\n    })\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,oBAAvC;AAEA,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADC;EAErBC,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFH;EAGrBC,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,6BAHF;EAIrBC,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,iCAJN;EAKrBC,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,sCALV;EAMrBC,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANE,CAAvB;AASA,IAAMC,QAAQ,GAAGb,OAAO,CAACC,GAAR,CAAYa,4BAA7B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EAC9B,IAAMC,WAAW,GAAGrB,QAAQ,CAACsB,aAAT,CAAuBnB,cAAvB,CAApB;EACA,IAAMoB,SAAS,GAAGtB,YAAY,CAACoB,WAAD,CAA9B;EACA,OAAOnB,QAAQ,CAACqB,SAAD,EAAY;IACzBL,QAAQ,EAARA;EADyB,CAAZ,CAAR,CAGJM,IAHI,CAGC,UAAAC,YAAY,EAAI;IACpB,IAAIA,YAAJ,EAAkB;MAChB,OAAOA,YAAP,CADgB,CAEhB;MACA;IACD,CAJD,MAIO;MACL,OAAO,EAAP,CADK,CAEL;IACD;EACF,CAZI,EAaJC,KAbI,CAaE,UAAAC,GAAG,EAAI;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADY,CAEZ;;IACA,OAAO,EAAP;EACD,CAjBI,CAAP;AAkBD,CArBM"},"metadata":{},"sourceType":"module"}