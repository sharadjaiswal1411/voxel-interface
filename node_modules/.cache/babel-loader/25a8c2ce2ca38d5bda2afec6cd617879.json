{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/IncreaseLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { CurrencyAmount, Percent, WETH } from '@kyberswap/ks-sdk-core';\nimport { FeeAmount, NonfungiblePositionManager } from '@kyberswap/ks-sdk-elastic';\nimport { BigNumber } from 'ethers';\nimport JSBI from 'jsbi';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Flex, Text } from 'rebass';\nimport { ButtonError, ButtonLight, ButtonPrimary } from 'components/Button';\nimport { AutoColumn } from 'components/Column';\nimport Copy from 'components/Copy';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport Divider from 'components/Divider';\nimport Loader from 'components/Loader';\nimport { AddRemoveTabs, LiquidityAction } from 'components/NavigationTabs';\nimport ProAmmPoolInfo from 'components/ProAmm/ProAmmPoolInfo';\nimport ProAmmPooledTokens from 'components/ProAmm/ProAmmPooledTokens';\nimport ProAmmPriceRange from 'components/ProAmm/ProAmmPriceRange';\nimport { RowBetween } from 'components/Row';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal';\nimport { TutorialType } from 'components/Tutorial';\nimport { Dots } from 'components/swap/styleds';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { nativeOnChain } from 'constants/tokens';\nimport { FARM_CONTRACTS, VERSION } from 'constants/v2';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback';\nimport { useProAmmNFTPositionManagerContract } from 'hooks/useContract';\nimport usePrevious from 'hooks/usePrevious';\nimport { useProAmmDerivedPositionInfo } from 'hooks/useProAmmDerivedPositionInfo';\nimport { useProAmmPositionsFromTokenId } from 'hooks/useProAmmPositions';\nimport useProAmmPreviousTicks from 'hooks/useProAmmPreviousTicks';\nimport useTheme from 'hooks/useTheme';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks';\nimport { Field } from 'state/mint/proamm/actions';\nimport { useProAmmDerivedMintInfo, useProAmmMintActionHandlers, useProAmmMintState } from 'state/mint/proamm/hooks';\nimport { useSingleCallResult } from 'state/multicall/hooks';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useIsExpertMode } from 'state/user/hooks';\nimport { calculateGasMargin, formattedNum, isAddressString, shortenAddress } from 'utils';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { useUserSlippageTolerance } from '../../state/user/hooks';\nimport { Container, FirstColumn, GridColumn, SecondColumn } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddLiquidity(_ref) {\n  _s();\n\n  var _useSingleCallResult$,\n      _parsedAmounts$depend,\n      _parsedAmounts$depend2,\n      _formattedAmounts,\n      _parsedAmounts$Field$,\n      _currencies$Field$CUR,\n      _parsedAmounts$Field$2,\n      _currencies$Field$CUR2,\n      _this = this,\n      _currencies$Field$CUR7,\n      _currencies$Field$CUR8;\n\n  var _ref$match$params = _ref.match.params,\n      currencyIdA = _ref$match$params.currencyIdA,\n      currencyIdB = _ref$match$params.currencyIdB,\n      feeAmountFromUrl = _ref$match$params.feeAmount,\n      tokenId = _ref$match$params.tokenId,\n      history = _ref.history;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account,\n      chainId = _useActiveWeb3React.chainId,\n      library = _useActiveWeb3React.library;\n\n  var theme = useTheme();\n  var toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  var expertMode = useIsExpertMode();\n  var addTransactionWithType = useTransactionAdder();\n  var prevChainId = usePrevious(chainId);\n  useEffect(function () {\n    if (!!chainId && !!prevChainId && chainId !== prevChainId) {\n      history.push('/myPools');\n    }\n  }, [chainId, prevChainId, history]);\n  var positionManager = useProAmmNFTPositionManagerContract(); // check for existing position if tokenId in url\n\n  var _useProAmmPositionsFr = useProAmmPositionsFromTokenId(tokenId ? BigNumber.from(tokenId) : undefined),\n      existingPositionDetails = _useProAmmPositionsFr.position;\n\n  var owner = (_useSingleCallResult$ = useSingleCallResult(!!tokenId ? positionManager : null, 'ownerOf', [tokenId]).result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  var ownsNFT = owner === account || (existingPositionDetails === null || existingPositionDetails === void 0 ? void 0 : existingPositionDetails.operator) === account;\n  var ownByFarm = Object.values(FARM_CONTRACTS).flat().includes(isAddressString(owner));\n\n  var _useProAmmDerivedPosi = useProAmmDerivedPositionInfo(existingPositionDetails),\n      existingPosition = _useProAmmDerivedPosi.position; // fee selection from url\n\n\n  var feeAmount = feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl)) ? parseFloat(feeAmountFromUrl) : undefined;\n  var baseCurrency = useCurrency(currencyIdA);\n  var currencyB = useCurrency(currencyIdB); // prevent an error if they input ETH/WETH\n\n  var quoteCurrency = baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB; // mint state\n\n  var _useProAmmMintState = useProAmmMintState(),\n      independentField = _useProAmmMintState.independentField,\n      typedValue = _useProAmmMintState.typedValue;\n\n  var _useProAmmDerivedMint = useProAmmDerivedMintInfo(baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined, quoteCurrency !== null && quoteCurrency !== void 0 ? quoteCurrency : undefined, feeAmount, baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined, existingPosition),\n      pool = _useProAmmDerivedMint.pool,\n      dependentField = _useProAmmDerivedMint.dependentField,\n      parsedAmounts = _useProAmmDerivedMint.parsedAmounts,\n      currencyBalances = _useProAmmDerivedMint.currencyBalances,\n      position = _useProAmmDerivedMint.position,\n      noLiquidity = _useProAmmDerivedMint.noLiquidity,\n      currencies = _useProAmmDerivedMint.currencies,\n      errorMessage = _useProAmmDerivedMint.errorMessage,\n      invalidRange = _useProAmmDerivedMint.invalidRange,\n      depositADisabled = _useProAmmDerivedMint.depositADisabled,\n      depositBDisabled = _useProAmmDerivedMint.depositBDisabled,\n      ticksAtLimit = _useProAmmDerivedMint.ticksAtLimit;\n\n  var baseCurrencyIsETHER = !!(chainId && baseCurrency && baseCurrency.isNative);\n  var baseCurrencyIsWETH = !!(chainId && baseCurrency && baseCurrency.equals(WETH[chainId]));\n  var quoteCurrencyIsETHER = !!(chainId && quoteCurrency && quoteCurrency.isNative);\n  var quoteCurrencyIsWETH = !!(chainId && quoteCurrency && quoteCurrency.equals(WETH[chainId]));\n  var usdPrices = useTokensPrice([baseCurrency === null || baseCurrency === void 0 ? void 0 : baseCurrency.wrapped, quoteCurrency === null || quoteCurrency === void 0 ? void 0 : quoteCurrency.wrapped], VERSION.ELASTIC);\n  var estimatedUsdCurrencyA = parsedAmounts[Field.CURRENCY_A] && usdPrices[0] ? parseFloat(parsedAmounts[Field.CURRENCY_A].toSignificant(6)) * usdPrices[0] : 0;\n  var estimatedUsdCurrencyB = parsedAmounts[Field.CURRENCY_B] && usdPrices[1] ? parseFloat(parsedAmounts[Field.CURRENCY_B].toSignificant(6)) * usdPrices[1] : 0;\n  var previousTicks = // : number[] = []\n  useProAmmPreviousTicks(pool, position);\n\n  var _useProAmmMintActionH = useProAmmMintActionHandlers(noLiquidity),\n      onFieldAInput = _useProAmmMintActionH.onFieldAInput,\n      onFieldBInput = _useProAmmMintActionH.onFieldBInput;\n\n  var isValid = !errorMessage && !invalidRange; // modal and loading\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showConfirm = _useState2[0],\n      setShowConfirm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      attemptingTxn = _useState4[0],\n      setAttemptingTxn = _useState4[1]; // clicked confirm\n  // txn values\n\n\n  var deadline = useTransactionDeadline(); // custom from users settings\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      txHash = _useState6[0],\n      setTxHash = _useState6[1]; // get formatted amounts\n\n\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts); // get the max amounts user can add\n\n  var maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(function (accumulator, field) {\n    return _objectSpread(_objectSpread({}, accumulator), {}, _defineProperty({}, field, maxAmountSpend(currencyBalances[field])));\n  }, {}); // check whether the user has approved the router on the tokens\n\n  var _useApproveCallback = useApproveCallback(parsedAmounts[Field.CURRENCY_A], chainId ? NETWORKS_INFO[chainId].elastic.nonfungiblePositionManager : undefined),\n      _useApproveCallback2 = _slicedToArray(_useApproveCallback, 2),\n      approvalA = _useApproveCallback2[0],\n      approveACallback = _useApproveCallback2[1];\n\n  var _useApproveCallback3 = useApproveCallback(parsedAmounts[Field.CURRENCY_B], chainId ? NETWORKS_INFO[chainId].elastic.nonfungiblePositionManager : undefined),\n      _useApproveCallback4 = _slicedToArray(_useApproveCallback3, 2),\n      approvalB = _useApproveCallback4[0],\n      approveBCallback = _useApproveCallback4[1];\n\n  var allowedSlippage = useUserSlippageTolerance(); //TODO: on add\n\n  function onAdd() {\n    return _onAdd.apply(this, arguments);\n  }\n\n  function _onAdd() {\n    _onAdd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var useNative, _NonfungiblePositionM, calldata, value, txn;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!chainId || !library || !account || !tokenId)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (!(!positionManager || !baseCurrency || !quoteCurrency)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(!previousTicks || previousTicks.length !== 2)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              if (!(position && account && deadline)) {\n                _context.next = 14;\n                break;\n              }\n\n              useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined;\n              _NonfungiblePositionM = NonfungiblePositionManager.addCallParameters(position, previousTicks, {\n                slippageTolerance: new Percent(allowedSlippage[0], 10000),\n                deadline: deadline.toString(),\n                useNative: useNative,\n                tokenId: JSBI.BigInt(tokenId)\n              }), calldata = _NonfungiblePositionM.calldata, value = _NonfungiblePositionM.value; //0.00283161\n\n              txn = {\n                to: NETWORKS_INFO[chainId].elastic.nonfungiblePositionManager,\n                data: calldata,\n                value: value\n              };\n              setAttemptingTxn(true);\n              library.getSigner().estimateGas(txn).then(function (estimate) {\n                var newTxn = _objectSpread(_objectSpread({}, txn), {}, {\n                  gasLimit: calculateGasMargin(estimate)\n                });\n\n                return library.getSigner().sendTransaction(newTxn).then(function (response) {\n                  var _parsedAmounts$Field$3, _parsedAmounts$Field$4;\n\n                  setAttemptingTxn(false);\n                  addTransactionWithType(response, {\n                    type: 'Increase liquidity',\n                    summary: (((_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(6)) || 0) + ' ' + (baseCurrency === null || baseCurrency === void 0 ? void 0 : baseCurrency.symbol) + ' and ' + (((_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) || 0) + ' ' + (quoteCurrency === null || quoteCurrency === void 0 ? void 0 : quoteCurrency.symbol),\n                    //  ' with fee ' +  position.pool.fee / 100 + '%' +\n                    // (tokenId ? ' Token ID: (' + tokenId + ')' : ''),\n                    arbitrary: {\n                      token_1: baseCurrency === null || baseCurrency === void 0 ? void 0 : baseCurrency.symbol,\n                      token_2: quoteCurrency === null || quoteCurrency === void 0 ? void 0 : quoteCurrency.symbol\n                    }\n                  });\n                  setTxHash(response.hash);\n                });\n              }).catch(function (error) {\n                console.error('Failed to send transaction', error);\n                setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n                if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n                  console.error(error);\n                } // const newTxn = {\n                //   ...txn,\n                //   gasLimit: '0x0827f6'\n                // }\n                // return library\n                //   .getSigner()\n                //   .sendTransaction(newTxn)\n                //   .then((response: TransactionResponse) => {\n                //     console.log(response)\n                //     setAttemptingTxn(false)\n                //     addTransactionWithType(response, {\n                //       type: 'Add liquidity',\n                //       summary:\n                //         (parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) || 0) +\n                //         ' ' +\n                //         baseCurrency?.symbol +\n                //         ' and ' +\n                //         (parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) || 0) +\n                //         ' ' +\n                //         quoteCurrency?.symbol +\n                //         //  ' with fee ' +  position.pool.fee / 100 + '%' +\n                //         ' (ProMM)'\n                //     })\n                //     setTxHash(response.hash)\n                //   })\n\n              });\n              _context.next = 15;\n              break;\n\n            case 14:\n              return _context.abrupt(\"return\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onAdd.apply(this, arguments);\n  }\n\n  var handleDismissConfirmation = useCallback(function () {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldAInput(''); // dont jump to pool page if creating\n\n      history.push('/myPools');\n    }\n\n    setTxHash('');\n  }, [history, onFieldAInput, txHash]);\n  var addIsUnsupported = false; // get value and prices at ticks\n  // const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  // we need an existence check on parsed amounts for single-asset deposits\n\n  var showApprovalA = approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A];\n  var showApprovalB = approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B];\n  var pendingText = \"Supplying \".concat(!depositADisabled ? (_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(6) : '', \" \").concat(!depositADisabled ? (_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol : '', \" \").concat(!depositADisabled && !depositBDisabled ? 'and' : '', \" \").concat(!depositBDisabled ? (_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6) : '', \" \").concat(!depositBDisabled ? (_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol : '');\n\n  var Buttons = function Buttons() {\n    var _currencies$Field$CUR3, _currencies$Field$CUR4, _currencies$Field$CUR5, _currencies$Field$CUR6;\n\n    return addIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      disabled: true,\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Unsupported Asset\"\n      }, void 0, false, void 0, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, _this) : !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n      onClick: toggleWalletModal,\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Connect Wallet\"\n      }, void 0, false, void 0, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, _this) : /*#__PURE__*/_jsxDEV(Flex, {\n      sx: {\n        gap: '16px'\n      },\n      flexDirection: isValid && showApprovalA && showApprovalB ? 'column' : 'row',\n      children: [(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [showApprovalA && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          onClick: approveACallback,\n          disabled: approvalA === ApprovalState.PENDING,\n          width: showApprovalB ? '48%' : '100%',\n          children: approvalA === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Approving {0}\",\n              values: {\n                0: (_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol\n              }\n            }, void 0, false, void 0, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 21\n          }, _this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Approve {0}\",\n            values: {\n              0: (_currencies$Field$CUR4 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol\n            }\n          }, void 0, false, void 0, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }, _this), showApprovalB && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          onClick: approveBCallback,\n          disabled: approvalB === ApprovalState.PENDING,\n          width: showApprovalA ? '48%' : '100%',\n          children: approvalB === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Approving {0}\",\n              values: {\n                0: (_currencies$Field$CUR5 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol\n              }\n            }, void 0, false, void 0, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, _this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Approve {0}\",\n            values: {\n              0: (_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol\n            }\n          }, void 0, false, void 0, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ButtonError, {\n        onClick: function onClick() {\n          expertMode ? onAdd() : setShowConfirm(true);\n        },\n        disabled: !isValid || approvalA !== ApprovalState.APPROVED && !depositADisabled || approvalB !== ApprovalState.APPROVED && !depositBDisabled,\n        error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B] && false,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 500,\n          children: errorMessage ? errorMessage : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Preview\"\n          }, void 0, false, void 0, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, _this);\n  }; //disable = !feeAmount || invalidPool || (noLiquidity && !startPriceTypedValue)\n  // useProAmmClientSideTrade(\n  //   0,\n  //   position && CurrencyAmount.fromRawAmount(position?.pool.token0, JSBI.BigInt('10000000000000')),\n  //   position?.pool.token1,\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n      isOpen: showConfirm,\n      onDismiss: handleDismissConfirmation,\n      attemptingTxn: attemptingTxn,\n      hash: txHash,\n      content: function content() {\n        return /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title:\n          /*i18n*/\n          i18n._(\"Increase Liquidity\"),\n          onDismiss: handleDismissConfirmation,\n          topContent: function topContent() {\n            return existingPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ProAmmPoolInfo, {\n                position: existingPosition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(ProAmmPooledTokens, {\n                liquidityValue0: parsedAmounts[Field.CURRENCY_A],\n                liquidityValue1: parsedAmounts[Field.CURRENCY_B],\n                title:\n                /*i18n*/\n                i18n._(\"Increase Amount\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(ProAmmPriceRange, {\n                position: existingPosition,\n                ticksAtLimit: ticksAtLimit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, _this);\n          },\n          bottomContent: function bottomContent() {\n            return /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n              onClick: onAdd,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 500,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Supply\"\n                }, void 0, false, void 0, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, _this);\n      },\n      pendingText: pendingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n        action: LiquidityAction.INCREASE,\n        showTooltip: false,\n        hideShare: true,\n        tutorialType: TutorialType.ELASTIC_INCREASE_LIQUIDITY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), owner && account && !ownsNFT && !ownByFarm ? /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        fontWeight: \"500\",\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        backgroundColor: theme.bg3Opacity4,\n        color: theme.subText,\n        style: {\n          borderRadius: '4px',\n          marginBottom: '1.25rem'\n        },\n        children: [\"The owner of this liquidity position is \", shortenAddress(owner), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(Copy, {\n            toCopy: owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          marginBottom: '1.25rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), existingPosition ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProAmmPoolInfo, {\n          position: existingPosition,\n          tokenId: tokenId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          children: [/*#__PURE__*/_jsxDEV(FirstColumn, {\n            children: [/*#__PURE__*/_jsxDEV(ProAmmPooledTokens, {\n              pooled: true,\n              liquidityValue0: CurrencyAmount.fromRawAmount(unwrappedToken(existingPosition.pool.token0), existingPosition.amount0.quotient),\n              liquidityValue1: CurrencyAmount.fromRawAmount(unwrappedToken(existingPosition.pool.token1), existingPosition.amount1.quotient)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                value: formattedAmounts[Field.CURRENCY_A],\n                onUserInput: onFieldAInput,\n                onMax: function onMax() {\n                  var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n\n                  onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n                },\n                onHalf: function onHalf() {\n                  var _currencyBalances$Fie, _currencyBalances$Fie2, _currencyBalances$Fie3;\n\n                  onFieldAInput((_currencyBalances$Fie = (_currencyBalances$Fie2 = currencyBalances[Field.CURRENCY_A]) === null || _currencyBalances$Fie2 === void 0 ? void 0 : (_currencyBalances$Fie3 = _currencyBalances$Fie2.divide(2)) === null || _currencyBalances$Fie3 === void 0 ? void 0 : _currencyBalances$Fie3.toExact()) !== null && _currencyBalances$Fie !== void 0 ? _currencyBalances$Fie : '');\n                },\n                showMaxButton: true,\n                currency: (_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) !== null && _currencies$Field$CUR7 !== void 0 ? _currencies$Field$CUR7 : null,\n                id: \"add-liquidity-input-tokena\",\n                showCommonBases: true,\n                positionMax: \"top\",\n                locked: depositADisabled,\n                estimatedUsd: formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined,\n                disableCurrencySelect: !baseCurrencyIsETHER && !baseCurrencyIsWETH,\n                isSwitchMode: baseCurrencyIsETHER || baseCurrencyIsWETH,\n                onSwitchCurrency: function onSwitchCurrency() {\n                  chainId && history.replace(\"/elastic/increase/\".concat(baseCurrencyIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol, \"/\").concat(currencyIdB, \"/\").concat(feeAmount, \"/\").concat(tokenId));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                value: formattedAmounts[Field.CURRENCY_B],\n                onUserInput: onFieldBInput,\n                onMax: function onMax() {\n                  var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n\n                  onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n                },\n                onHalf: function onHalf() {\n                  var _currencyBalances$Fie4, _currencyBalances$Fie5;\n\n                  onFieldBInput((_currencyBalances$Fie4 = (_currencyBalances$Fie5 = currencyBalances[Field.CURRENCY_B]) === null || _currencyBalances$Fie5 === void 0 ? void 0 : _currencyBalances$Fie5.divide(2).toExact()) !== null && _currencyBalances$Fie4 !== void 0 ? _currencyBalances$Fie4 : '');\n                },\n                showMaxButton: true,\n                currency: (_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) !== null && _currencies$Field$CUR8 !== void 0 ? _currencies$Field$CUR8 : null,\n                id: \"add-liquidity-input-tokenb\",\n                showCommonBases: true,\n                positionMax: \"top\",\n                locked: depositBDisabled,\n                estimatedUsd: formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined,\n                disableCurrencySelect: !quoteCurrencyIsETHER && !quoteCurrencyIsWETH,\n                isSwitchMode: quoteCurrencyIsETHER || quoteCurrencyIsWETH,\n                onSwitchCurrency: function onSwitchCurrency() {\n                  chainId && history.replace(\"/elastic/increase/\".concat(currencyIdA, \"/\").concat(quoteCurrencyIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol, \"/\").concat(feeAmount, \"/\").concat(tokenId));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n            children: [/*#__PURE__*/_jsxDEV(ProAmmPriceRange, {\n              position: existingPosition,\n              ticksAtLimit: ticksAtLimit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // <PositionPreview\n      //   position={existingPosition}\n      //   title={<Trans>Selected Range</Trans>}\n      //   inRange={!outOfRange}\n      //   ticksAtLimit={ticksAtLimit}\n      // />\n      _jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddLiquidity, \"RHIC48nS8sJqNfHRiVhOEqikoOk=\", false, function () {\n  return [useActiveWeb3React, useTheme, useWalletModalToggle, useIsExpertMode, useTransactionAdder, usePrevious, useProAmmNFTPositionManagerContract, useProAmmPositionsFromTokenId, useSingleCallResult, useProAmmDerivedPositionInfo, useCurrency, useCurrency, useProAmmMintState, useProAmmDerivedMintInfo, useTokensPrice, useProAmmPreviousTicks, useProAmmMintActionHandlers, useTransactionDeadline, useApproveCallback, useApproveCallback, useUserSlippageTolerance];\n});\n\n_c = AddLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidity\");","map":{"version":3,"names":["CurrencyAmount","Percent","WETH","FeeAmount","NonfungiblePositionManager","BigNumber","JSBI","React","useCallback","useEffect","useState","Flex","Text","ButtonError","ButtonLight","ButtonPrimary","AutoColumn","Copy","CurrencyInputPanel","Divider","Loader","AddRemoveTabs","LiquidityAction","ProAmmPoolInfo","ProAmmPooledTokens","ProAmmPriceRange","RowBetween","TransactionConfirmationModal","ConfirmationModalContent","TutorialType","Dots","NETWORKS_INFO","nativeOnChain","FARM_CONTRACTS","VERSION","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useProAmmNFTPositionManagerContract","usePrevious","useProAmmDerivedPositionInfo","useProAmmPositionsFromTokenId","useProAmmPreviousTicks","useTheme","useTransactionDeadline","useTokensPrice","useWalletModalToggle","Field","useProAmmDerivedMintInfo","useProAmmMintActionHandlers","useProAmmMintState","useSingleCallResult","useTransactionAdder","useIsExpertMode","calculateGasMargin","formattedNum","isAddressString","shortenAddress","maxAmountSpend","unwrappedToken","useUserSlippageTolerance","Container","FirstColumn","GridColumn","SecondColumn","AddLiquidity","match","params","currencyIdA","currencyIdB","feeAmountFromUrl","feeAmount","tokenId","history","account","chainId","library","theme","toggleWalletModal","expertMode","addTransactionWithType","prevChainId","push","positionManager","from","undefined","existingPositionDetails","position","owner","result","ownsNFT","operator","ownByFarm","Object","values","flat","includes","existingPosition","parseFloat","baseCurrency","currencyB","quoteCurrency","wrapped","equals","independentField","typedValue","pool","dependentField","parsedAmounts","currencyBalances","noLiquidity","currencies","errorMessage","invalidRange","depositADisabled","depositBDisabled","ticksAtLimit","baseCurrencyIsETHER","isNative","baseCurrencyIsWETH","quoteCurrencyIsETHER","quoteCurrencyIsWETH","usdPrices","ELASTIC","estimatedUsdCurrencyA","CURRENCY_A","toSignificant","estimatedUsdCurrencyB","CURRENCY_B","previousTicks","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","txHash","setTxHash","formattedAmounts","maxAmounts","reduce","accumulator","field","elastic","nonfungiblePositionManager","approvalA","approveACallback","approvalB","approveBCallback","allowedSlippage","onAdd","length","useNative","addCallParameters","slippageTolerance","toString","BigInt","calldata","value","txn","to","data","getSigner","estimateGas","then","estimate","newTxn","gasLimit","sendTransaction","response","type","summary","symbol","arbitrary","token_1","token_2","hash","catch","error","console","code","handleDismissConfirmation","addIsUnsupported","showApprovalA","APPROVED","showApprovalB","pendingText","Buttons","gap","NOT_APPROVED","PENDING","marginTop","INCREASE","ELASTIC_INCREASE_LIQUIDITY","bg3Opacity4","subText","borderRadius","marginBottom","display","textAlign","fromRawAmount","token0","amount0","quotient","token1","amount1","toExact","divide","replace","address"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/IncreaseLiquidity/index.tsx"],"sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Percent, WETH } from '@kyberswap/ks-sdk-core'\nimport { FeeAmount, NonfungiblePositionManager } from '@kyberswap/ks-sdk-elastic'\nimport { Trans, t } from '@lingui/macro'\nimport { BigNumber } from 'ethers'\nimport JSBI from 'jsbi'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Flex, Text } from 'rebass'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport Copy from 'components/Copy'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport Divider from 'components/Divider'\nimport Loader from 'components/Loader'\nimport { AddRemoveTabs, LiquidityAction } from 'components/NavigationTabs'\nimport ProAmmPoolInfo from 'components/ProAmm/ProAmmPoolInfo'\nimport ProAmmPooledTokens from 'components/ProAmm/ProAmmPooledTokens'\nimport ProAmmPriceRange from 'components/ProAmm/ProAmmPriceRange'\nimport { RowBetween } from 'components/Row'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport { TutorialType } from 'components/Tutorial'\nimport { Dots } from 'components/swap/styleds'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { nativeOnChain } from 'constants/tokens'\nimport { FARM_CONTRACTS, VERSION } from 'constants/v2'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { useProAmmNFTPositionManagerContract } from 'hooks/useContract'\nimport usePrevious from 'hooks/usePrevious'\nimport { useProAmmDerivedPositionInfo } from 'hooks/useProAmmDerivedPositionInfo'\nimport { useProAmmPositionsFromTokenId } from 'hooks/useProAmmPositions'\nimport useProAmmPreviousTicks from 'hooks/useProAmmPreviousTicks'\nimport useTheme from 'hooks/useTheme'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks'\nimport { Field } from 'state/mint/proamm/actions'\nimport { useProAmmDerivedMintInfo, useProAmmMintActionHandlers, useProAmmMintState } from 'state/mint/proamm/hooks'\nimport { useSingleCallResult } from 'state/multicall/hooks'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode } from 'state/user/hooks'\nimport { calculateGasMargin, formattedNum, isAddressString, shortenAddress } from 'utils'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { Container, FirstColumn, GridColumn, SecondColumn } from './styled'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB, feeAmount: feeAmountFromUrl, tokenId },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string; feeAmount?: string; tokenId?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useTheme()\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n  const expertMode = useIsExpertMode()\n  const addTransactionWithType = useTransactionAdder()\n\n  const prevChainId = usePrevious(chainId)\n\n  useEffect(() => {\n    if (!!chainId && !!prevChainId && chainId !== prevChainId) {\n      history.push('/myPools')\n    }\n  }, [chainId, prevChainId, history])\n\n  const positionManager = useProAmmNFTPositionManagerContract()\n\n  // check for existing position if tokenId in url\n  const { position: existingPositionDetails } = useProAmmPositionsFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : undefined,\n  )\n\n  const owner = useSingleCallResult(!!tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\n  const ownsNFT = owner === account || existingPositionDetails?.operator === account\n  const ownByFarm = Object.values(FARM_CONTRACTS).flat().includes(isAddressString(owner))\n\n  const { position: existingPosition } = useProAmmDerivedPositionInfo(existingPositionDetails)\n\n  // fee selection from url\n  const feeAmount: FeeAmount | undefined =\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\n      ? parseFloat(feeAmountFromUrl)\n      : undefined\n  const baseCurrency = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  // prevent an error if they input ETH/WETH\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\n  // mint state\n  const { independentField, typedValue } = useProAmmMintState()\n  const {\n    pool,\n    // ticks,\n    dependentField,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    // invalidPool,\n    invalidRange,\n    // outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    ticksAtLimit,\n  } = useProAmmDerivedMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    feeAmount,\n    baseCurrency ?? undefined,\n    existingPosition,\n  )\n  const baseCurrencyIsETHER = !!(chainId && baseCurrency && baseCurrency.isNative)\n  const baseCurrencyIsWETH = !!(chainId && baseCurrency && baseCurrency.equals(WETH[chainId]))\n  const quoteCurrencyIsETHER = !!(chainId && quoteCurrency && quoteCurrency.isNative)\n  const quoteCurrencyIsWETH = !!(chainId && quoteCurrency && quoteCurrency.equals(WETH[chainId]))\n\n  const usdPrices = useTokensPrice([baseCurrency?.wrapped, quoteCurrency?.wrapped], VERSION.ELASTIC)\n\n  const estimatedUsdCurrencyA =\n    parsedAmounts[Field.CURRENCY_A] && usdPrices[0]\n      ? parseFloat((parsedAmounts[Field.CURRENCY_A] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[0]\n      : 0\n\n  const estimatedUsdCurrencyB =\n    parsedAmounts[Field.CURRENCY_B] && usdPrices[1]\n      ? parseFloat((parsedAmounts[Field.CURRENCY_B] as CurrencyAmount<Currency>).toSignificant(6)) * usdPrices[1]\n      : 0\n\n  const previousTicks =\n    // : number[] = []\n    useProAmmPreviousTicks(pool, position)\n  const { onFieldAInput, onFieldBInput } = useProAmmMintActionHandlers(noLiquidity)\n\n  const isValid = !errorMessage && !invalidRange\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    chainId ? NETWORKS_INFO[chainId].elastic.nonfungiblePositionManager : undefined,\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    chainId ? NETWORKS_INFO[chainId].elastic.nonfungiblePositionManager : undefined,\n  )\n\n  const allowedSlippage = useUserSlippageTolerance()\n\n  //TODO: on add\n  async function onAdd() {\n    if (!chainId || !library || !account || !tokenId) {\n      return\n    }\n\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return\n    }\n\n    if (!previousTicks || previousTicks.length !== 2) {\n      return\n    }\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\n\n      const { calldata, value } = NonfungiblePositionManager.addCallParameters(position, previousTicks, {\n        slippageTolerance: new Percent(allowedSlippage[0], 10000),\n        deadline: deadline.toString(),\n        useNative,\n        tokenId: JSBI.BigInt(tokenId),\n      })\n\n      //0.00283161\n      const txn: { to: string; data: string; value: string } = {\n        to: NETWORKS_INFO[chainId].elastic.nonfungiblePositionManager,\n        data: calldata,\n        value,\n      }\n\n      setAttemptingTxn(true)\n      library\n        .getSigner()\n        .estimateGas(txn)\n        .then(estimate => {\n          const newTxn = {\n            ...txn,\n            gasLimit: calculateGasMargin(estimate),\n          }\n\n          return library\n            .getSigner()\n            .sendTransaction(newTxn)\n            .then((response: TransactionResponse) => {\n              setAttemptingTxn(false)\n              addTransactionWithType(response, {\n                type: 'Increase liquidity',\n                summary:\n                  (parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) || 0) +\n                  ' ' +\n                  baseCurrency?.symbol +\n                  ' and ' +\n                  (parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) || 0) +\n                  ' ' +\n                  quoteCurrency?.symbol,\n                //  ' with fee ' +  position.pool.fee / 100 + '%' +\n                // (tokenId ? ' Token ID: (' + tokenId + ')' : ''),\n                arbitrary: {\n                  token_1: baseCurrency?.symbol,\n                  token_2: quoteCurrency?.symbol,\n                },\n              })\n              setTxHash(response.hash)\n            })\n        })\n        .catch(error => {\n          console.error('Failed to send transaction', error)\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n\n          // const newTxn = {\n          //   ...txn,\n          //   gasLimit: '0x0827f6'\n          // }\n          // return library\n          //   .getSigner()\n          //   .sendTransaction(newTxn)\n          //   .then((response: TransactionResponse) => {\n          //     console.log(response)\n          //     setAttemptingTxn(false)\n          //     addTransactionWithType(response, {\n          //       type: 'Add liquidity',\n          //       summary:\n          //         (parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) || 0) +\n          //         ' ' +\n          //         baseCurrency?.symbol +\n          //         ' and ' +\n          //         (parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) || 0) +\n          //         ' ' +\n          //         quoteCurrency?.symbol +\n          //         //  ' with fee ' +  position.pool.fee / 100 + '%' +\n          //         ' (ProMM)'\n          //     })\n          //     setTxHash(response.hash)\n          //   })\n        })\n    } else {\n      return\n    }\n  }\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      // dont jump to pool page if creating\n      history.push('/myPools')\n    }\n    setTxHash('')\n  }, [history, onFieldAInput, txHash])\n\n  const addIsUnsupported = false\n\n  // get value and prices at ticks\n  // const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  // we need an existence check on parsed amounts for single-asset deposits\n  const showApprovalA = approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\n  const showApprovalB = approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\n\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\n  } ${!depositADisabled && !depositBDisabled ? 'and' : ''} ${\n    !depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''\n  } ${!depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''}`\n\n  const Buttons = () =>\n    addIsUnsupported ? (\n      <ButtonPrimary disabled={true}>\n        <Trans>Unsupported Asset</Trans>\n      </ButtonPrimary>\n    ) : !account ? (\n      <ButtonLight onClick={toggleWalletModal}>\n        <Trans>Connect Wallet</Trans>\n      </ButtonLight>\n    ) : (\n      <Flex sx={{ gap: '16px' }} flexDirection={isValid && showApprovalA && showApprovalB ? 'column' : 'row'}>\n        {(approvalA === ApprovalState.NOT_APPROVED ||\n          approvalA === ApprovalState.PENDING ||\n          approvalB === ApprovalState.NOT_APPROVED ||\n          approvalB === ApprovalState.PENDING) &&\n          isValid && (\n            <RowBetween>\n              {showApprovalA && (\n                <ButtonPrimary\n                  onClick={approveACallback}\n                  disabled={approvalA === ApprovalState.PENDING}\n                  width={showApprovalB ? '48%' : '100%'}\n                >\n                  {approvalA === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n              {showApprovalB && (\n                <ButtonPrimary\n                  onClick={approveBCallback}\n                  disabled={approvalB === ApprovalState.PENDING}\n                  width={showApprovalA ? '48%' : '100%'}\n                >\n                  {approvalB === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          )}\n        <ButtonError\n          onClick={() => {\n            expertMode ? onAdd() : setShowConfirm(true)\n          }}\n          disabled={\n            !isValid ||\n            (approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\n            (approvalB !== ApprovalState.APPROVED && !depositBDisabled)\n          }\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B] && false}\n        >\n          <Text fontWeight={500}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n        </ButtonError>\n      </Flex>\n    )\n\n  //disable = !feeAmount || invalidPool || (noLiquidity && !startPriceTypedValue)\n  // useProAmmClientSideTrade(\n  //   0,\n  //   position && CurrencyAmount.fromRawAmount(position?.pool.token0, JSBI.BigInt('10000000000000')),\n  //   position?.pool.token1,\n  // )\n\n  return (\n    <>\n      <TransactionConfirmationModal\n        isOpen={showConfirm}\n        onDismiss={handleDismissConfirmation}\n        attemptingTxn={attemptingTxn}\n        hash={txHash}\n        content={() => (\n          <ConfirmationModalContent\n            title={t`Increase Liquidity`}\n            onDismiss={handleDismissConfirmation}\n            topContent={() =>\n              existingPosition && (\n                <div style={{ marginTop: '1rem' }}>\n                  {/* <PositionPreview\n                    position={position}\n                    title={<Trans>Selected Range</Trans>}\n                    inRange={!outOfRange}\n                    ticksAtLimit={ticksAtLimit}\n                  /> */}\n                  <ProAmmPoolInfo position={existingPosition} />\n                  <ProAmmPooledTokens\n                    liquidityValue0={parsedAmounts[Field.CURRENCY_A]}\n                    liquidityValue1={parsedAmounts[Field.CURRENCY_B]}\n                    title={t`Increase Amount`}\n                  />\n                  <ProAmmPriceRange position={existingPosition} ticksAtLimit={ticksAtLimit} />\n                </div>\n              )\n            }\n            bottomContent={() => (\n              <ButtonPrimary onClick={onAdd}>\n                <Text fontWeight={500}>\n                  <Trans>Supply</Trans>\n                </Text>\n              </ButtonPrimary>\n            )}\n          />\n        )}\n        pendingText={pendingText}\n      />\n      <Container>\n        <AddRemoveTabs\n          action={LiquidityAction.INCREASE}\n          showTooltip={false}\n          hideShare\n          tutorialType={TutorialType.ELASTIC_INCREASE_LIQUIDITY}\n        />\n        {owner && account && !ownsNFT && !ownByFarm ? (\n          <Text\n            fontSize=\"12px\"\n            fontWeight=\"500\"\n            paddingTop={'10px'}\n            paddingBottom={'10px'}\n            backgroundColor={theme.bg3Opacity4}\n            color={theme.subText}\n            style={{ borderRadius: '4px', marginBottom: '1.25rem' }}\n          >\n            The owner of this liquidity position is {shortenAddress(owner)}\n            <span style={{ display: 'inline-block' }}>\n              <Copy toCopy={owner}></Copy>\n            </span>\n          </Text>\n        ) : (\n          <Divider style={{ marginBottom: '1.25rem' }} />\n        )}\n\n        {existingPosition ? (\n          <AutoColumn gap=\"md\" style={{ textAlign: 'left' }}>\n            <ProAmmPoolInfo position={existingPosition} tokenId={tokenId} />\n            <GridColumn>\n              <FirstColumn>\n                <ProAmmPooledTokens\n                  pooled\n                  liquidityValue0={CurrencyAmount.fromRawAmount(\n                    unwrappedToken(existingPosition.pool.token0),\n                    existingPosition.amount0.quotient,\n                  )}\n                  liquidityValue1={CurrencyAmount.fromRawAmount(\n                    unwrappedToken(existingPosition.pool.token1),\n                    existingPosition.amount1.quotient,\n                  )}\n                />\n\n                <AutoColumn gap=\"md\">\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.CURRENCY_A]}\n                    onUserInput={onFieldAInput}\n                    onMax={() => {\n                      onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                    }}\n                    onHalf={() => {\n                      onFieldAInput(currencyBalances[Field.CURRENCY_A]?.divide(2)?.toExact() ?? '')\n                    }}\n                    showMaxButton\n                    currency={currencies[Field.CURRENCY_A] ?? null}\n                    id=\"add-liquidity-input-tokena\"\n                    showCommonBases\n                    positionMax=\"top\"\n                    locked={depositADisabled}\n                    estimatedUsd={formattedNum(estimatedUsdCurrencyA.toString(), true) || undefined}\n                    disableCurrencySelect={!baseCurrencyIsETHER && !baseCurrencyIsWETH}\n                    isSwitchMode={baseCurrencyIsETHER || baseCurrencyIsWETH}\n                    onSwitchCurrency={() => {\n                      chainId &&\n                        history.replace(\n                          `/elastic/increase/${\n                            baseCurrencyIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol\n                          }/${currencyIdB}/${feeAmount}/${tokenId}`,\n                        )\n                    }}\n                  />\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.CURRENCY_B]}\n                    onUserInput={onFieldBInput}\n                    onMax={() => {\n                      onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                    }}\n                    onHalf={() => {\n                      onFieldBInput(currencyBalances[Field.CURRENCY_B]?.divide(2).toExact() ?? '')\n                    }}\n                    showMaxButton\n                    currency={currencies[Field.CURRENCY_B] ?? null}\n                    id=\"add-liquidity-input-tokenb\"\n                    showCommonBases\n                    positionMax=\"top\"\n                    locked={depositBDisabled}\n                    estimatedUsd={formattedNum(estimatedUsdCurrencyB.toString(), true) || undefined}\n                    disableCurrencySelect={!quoteCurrencyIsETHER && !quoteCurrencyIsWETH}\n                    isSwitchMode={quoteCurrencyIsETHER || quoteCurrencyIsWETH}\n                    onSwitchCurrency={() => {\n                      chainId &&\n                        history.replace(\n                          `/elastic/increase/${currencyIdA}/${\n                            quoteCurrencyIsETHER ? WETH[chainId].address : nativeOnChain(chainId).symbol\n                          }/${feeAmount}/${tokenId}`,\n                        )\n                    }}\n                  />\n                </AutoColumn>\n                {/* <PositionPreview\n                  position={existingPosition}\n                  title={<Trans>Selected Range</Trans>}\n                  inRange={!outOfRange}\n                  ticksAtLimit={ticksAtLimit}\n                /> */}\n              </FirstColumn>\n              <SecondColumn>\n                <ProAmmPriceRange position={existingPosition} ticksAtLimit={ticksAtLimit} />\n                <Buttons />\n              </SecondColumn>\n            </GridColumn>\n          </AutoColumn>\n        ) : (\n          // <PositionPreview\n          //   position={existingPosition}\n          //   title={<Trans>Selected Range</Trans>}\n          //   inRange={!outOfRange}\n          //   ticksAtLimit={ticksAtLimit}\n          // />\n          <Loader />\n        )}\n      </Container>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}