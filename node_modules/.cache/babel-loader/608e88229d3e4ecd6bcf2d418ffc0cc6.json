{"ast":null,"code":"import { useCallback, useEffect } from 'react';\n\nvar useBeforeUnload = function useBeforeUnload(enabled, message) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n\n  var handler = useCallback(function (event) {\n    var finalEnabled = typeof enabled === 'function' ? enabled() : true;\n\n    if (!finalEnabled) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (message) {\n      event.returnValue = message;\n    }\n\n    return message;\n  }, [enabled, message]);\n  useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n\n    window.addEventListener('beforeunload', handler);\n    return function () {\n      return window.removeEventListener('beforeunload', handler);\n    };\n  }, [enabled, handler]);\n};\n\nexport default useBeforeUnload;","map":null,"metadata":{},"sourceType":"module"}