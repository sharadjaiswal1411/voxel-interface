{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCreative(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  var getTranslateValue = function getTranslateValue(value) {\n    if (typeof value === 'string') return value;\n    return \"\".concat(value, \"px\");\n  };\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        $wrapperEl = swiper.$wrapperEl,\n        slidesSizesGrid = swiper.slidesSizesGrid;\n    var params = swiper.params.creativeEffect;\n    var multiplier = params.progressMultiplier;\n    var isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      var margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      $wrapperEl.transform(\"translateX(calc(50% - \".concat(margin, \"px))\"));\n    }\n\n    var _loop = function _loop(i) {\n      var $slideEl = slides.eq(i);\n      var slideProgress = $slideEl[0].progress;\n      var progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n      var originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      var offset = $slideEl[0].swiperSlideOffset;\n      var t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      var r = [0, 0, 0];\n      var custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      var data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach(function (value, index) {\n        t[index] = \"calc(\".concat(value, \"px + (\").concat(getTranslateValue(data.translate[index]), \" * \").concat(Math.abs(progress * multiplier), \"))\");\n      }); // set rotates\n\n      r.forEach(function (value, index) {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var translateString = t.join(', ');\n      var rotateString = \"rotateX(\".concat(r[0], \"deg) rotateY(\").concat(r[1], \"deg) rotateZ(\").concat(r[2], \"deg)\");\n      var scaleString = originalProgress < 0 ? \"scale(\".concat(1 + (1 - data.scale) * originalProgress * multiplier, \")\") : \"scale(\".concat(1 - (1 - data.scale) * originalProgress * multiplier, \")\");\n      var opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      var transform = \"translate3d(\".concat(translateString, \") \").concat(rotateString, \" \").concat(scaleString); // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        var $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) {\n          var shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      var $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({\n        opacity: opacityString\n      });\n\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    };\n\n    for (var i = 0; i < slides.length; i += 1) {\n      _loop(i);\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformEl = swiper.params.creativeEffect.transformEl;\n    var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformEl: transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return swiper.params.creativeEffect.perspective;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}