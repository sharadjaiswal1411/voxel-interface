{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar CHAIN_ID = 1;\n\nvar WalletLinkConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(WalletLinkConnector, _AbstractConnector);\n\n  function WalletLinkConnector(_ref) {\n    var _this;\n\n    var url = _ref.url,\n        appName = _ref.appName,\n        appLogoUrl = _ref.appLogoUrl,\n        darkMode = _ref.darkMode,\n        supportedChainIds = _ref.supportedChainIds;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: supportedChainIds\n    }) || this;\n    _this.url = url;\n    _this.appName = appName;\n    _this.appLogoUrl = appLogoUrl;\n    _this.darkMode = darkMode || false;\n    _this.handleChainChanged = _this.handleChainChanged.bind(_assertThisInitialized(_this));\n    _this.handleAccountsChanged = _this.handleAccountsChanged.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = WalletLinkConnector.prototype;\n\n  _proto.activate = function activate() {\n    try {\n      var _this3 = this;\n\n      var _temp4 = function _temp4() {\n        return Promise.resolve(_this3.provider.request({\n          method: 'eth_requestAccounts'\n        })).then(function (accounts) {\n          var account = accounts[0];\n\n          _this3.provider.on('chainChanged', _this3.handleChainChanged);\n\n          _this3.provider.on('accountsChanged', _this3.handleAccountsChanged);\n\n          return {\n            provider: _this3.provider,\n            account: account\n          };\n        });\n      };\n\n      var _temp5 = function () {\n        if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n          // user is in the dapp browser on Coinbase Wallet\n          _this3.provider = window.ethereum;\n        } else {\n          var _temp6 = function () {\n            if (!_this3.walletLink) {\n              return Promise.resolve(import('@coinbase/wallet-sdk').then(function (m) {\n                var _m$default;\n\n                return (_m$default = m == null ? void 0 : m[\"default\"]) != null ? _m$default : m;\n              })).then(function (CoinbaseWalletSDK) {\n                _this3.walletLink = new CoinbaseWalletSDK(_extends({\n                  appName: _this3.appName,\n                  darkMode: _this3.darkMode\n                }, _this3.appLogoUrl ? {\n                  appLogoUrl: _this3.appLogoUrl\n                } : {}));\n                _this3.provider = _this3.walletLink.makeWeb3Provider(_this3.url, CHAIN_ID);\n              });\n            }\n          }();\n\n          if (_temp6 && _temp6.then) return _temp6.then(function () {});\n        }\n      }(); // @ts-ignore\n\n\n      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp4) : _temp4(_temp5));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n\n      return Promise.resolve(_this5.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n\n      return Promise.resolve(_this7.provider.chainId);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n\n      return Promise.resolve(_this9.provider.request({\n        method: 'eth_requestAccounts'\n      })).then(function (accounts) {\n        return accounts[0];\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged);\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged);\n  };\n\n  _proto.close = function close() {\n    try {\n      var _this11 = this;\n\n      _this11.provider.close();\n\n      _this11.emitDeactivate();\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n\n    this.emitUpdate({\n      chainId: chainId\n    });\n  };\n\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n\n    this.emitUpdate({\n      account: accounts[0]\n    });\n  };\n\n  return WalletLinkConnector;\n}(AbstractConnector);\n\nexport { WalletLinkConnector };","map":null,"metadata":{},"sourceType":"module"}