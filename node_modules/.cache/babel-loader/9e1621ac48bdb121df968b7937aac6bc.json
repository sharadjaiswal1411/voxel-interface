{"ast":null,"code":"export var FairLaunchVersion;\n\n(function (FairLaunchVersion) {\n  FairLaunchVersion[FairLaunchVersion[\"V1\"] = 0] = \"V1\";\n  FairLaunchVersion[FairLaunchVersion[\"V2\"] = 1] = \"V2\";\n})(FairLaunchVersion || (FairLaunchVersion = {}));\n\nexport var RewardLockerVersion;\n\n(function (RewardLockerVersion) {\n  RewardLockerVersion[RewardLockerVersion[\"V1\"] = 0] = \"V1\";\n  RewardLockerVersion[RewardLockerVersion[\"V2\"] = 1] = \"V2\";\n})(RewardLockerVersion || (RewardLockerVersion = {}));\n\nexport var FarmHistoryMethod;\n\n(function (FarmHistoryMethod) {\n  FarmHistoryMethod[FarmHistoryMethod[\"DEPOSIT\"] = 0] = \"DEPOSIT\";\n  FarmHistoryMethod[FarmHistoryMethod[\"WITHDRAW\"] = 1] = \"WITHDRAW\";\n  FarmHistoryMethod[FarmHistoryMethod[\"HARVEST\"] = 2] = \"HARVEST\";\n  FarmHistoryMethod[FarmHistoryMethod[\"CLAIM\"] = 3] = \"CLAIM\";\n})(FarmHistoryMethod || (FarmHistoryMethod = {}));","map":{"version":3,"names":["FairLaunchVersion","RewardLockerVersion","FarmHistoryMethod"],"sources":["/Applications/XAMPP/voxel-interface/src/state/farms/types.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Token } from '@kyberswap/ks-sdk-core'\n\nexport enum FairLaunchVersion {\n  V1,\n  V2,\n}\n\nexport enum RewardLockerVersion {\n  V1,\n  V2,\n}\n\nexport interface FarmV1 {\n  fairLaunchAddress: string\n  pid: number\n  id: string\n  rewardTokens: Token[]\n  rewardPerBlocks: BigNumber[]\n  accRewardPerShares: BigNumber[]\n  totalStake: BigNumber\n  stakeToken: string\n  startBlock: number\n  endBlock: number\n  lastRewardBlock: number\n  token0?: any\n  token1?: any\n  amp: number\n  reserve0: string\n  reserve1: string\n  reserveUSD: string\n  totalSupply: string\n  oneDayFeeUSD?: string\n  oneDayFeeUntracked?: string\n  userData?: {\n    allowance?: string\n    tokenBalance?: string\n    stakedBalance?: string\n    rewards?: string[]\n  }\n  time: string\n  isEnded?: boolean\n}\n\nexport interface FarmV2 {\n  fairLaunchAddress: string\n  pid: number\n  id: string\n  rewardTokens: Token[]\n  rewardPerSeconds: BigNumber[]\n  accRewardPerShares: BigNumber[]\n  totalStake: BigNumber\n  stakeToken: string\n  generatedToken: string\n  startTime: number\n  endTime: number\n  lastRewardTime: number\n  token0?: any\n  token1?: any\n  amp: number\n  reserve0: string\n  reserve1: string\n  reserveUSD: string\n  totalSupply: string\n  oneDayFeeUSD?: string\n  oneDayFeeUntracked?: string\n  userData?: {\n    allowance?: string\n    tokenBalance?: string\n    stakedBalance?: string\n    rewards?: string[]\n  }\n  time: string\n  vestingDuration: number\n  rewardMultipliers: BigNumber[]\n}\n\nexport interface Farm extends FarmV1, FarmV2 {}\n\nexport interface Reward {\n  token: Token\n  amount: BigNumber\n}\n\n/**\n * Time unit can be block or second\n */\nexport interface RewardPerTimeUnit {\n  token: Token\n  amount: BigNumber\n}\n\nexport interface FarmHistoriesSubgraphResult {\n  deposits: {\n    id: string\n    timestamp: string\n    poolID: number\n    stakeToken: string\n    amount: string\n  }[]\n  withdraws: {\n    id: string\n    timestamp: string\n    poolID: number\n    stakeToken: string\n    amount: string\n  }[]\n  harvests: {\n    id: string\n    timestamp: string\n    poolID: number\n    stakeToken: string\n    rewardToken: string\n    amount: string\n  }[]\n  vests: {\n    id: string\n    timestamp: string\n    rewardToken: string\n    amount: string\n  }[]\n}\n\nexport enum FarmHistoryMethod {\n  DEPOSIT,\n  WITHDRAW,\n  HARVEST,\n  CLAIM,\n}\n\nexport interface FarmHistory {\n  id: string\n  timestamp: string\n  method: FarmHistoryMethod\n  amount: string\n  stakeToken?: string\n  rewardToken?: string\n}\n"],"mappings":"AAGA,WAAYA,iBAAZ;;WAAYA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB;;AAKZ,WAAYC,mBAAZ;;WAAYA,mB;EAAAA,mB,CAAAA,mB;EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB;;AAmHZ,WAAYC,iBAAZ;;WAAYA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB"},"metadata":{},"sourceType":"module"}