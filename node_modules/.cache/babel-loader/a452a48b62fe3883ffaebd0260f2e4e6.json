{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/SwapV2/index.tsx\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { ChainId, Token } from '@kyberswap/ks-sdk-core';\nimport JSBI from 'jsbi';\nimport { stringify } from 'qs';\nimport { Suspense, lazy, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { AlertTriangle } from 'react-feather';\nimport Skeleton from 'react-loading-skeleton';\nimport { useParams } from 'react-router-dom';\nimport { Box, Flex, Text } from 'rebass';\nimport styled, { keyframes } from 'styled-components';\nimport { ReactComponent as TutorialSvg } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/svg/play_circle_outline.svg\";\nimport { ReactComponent as RoutingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/svg/routing-icon.svg\";\nimport AddressInputPanel from 'components/AddressInputPanel';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button';\nimport { GreyCard } from 'components/Card/index';\nimport Column from 'components/Column/index';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport { Swap as SwapIcon } from 'components/Icons';\nimport TransactionSettingsIcon from 'components/Icons/TransactionSettingsIcon';\nimport InfoHelper from 'components/InfoHelper';\nimport Loader from 'components/Loader';\nimport ProgressSteps from 'components/ProgressSteps';\nimport { AutoRow, RowBetween } from 'components/Row'; //import { SEOSwap } from 'components/SEO'\n\nimport { ShareButtonWithModal } from 'components/ShareModal';\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink';\nimport TokenWarningModal from 'components/TokenWarningModal';\nimport { MouseoverTooltip } from 'components/Tooltip';\nimport { TutorialIds } from 'components/Tutorial/TutorialSwap/constant'; //import AdvancedSwapDetailsDropdown from 'components/swapv2/AdvancedSwapDetailsDropdown'\n\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal';\nimport GasPriceTrackerPanel from 'components/swapv2/GasPriceTrackerPanel';\nimport LiquiditySourcesPanel from 'components/swapv2/LiquiditySourcesPanel';\nimport MobileTokenInfo from 'components/swapv2/MobileTokenInfo';\nimport PairSuggestion from 'components/swapv2/PairSuggestion'; //import RefreshButton from 'components/swapv2/RefreshButton'\n\nimport SettingsPanel from 'components/swapv2/SwapSettingsPanel';\nimport TokenInfo from 'components/swapv2/TokenInfo';\nimport TokenInfoV2 from 'components/swapv2/TokenInfoV2';\nimport TradePrice from 'components/swapv2/TradePrice'; //import TradeTypeSelection from 'components/swapv2/TradeTypeSelection'\n\nimport { ArrowWrapper, BottomGrouping, Container, Dots, InfoComponentsWrapper, KyberTag, LiveChartWrapper, PageWrapper, PriceImpactHigh, StyledActionButtonSwapForm, SwapCallbackError, SwapFormActions, SwapFormWrapper, Tab, TabContainer, TabWrapper, Wrapper } from 'components/swapv2/styleds';\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks';\nimport { Z_INDEXS } from 'constants/styles';\nimport { STABLE_COINS_ADDRESS, nativeOnChain } from 'constants/tokens';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens, useCurrency } from 'hooks/Tokens';\nimport { useActiveNetwork } from 'hooks/useActiveNetwork';\nimport { ApprovalState, useProAmmApproveCallback } from 'hooks/useApproveCallback';\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel';\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport usePrevious from 'hooks/usePrevious';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useTheme from 'hooks/useTheme';\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback';\nimport { BodyWrapper } from 'pages/AppBody';\nimport { ClickableText } from 'pages/Pool/styleds';\nimport { useToggleTransactionSettingsMenu, useWalletModalToggle } from 'state/application/hooks';\nimport { useAllDexes } from 'state/customizeDexes/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useDefaultsFromURLSearch, useSwapActionHandlers, useSwapState } from 'state/swap/hooks';\nimport { useDerivedSwapInfoV2 } from 'state/swap/useAggregator';\nimport { useProAmmDerivedSwapInfo } from 'state/swap/proamm/hooks';\nimport { useTutorialSwapGuide } from 'state/tutorial/hooks';\nimport { useExpertModeManager, useShowLiveChart, useShowTokenInfo, useUserAddedTokens, useUserSlippageTolerance } from 'state/user/hooks';\nimport { TYPE } from 'theme';\nimport { formattedNum, isAddressString, basisPointsToPercent } from 'utils'; //import { Aggregator } from 'utils/aggregator'\n\nimport { currencyId } from 'utils/currencyId';\nimport { filterTokensWithExactKeyword } from 'utils/filtering';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { convertToSlug, getNetworkSlug, getSymbolSlug } from 'utils/string';\nimport { convertSymbol } from 'utils/tokenInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar LiveChart = /*#__PURE__*/lazy(_c = function _c() {\n  return import('components/LiveChart');\n});\n_c2 = LiveChart;\nvar Routing = /*#__PURE__*/lazy(_c3 = function _c3() {\n  return import('components/swapv2/Routing');\n});\n_c4 = Routing;\nvar TutorialIcon = styled(TutorialSvg).withConfig({\n  displayName: \"SwapV2__TutorialIcon\",\n  componentId: \"sc-84irps-0\"\n})([\"width:22px;height:22px;path{fill:\", \";stroke:\", \";}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.subText;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.subText;\n});\nvar TAB;\n\n(function (TAB) {\n  TAB[\"SWAP\"] = \"swap\";\n  TAB[\"INFO\"] = \"info\";\n  TAB[\"SETTINGS\"] = \"settings\";\n  TAB[\"GAS_PRICE_TRACKER\"] = \"gas_price_tracker\";\n  TAB[\"LIQUIDITY_SOURCES\"] = \"liquidity_sources\";\n})(TAB || (TAB = {}));\n\nvar highlight = function highlight(theme) {\n  return keyframes([\"0%{box-shadow:0 0 0 0 \", \";}70%{box-shadow:0 0 0 2px \", \";}100%{box-shadow:0 0 0 0 \", \";}\"], theme.primary, theme.primary, theme.primary);\n};\n\nexport var AppBodyWrapped = styled(BodyWrapper).withConfig({\n  displayName: \"SwapV2__AppBodyWrapped\",\n  componentId: \"sc-84irps-1\"\n})([\"box-shadow:0px 4px 16px rgba(0,0,0,0.04);z-index:\", \";padding:16px 16px 24px;margin-top:0;&[data-highlight='true']{animation:\", \" 2s 2 alternate ease-in-out;}\"], Z_INDEXS.SWAP_FORM, function (_ref3) {\n  var theme = _ref3.theme;\n  return highlight(theme);\n});\n_c5 = AppBodyWrapped;\nvar SwitchLocaleLinkWrapper = styled.div.withConfig({\n  displayName: \"SwapV2__SwitchLocaleLinkWrapper\",\n  componentId: \"sc-84irps-2\"\n})([\"margin-bottom:30px;\", \"\"], function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.mediaWidth.upToMedium(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 0px;\\n\"])));\n});\n_c6 = SwitchLocaleLinkWrapper;\nvar RoutingIconWrapper = styled(RoutingIcon).withConfig({\n  displayName: \"SwapV2__RoutingIconWrapper\",\n  componentId: \"sc-84irps-3\"\n})([\"height:27px;width:27px;margin-right:10px;path{fill:\", \" !important;}\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.subText;\n});\nexport default function Swap(_ref6) {\n  _s();\n\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _formattedAmounts, _parsedAmounts$indepe3, _trade$swaps, _tradeComparer$tradeS, _tradeComparer$tradeS2;\n\n  var history = _ref6.history;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      rotate = _useState2[0],\n      setRotate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showInverted = _useState4[0],\n      setShowInverted = _useState4[1];\n\n  var isShowLiveChart = useShowLiveChart();\n  var isShowTokenInfoSetting = useShowTokenInfo();\n  var qs = useParsedQueryString();\n  var allDexes = useAllDexes();\n\n  var _useTutorialSwapGuide = useTutorialSwapGuide(),\n      _useTutorialSwapGuide2 = _slicedToArray(_useTutorialSwapGuide, 1),\n      _useTutorialSwapGuide3 = _useTutorialSwapGuide2[0].show,\n      isShowTutorial = _useTutorialSwapGuide3 === void 0 ? false : _useTutorialSwapGuide3;\n\n  var refSuggestPair = useRef(null);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showingPairSuggestionImport = _useState6[0],\n      setShowingPairSuggestionImport = _useState6[1]; // show modal import when click pair suggestion\n\n\n  var shouldHighlightSwapBox = qs.highlightBox === 'true';\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isSelectCurencyMannual = _useState8[0],\n      setIsSelectCurencyMannual = _useState8[1]; // true when: select token input, output mannualy or click rotate token.\n  // else select via url\n\n\n  var _useState9 = useState(TAB.SWAP),\n      _useState10 = _slicedToArray(_useState9, 2),\n      activeTab = _useState10[0],\n      setActiveTab = _useState10[1];\n\n  var loadedUrlParams = useDefaultsFromURLSearch(); // token warning stuff\n\n  var _ref7 = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)],\n      loadedInputCurrency = _ref7[0],\n      loadedOutputCurrency = _ref7[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dismissTokenWarning = _useState12[0],\n      setDismissTokenWarning = _useState12[1];\n\n  var urlLoadedTokens = useMemo(function () {\n    var _filter, _ref8;\n\n    return (_filter = (_ref8 = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref8 === void 0 ? void 0 : _ref8.filter(function (c) {\n      return c instanceof Token;\n    })) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]); // dismiss warning if all imported tokens are in active lists\n\n  var defaultTokens = useAllTokens();\n  var importTokensNotInDefault = urlLoadedTokens && urlLoadedTokens.filter(function (token) {\n    return !Boolean(token.address in defaultTokens);\n  });\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account,\n      chainId = _useActiveWeb3React.chainId;\n\n  var theme = useTheme(); // toggle wallet when disconnected\n\n  var toggleWalletModal = useWalletModalToggle(); // for expert mode\n\n  var toggleSettings = useToggleTransactionSettingsMenu();\n\n  var _useExpertModeManager = useExpertModeManager(),\n      _useExpertModeManager2 = _slicedToArray(_useExpertModeManager, 1),\n      isExpertMode = _useExpertModeManager2[0]; // get custom setting values for user\n  //  const [allowedSlippage] = useUserSlippageTolerance()\n  // swap state\n\n\n  var _useSwapState = useSwapState(),\n      independentField = _useSwapState.independentField,\n      typedValue = _useSwapState.typedValue,\n      recipient = _useSwapState.recipient,\n      feeConfig = _useSwapState.feeConfig,\n      INPUT = _useSwapState[Field.INPUT],\n      OUTPUT = _useSwapState[Field.OUTPUT];\n\n  var _useDerivedSwapInfoV = useDerivedSwapInfoV2(),\n      currencies = _useDerivedSwapInfoV.currencies,\n      tradeComparer = _useDerivedSwapInfoV.tradeComparer,\n      onRefresh = _useDerivedSwapInfoV.onRefresh,\n      loadingAPI = _useDerivedSwapInfoV.loading,\n      isPairNotfound = _useDerivedSwapInfoV.isPairNotfound;\n\n  var _useProAmmDerivedSwap = useProAmmDerivedSwapInfo(),\n      _useProAmmDerivedSwap2 = _useProAmmDerivedSwap.trade,\n      tradeState = _useProAmmDerivedSwap2.state,\n      trade = _useProAmmDerivedSwap2.trade,\n      allowedSlippage = _useProAmmDerivedSwap.allowedSlippage,\n      currencyBalances = _useProAmmDerivedSwap.currencyBalances,\n      parsedAmount = _useProAmmDerivedSwap.parsedAmount,\n      swapInputError = _useProAmmDerivedSwap.inputError; //console.log(\"swapInputErrorswapInputErrorswapInputErrorswapInputError\",swapInputError)\n\n\n  var comparedDex = useMemo(function () {\n    return allDexes === null || allDexes === void 0 ? void 0 : allDexes.find(function (dex) {\n      return dex.id === (tradeComparer === null || tradeComparer === void 0 ? void 0 : tradeComparer.comparedDex);\n    });\n  }, [allDexes, tradeComparer]);\n  var currencyIn = currencies[Field.INPUT];\n  var currencyOut = currencies[Field.OUTPUT];\n\n  var _useWrapCallback = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue),\n      wrapType = _useWrapCallback.wrapType,\n      onWrap = _useWrapCallback.execute,\n      wrapInputError = _useWrapCallback.inputError;\n\n  var showWrap = wrapType !== WrapType.NOT_APPLICABLE; // const trade = showWrap ? undefined : Trade\n  // const parsedAmounts = showWrap\n  //   ? {\n  //       [Field.INPUT]: parsedAmount,\n  //       [Field.OUTPUT]: parsedAmount,\n  //     }\n  //   : {\n  //       [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n  //       [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n  //     }\n\n  var parsedAmounts = useMemo(function () {\n    var _ref9, _ref10;\n\n    return showWrap ? (_ref9 = {}, _defineProperty(_ref9, Field.INPUT, parsedAmount), _defineProperty(_ref9, Field.OUTPUT, parsedAmount), _ref9) : (_ref10 = {}, _defineProperty(_ref10, Field.INPUT, independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount), _defineProperty(_ref10, Field.OUTPUT, independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount), _ref10);\n  }, [independentField, parsedAmount, showWrap, trade]);\n\n  var _useSwapActionHandler = useSwapActionHandlers(),\n      onSwitchTokensV2 = _useSwapActionHandler.onSwitchTokensV2,\n      onCurrencySelection = _useSwapActionHandler.onCurrencySelection,\n      onResetSelectCurrency = _useSwapActionHandler.onResetSelectCurrency,\n      onUserInput = _useSwapActionHandler.onUserInput,\n      onChangeRecipient = _useSwapActionHandler.onChangeRecipient,\n      onChangeTrade = _useSwapActionHandler.onChangeTrade; // reset recipient\n\n\n  useEffect(function () {\n    onChangeRecipient(null);\n  }, [onChangeRecipient, isExpertMode]); // useEffect(() => {\n  //   // Save current trade to store\n  //   onChangeTrade(trade)\n  // }, [trade, onChangeTrade])\n\n  var handleRecipientChange = function handleRecipientChange(value) {\n    if (recipient === null && value !== null) {\n      mixpanelHandler(MIXPANEL_TYPE.ADD_RECIPIENT_CLICKED);\n    }\n\n    onChangeRecipient(value);\n  };\n\n  var isValid = !swapInputError;\n  var dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  var handleTypeInput = useCallback(function (value) {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  var handleTypeOutput = useCallback(function () {// ...\n  }, []); // reset if they close warning without tokens in params\n\n  var handleDismissTokenWarning = useCallback(function () {\n    if (showingPairSuggestionImport) {\n      setShowingPairSuggestionImport(false);\n    } else {\n      setDismissTokenWarning(true);\n    }\n  }, [showingPairSuggestionImport]);\n  var handleConfirmTokenWarning = useCallback(function () {\n    handleDismissTokenWarning();\n\n    if (showingPairSuggestionImport) {\n      var _refSuggestPair$curre;\n\n      (_refSuggestPair$curre = refSuggestPair.current) === null || _refSuggestPair$curre === void 0 ? void 0 : _refSuggestPair$curre.onConfirmImportToken(); // callback from children\n    }\n  }, [handleDismissTokenWarning, showingPairSuggestionImport]); // modal and loading\n\n  var _useState13 = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      _useState14$ = _useState14[0],\n      showConfirm = _useState14$.showConfirm,\n      tradeToConfirm = _useState14$.tradeToConfirm,\n      swapErrorMessage = _useState14$.swapErrorMessage,\n      attemptingTxn = _useState14$.attemptingTxn,\n      txHash = _useState14$.txHash,\n      setSwapState = _useState14[1];\n\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts);\n  var userHasSpecifiedInputOutput = Boolean(currencyIn && currencyOut && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  var noRoute = !(trade !== null && trade !== void 0 && (_trade$swaps = trade.swaps) !== null && _trade$swaps !== void 0 && _trade$swaps.length); // check whether the user has approved the router on the input token\n  //const [approval, approveCallback] = useApproveCallbackFromTradeV2(trade, allowedSlippage)\n\n  var _useProAmmApproveCall = useProAmmApproveCallback(trade, basisPointsToPercent(allowedSlippage)),\n      _useProAmmApproveCall2 = _slicedToArray(_useProAmmApproveCall, 2),\n      approvalState = _useProAmmApproveCall2[0],\n      approveCallback = _useProAmmApproveCall2[1]; //console.log(\"approvalapprovalapprovalapprovalapproval\",approval);\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      approvalSubmitted = _useState16[0],\n      setApprovalSubmitted = _useState16[1];\n\n  useEffect(function () {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n\n    if (approvalState === ApprovalState.NOT_APPROVED) {\n      setApprovalSubmitted(false);\n    }\n  }, [approvalState, approvalSubmitted]);\n  var handleRotateClick = useCallback(function () {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    setRotate(function (prev) {\n      return !prev;\n    });\n    onSwitchTokensV2();\n    setIsSelectCurencyMannual(true);\n  }, [onSwitchTokensV2]);\n  var maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]); // the callback to execute the swap\n\n  var _useSwapCallback = useSwapCallback(trade, allowedSlippage, recipient),\n      swapCallback = _useSwapCallback.callback,\n      swapCallbackError = _useSwapCallback.error;\n\n  var handleSwap = useCallback(function () {\n    if (!swapCallback) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm: tradeToConfirm,\n      showConfirm: showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(function (hash) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n    }).catch(function (error) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm: tradeToConfirm,\n        showConfirm: showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [tradeToConfirm, showConfirm, swapCallback]); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  var showApproveFlow = !swapInputError && (approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING || approvalSubmitted && approvalState === ApprovalState.APPROVED);\n  var handleConfirmDismiss = useCallback(function () {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm: tradeToConfirm,\n      attemptingTxn: attemptingTxn,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash\n    }); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  var handleAcceptChanges = useCallback(function () {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage: swapErrorMessage,\n      txHash: txHash,\n      attemptingTxn: attemptingTxn,\n      showConfirm: showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  var handleInputSelect = useCallback(function (inputCurrency) {\n    setIsSelectCurencyMannual(true);\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  var handleMaxInput = useCallback(function () {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n  var handleHalfInput = useCallback(function () {\n    var _currencyBalances$Fie;\n\n    onUserInput(Field.INPUT, ((_currencyBalances$Fie = currencyBalances[Field.INPUT]) === null || _currencyBalances$Fie === void 0 ? void 0 : _currencyBalances$Fie.divide(2).toExact()) || '');\n  }, [currencyBalances, onUserInput]);\n  var handleOutputSelect = useCallback(function (outputCurrency) {\n    setIsSelectCurencyMannual(true);\n    onCurrencySelection(Field.OUTPUT, outputCurrency);\n  }, [onCurrencySelection]);\n  var isLoading = loadingAPI || (!currencyBalances[Field.INPUT] || !currencyBalances[Field.OUTPUT]) && userHasSpecifiedInputOutput && !trade;\n\n  var _useMixpanel = useMixpanel(trade, currencies),\n      mixpanelHandler = _useMixpanel.mixpanelHandler;\n\n  var mixpanelSwapInit = function mixpanelSwapInit() {\n    mixpanelHandler(MIXPANEL_TYPE.SWAP_INITIATED);\n  };\n  /** check url params format `/swap/network/x-to-y` and then auto select token input\n   * - Flow: check network first and find token pairs (x vs y)\n   */\n\n\n  var params = useParams();\n\n  var getUrlMatchParams = function getUrlMatchParams() {\n    var fromCurrency = (params.fromCurrency || '').toLowerCase();\n    var toCurrency = (params.toCurrency || '').toLowerCase();\n    var network = convertToSlug(params.network || '');\n    return {\n      fromCurrency: fromCurrency,\n      toCurrency: toCurrency,\n      network: network\n    };\n  };\n\n  var _useActiveNetwork = useActiveNetwork(),\n      changeNetwork = _useActiveNetwork.changeNetwork;\n\n  var refIsCheckNetworkAutoSelect = useRef(false); // has done check network\n\n  var refIsImportUserToken = useRef(false);\n\n  var findToken = function findToken(keyword) {\n    var nativeToken = nativeOnChain(chainId);\n\n    if (keyword === getSymbolSlug(nativeToken)) {\n      return nativeToken;\n    }\n\n    return filterTokensWithExactKeyword(Object.values(defaultTokens), keyword)[0];\n  };\n\n  var navigate = useCallback(function (url) {\n    var newQs = _objectSpread({}, qs); // /swap/net/symA-to-symB?inputCurrency= addressC/symC &outputCurrency= addressD/symD\n\n\n    delete newQs.outputCurrency;\n    delete newQs.inputCurrency;\n    delete newQs.networkId;\n    history.push(\"\".concat(url, \"?\").concat(stringify(newQs))); // keep query params\n  }, [history, qs]);\n\n  function findTokenPairFromUrl() {\n    var _getUrlMatchParams = getUrlMatchParams(),\n        fromCurrency = _getUrlMatchParams.fromCurrency,\n        toCurrency = _getUrlMatchParams.toCurrency,\n        network = _getUrlMatchParams.network;\n\n    if (!fromCurrency || !network) return;\n    var compareNetwork = getNetworkSlug(chainId);\n\n    if (compareNetwork && network !== compareNetwork) {\n      // when select change network => force get new network\n      network = compareNetwork;\n      navigate(\"/swap/\".concat(network, \"/\").concat(fromCurrency).concat(toCurrency ? \"-to-\".concat(toCurrency) : ''));\n    }\n\n    var isSame = fromCurrency && fromCurrency === toCurrency;\n\n    if (!toCurrency || isSame) {\n      // net/symbol\n      var _fromToken = findToken(fromCurrency);\n\n      if (_fromToken) {\n        onCurrencySelection(Field.INPUT, _fromToken);\n        if (isSame) navigate(\"/swap/\".concat(network, \"/\").concat(fromCurrency));\n      } else navigate('/swap');\n\n      return;\n    }\n\n    var isAddress1 = isAddressString(fromCurrency);\n    var isAddress2 = isAddressString(toCurrency); // net/add-to-add\n\n    if (isAddress1 && isAddress2) {\n      var _fromToken2 = findToken(fromCurrency);\n\n      var _toToken = findToken(toCurrency);\n\n      if (_fromToken2 && _toToken) {\n        navigate(\"/swap/\".concat(network, \"/\").concat(getSymbolSlug(_fromToken2), \"-to-\").concat(getSymbolSlug(_toToken)));\n        onCurrencySelection(Field.INPUT, _fromToken2);\n        onCurrencySelection(Field.OUTPUT, _toToken);\n      } else navigate('/swap');\n\n      return;\n    } // sym-to-sym\n\n\n    fromCurrency = convertSymbol(network, fromCurrency);\n    toCurrency = convertSymbol(network, toCurrency);\n    var fromToken = findToken(fromCurrency);\n    var toToken = findToken(toCurrency);\n\n    if (!toToken || !fromToken) {\n      navigate('/swap');\n      return;\n    }\n\n    onCurrencySelection(Field.INPUT, fromToken);\n    onCurrencySelection(Field.OUTPUT, toToken);\n  }\n\n  var checkAutoSelectTokenFromUrl = function checkAutoSelectTokenFromUrl() {\n    // check case:  `/swap/net/sym-to-sym` or `/swap/net/sym` is valid\n    var _getUrlMatchParams2 = getUrlMatchParams(),\n        fromCurrency = _getUrlMatchParams2.fromCurrency,\n        network = _getUrlMatchParams2.network;\n\n    if (!fromCurrency || !network) return;\n    var findChainId = SUPPORTED_NETWORKS.find(function (chainId) {\n      return NETWORKS_INFO[chainId].route === network;\n    });\n\n    if (!findChainId) {\n      return navigate('/swap');\n    }\n\n    if (findChainId !== chainId) {\n      changeNetwork(findChainId, function () {\n        refIsCheckNetworkAutoSelect.current = true;\n      }, function () {\n        navigate('/swap');\n      });\n    } else {\n      refIsCheckNetworkAutoSelect.current = true;\n    }\n  };\n\n  var syncUrl = useCallback(function (currencyIn, currencyOut) {\n    var symbolIn = getSymbolSlug(currencyIn);\n    var symbolOut = getSymbolSlug(currencyOut);\n\n    if (symbolIn && symbolOut && chainId) {\n      navigate(\"/swap/\".concat(getNetworkSlug(chainId), \"/\").concat(symbolIn, \"-to-\").concat(symbolOut));\n    }\n  }, [navigate, chainId]);\n  var onSelectSuggestedPair = useCallback(function (fromToken, toToken, amount) {\n    if (fromToken) onCurrencySelection(Field.INPUT, fromToken);\n    if (toToken) onCurrencySelection(Field.OUTPUT, toToken);\n    if (amount) handleTypeInput(amount);\n  }, [handleTypeInput, onCurrencySelection]);\n  var tokenImports = useUserAddedTokens();\n  var prevTokenImports = usePrevious(tokenImports) || [];\n  useEffect(function () {\n    var _currencyIn$wrapped, _currencyOut$wrapped;\n\n    var _getUrlMatchParams3 = getUrlMatchParams(),\n        network = _getUrlMatchParams3.network;\n\n    var compareNetwork = getNetworkSlug(chainId);\n    var isChangeNetwork = compareNetwork !== network;\n    if (isChangeNetwork) return; // when import/remove token\n\n    var isRemoved = (prevTokenImports === null || prevTokenImports === void 0 ? void 0 : prevTokenImports.length) > tokenImports.length;\n    var addressIn = currencyIn === null || currencyIn === void 0 ? void 0 : (_currencyIn$wrapped = currencyIn.wrapped) === null || _currencyIn$wrapped === void 0 ? void 0 : _currencyIn$wrapped.address;\n    var addressOut = currencyOut === null || currencyOut === void 0 ? void 0 : (_currencyOut$wrapped = currencyOut.wrapped) === null || _currencyOut$wrapped === void 0 ? void 0 : _currencyOut$wrapped.address;\n\n    if (isRemoved) {\n      // removed token => deselect input\n      var tokenRemoved = prevTokenImports.filter(function (token) {\n        return !tokenImports.find(function (token2) {\n          return token2.address === token.address;\n        });\n      });\n      tokenRemoved.forEach(function (_ref11) {\n        var address = _ref11.address;\n\n        if (address === addressIn || !currencyIn) {\n          onResetSelectCurrency(Field.INPUT);\n        }\n\n        if (address === addressOut || !currencyOut) {\n          onResetSelectCurrency(Field.OUTPUT);\n        }\n      });\n    } // import token\n    else if (tokenImports.find(function (_ref12) {\n      var address = _ref12.address;\n      return address === addressIn || address === addressOut;\n    })) {\n      refIsImportUserToken.current = true;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [tokenImports]);\n  var initialTotalTokenDefault = useRef(null);\n  useEffect(function () {\n    checkAutoSelectTokenFromUrl();\n    initialTotalTokenDefault.current = Object.keys(defaultTokens).length; // it will be equal with tokenImports.length\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var isLoadedTokenDefault = account ? Object.keys(defaultTokens).length > tokenImports.length : initialTotalTokenDefault.current !== null && Object.keys(defaultTokens).length > initialTotalTokenDefault.current; //\n\n  useEffect(function () {\n    /**\n     * defaultTokens change only when:\n     * - the first time get data\n     * - change network\n     * - import/remove token */\n    if (refIsCheckNetworkAutoSelect.current && !refIsImportUserToken.current && isLoadedTokenDefault) {\n      findTokenPairFromUrl();\n    }\n\n    refIsImportUserToken.current = false; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultTokens, refIsCheckNetworkAutoSelect.current]); // useEffect(() => {\n  //   if (isSelectCurencyMannual) syncUrl(currencyIn, currencyOut) // when we select token manual\n  // }, [currencyIn, currencyOut, isSelectCurencyMannual, syncUrl])\n  // swap?inputCurrency=xxx&outputCurrency=yyy. xxx yyy not exist in chain => remove params => select default pair\n\n  var checkParamsWrong = function checkParamsWrong() {\n    if (isPairNotfound && !currencyIn && !currencyOut) {\n      var newQuery = _objectSpread({}, qs);\n\n      delete newQuery.inputCurrency;\n      delete newQuery.outputCurrency;\n      history.replace({\n        search: stringify(newQuery)\n      });\n    }\n  };\n\n  var refCheckParamWrong = useRef(checkParamsWrong);\n  refCheckParamWrong.current = checkParamsWrong;\n  useEffect(function () {\n    refCheckParamWrong.current();\n  }, [chainId]);\n  useEffect(function () {\n    if (isExpertMode) {\n      mixpanelHandler(MIXPANEL_TYPE.ADVANCED_MODE_ON);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isExpertMode]);\n\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n      _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 2),\n      rawSlippage = _useUserSlippageToler2[0],\n      setRawSlippage = _useUserSlippageToler2[1];\n\n  var isStableCoinSwap = (INPUT === null || INPUT === void 0 ? void 0 : INPUT.currencyId) && (OUTPUT === null || OUTPUT === void 0 ? void 0 : OUTPUT.currencyId) && chainId && STABLE_COINS_ADDRESS[chainId].includes(INPUT === null || INPUT === void 0 ? void 0 : INPUT.currencyId) && STABLE_COINS_ADDRESS[chainId].includes(OUTPUT === null || OUTPUT === void 0 ? void 0 : OUTPUT.currencyId);\n  var rawSlippageRef = useRef(rawSlippage);\n  rawSlippageRef.current = rawSlippage;\n  useEffect(function () {\n    if (isStableCoinSwap && rawSlippageRef.current > 10) {\n      setRawSlippage(10);\n    }\n\n    if (!isStableCoinSwap && rawSlippageRef.current === 10) {\n      setRawSlippage(50);\n    }\n  }, [isStableCoinSwap, setRawSlippage]);\n  var shareUrl = useMemo(function () {\n    return \"\".concat(window.location.origin, \"/swap?networkId=\").concat(chainId).concat(currencyIn && currencyOut ? \"&\".concat(stringify({\n      inputCurrency: currencyId(currencyIn, chainId),\n      outputCurrency: currencyId(currencyOut, chainId)\n    })) : '');\n  }, [currencyIn, currencyOut, chainId]); // const { isInWhiteList: isPairInWhiteList, canonicalUrl } = checkPairInWhiteList(\n  //   chainId,\n  //   getSymbolSlug(currencyIn),\n  //   getSymbolSlug(currencyOut),\n  // )\n\n  var shouldRenderTokenInfo = isShowTokenInfoSetting && currencyIn && currencyOut;\n  var isShowModalImportToken = isLoadedTokenDefault && importTokensNotInDefault.length > 0 && (!dismissTokenWarning || showingPairSuggestionImport);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: isShowModalImportToken,\n      tokens: importTokensNotInDefault,\n      onConfirm: handleConfirmTokenWarning,\n      onDismiss: handleDismissTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(SwapFormWrapper, {\n          isShowTutorial: isShowTutorial,\n          children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n            mb: '16px',\n            children: [/*#__PURE__*/_jsxDEV(TabContainer, {\n              children: /*#__PURE__*/_jsxDEV(TabWrapper, {\n                children: /*#__PURE__*/_jsxDEV(Tab, {\n                  onClick: function onClick() {\n                    return setActiveTab(TAB.SWAP);\n                  },\n                  isActive: activeTab === TAB.SWAP,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 20,\n                    fontWeight: 500,\n                    children:\n                    /*i18n*/\n                    i18n._(\"Swap\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 781,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SwapFormActions, {\n              children: [chainId !== ChainId.ETHW && /*#__PURE__*/_jsxDEV(MobileTokenInfo, {\n                currencies: currencies,\n                onClick: function onClick() {\n                  return setActiveTab(function (prev) {\n                    return prev === TAB.INFO ? TAB.SWAP : TAB.INFO;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ShareButtonWithModal, {\n                url: shareUrl,\n                onShared: function onShared() {\n                  mixpanelHandler(MIXPANEL_TYPE.TOKEN_SWAP_LINK_SHARED);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledActionButtonSwapForm, {\n                active: activeTab === TAB.SETTINGS,\n                onClick: function onClick() {\n                  return setActiveTab(function (prev) {\n                    return prev === TAB.SETTINGS ? TAB.SWAP : TAB.SETTINGS;\n                  });\n                },\n                \"aria-label\": \"Swap Settings\",\n                children: /*#__PURE__*/_jsxDEV(MouseoverTooltip, {\n                  text: !isExpertMode ?\n                  /*i18n*/\n                  i18n._(\"Settings\") :\n                  /*i18n*/\n                  i18n._(\"Advanced mode is on!\"),\n                  placement: \"top\",\n                  width: \"fit-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: TutorialIds.BUTTON_SETTING_SWAP_FORM,\n                    children: /*#__PURE__*/_jsxDEV(TransactionSettingsIcon, {\n                      fill: isExpertMode ? theme.warning : theme.subText\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), chainId !== ChainId.ETHW && /*#__PURE__*/_jsxDEV(RowBetween, {\n            mb: '16px',\n            children: /*#__PURE__*/_jsxDEV(PairSuggestion, {\n              ref: refSuggestPair,\n              onSelectSuggestedPair: onSelectSuggestedPair,\n              setShowModalImportToken: setShowingPairSuggestionImport\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AppBodyWrapped, {\n            \"data-highlight\": shouldHighlightSwapBox,\n            id: TutorialIds.SWAP_FORM,\n            children: [activeTab === TAB.SWAP && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Wrapper, {\n                id: TutorialIds.SWAP_FORM_CONTENT,\n                children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n                  isOpen: showConfirm,\n                  trade: trade,\n                  originalTrade: tradeToConfirm,\n                  onAcceptChanges: handleAcceptChanges,\n                  attemptingTxn: attemptingTxn,\n                  txHash: txHash,\n                  recipient: recipient,\n                  allowedSlippage: allowedSlippage,\n                  onConfirm: handleSwap,\n                  swapErrorMessage: swapErrorMessage,\n                  onDismiss: handleConfirmDismiss,\n                  tokenAddToMetaMask: currencyOut\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  flexDirection: \"column\",\n                  sx: {\n                    gap: '0.75rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                    value: formattedAmounts[Field.INPUT],\n                    positionMax: \"top\",\n                    showMaxButton: true,\n                    currency: currencyIn,\n                    onUserInput: handleTypeInput,\n                    onMax: handleMaxInput,\n                    onHalf: handleHalfInput,\n                    onCurrencySelect: handleInputSelect,\n                    otherCurrency: currencyOut,\n                    id: \"swap-currency-input\",\n                    showCommonBases: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n                    justify: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(Flex, {\n                      alignItems: \"center\",\n                      children: !showWrap && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(TradePrice, {\n                          price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n                          showInverted: showInverted,\n                          setShowInverted: setShowInverted\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 868,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 864,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                      rotated: rotate,\n                      onClick: handleRotateClick,\n                      children: /*#__PURE__*/_jsxDEV(SwapIcon, {\n                        size: 24,\n                        color: theme.subText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 878,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'relative'\n                    },\n                    children: [(tradeComparer === null || tradeComparer === void 0 ? void 0 : (_tradeComparer$tradeS = tradeComparer.tradeSaved) === null || _tradeComparer$tradeS === void 0 ? void 0 : _tradeComparer$tradeS.usd) && comparedDex && /*#__PURE__*/_jsxDEV(KyberTag, {\n                      children: [/*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"You save\"\n                      }, void 0, false, void 0, this), ' ', formattedNum(tradeComparer.tradeSaved.usd, true) + \" (\".concat((tradeComparer === null || tradeComparer === void 0 ? void 0 : (_tradeComparer$tradeS2 = tradeComparer.tradeSaved) === null || _tradeComparer$tradeS2 === void 0 ? void 0 : _tradeComparer$tradeS2.percent) && (tradeComparer.tradeSaved.percent < 0.01 ? '<0.01' : tradeComparer.tradeSaved.percent.toFixed(2)), \"%)\"), /*#__PURE__*/_jsxDEV(InfoHelper, {\n                        text: /*#__PURE__*/_jsxDEV(Text, {\n                          children: [/*#__PURE__*/_jsxDEV(Trans, {\n                            id: \"The amount you save compared to <0>{0}</0>.\",\n                            values: {\n                              0: comparedDex.name\n                            },\n                            components: {\n                              0: /*#__PURE__*/_jsxDEV(Text, {\n                                as: \"span\",\n                                color: theme.warning\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 897,\n                                columnNumber: 37\n                              }, this)\n                            }\n                          }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n                            id: \"<0>VoxelSwap</0> gets you the best token rates\",\n                            components: {\n                              0: /*#__PURE__*/_jsxDEV(Text, {\n                                color: theme.primary,\n                                fontWeight: 500,\n                                as: \"span\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 903,\n                                columnNumber: 37\n                              }, this)\n                            }\n                          }, void 0, false, void 0, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 894,\n                          columnNumber: 33\n                        }, this),\n                        size: 14,\n                        color: theme.apr\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 892,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 883,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                      disabledInput: true,\n                      value: formattedAmounts[Field.OUTPUT],\n                      onUserInput: handleTypeOutput,\n                      showMaxButton: false,\n                      currency: currencyOut,\n                      onCurrencySelect: handleOutputSelect,\n                      otherCurrency: currencyIn,\n                      id: \"swap-currency-output\",\n                      showCommonBases: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 916,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 23\n                  }, this), isExpertMode && !showWrap && /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n                    id: \"recipient\",\n                    value: recipient,\n                    onChange: onChangeRecipient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 25\n                  }, this), !showWrap && /*#__PURE__*/_jsxDEV(Flex, {\n                    alignItems: \"center\",\n                    fontSize: 12,\n                    color: theme.subText,\n                    onClick: toggleSettings,\n                    width: \"fit-content\",\n                    children: /*#__PURE__*/_jsxDEV(ClickableText, {\n                      color: theme.subText,\n                      fontWeight: 500,\n                      children: [/*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Max Slippage:\"\n                      }, void 0, false, void 0, this), \"\\xA0\", allowedSlippage / 100, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 941,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 934,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 21\n                }, this), Number(trade === null || trade === void 0 ? void 0 : trade.priceImpact) === -1 ? /*#__PURE__*/_jsxDEV(PriceImpactHigh, {\n                  children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                    color: theme.warning,\n                    size: 16,\n                    style: {\n                      marginRight: '10px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Unable to calculate Price Impact\"\n                  }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(InfoHelper, {\n                    text:\n                    /*i18n*/\n                    i18n._(\"Turn on Advanced Mode to trade\"),\n                    color: theme.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 954,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 23\n                }, this) : !!(trade !== null && trade !== void 0 && trade.priceImpact) && Number(trade.priceImpact) > 5 && /*#__PURE__*/_jsxDEV(PriceImpactHigh, {\n                  veryHigh: Number(trade === null || trade === void 0 ? void 0 : trade.priceImpact) > 15,\n                  children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                    color: Number(trade === null || trade === void 0 ? void 0 : trade.priceImpact) > 15 ? theme.red : theme.warning,\n                    size: 16,\n                    style: {\n                      marginRight: '10px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 27\n                  }, this), Number(trade === null || trade === void 0 ? void 0 : trade.priceImpact) > 15 ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Price Impact is Very High\"\n                  }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Price Impact is High\"\n                  }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(InfoHelper, {\n                    text: isExpertMode ?\n                    /*i18n*/\n                    i18n._(\"You have turned on Advanced Mode from settings. Trades with high price impact can be executed\") :\n                    /*i18n*/\n                    i18n._(\"Turn on Advanced Mode from settings to execute trades with high price impact\"),\n                    color: theme.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 959,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(BottomGrouping, {\n                  children: [!account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n                    onClick: toggleWalletModal,\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Connect Wallet\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 25\n                  }, this) : showWrap ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                    disabled: Boolean(wrapInputError),\n                    onClick: onWrap,\n                    children: wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ?\n                    /*i18n*/\n                    i18n._(\"Wrap\") : wrapType === WrapType.UNWRAP ?\n                    /*i18n*/\n                    i18n._(\"Unwrap\") : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 988,\n                    columnNumber: 25\n                  }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n                    style: {\n                      textAlign: 'center',\n                      borderRadius: '999px',\n                      padding: '12px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Insufficient liquidity for this trade.\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 994,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 993,\n                    columnNumber: 25\n                  }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n                    children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                      onClick: approveCallback,\n                      disabled: approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n                      width: \"48%\",\n                      altDisabledStyle: approvalState === ApprovalState.PENDING // show solid button while waiting\n                      ,\n                      confirmed: approvalState === ApprovalState.APPROVED,\n                      children: approvalState === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                        gap: \"6px\",\n                        justify: \"center\",\n                        children: [/*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Approving\"\n                        }, void 0, false, void 0, this), \" \", /*#__PURE__*/_jsxDEV(Loader, {\n                          stroke: \"white\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1009,\n                          columnNumber: 58\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1008,\n                        columnNumber: 31\n                      }, this) : approvalSubmitted && approvalState === ApprovalState.APPROVED ?\n                      /*i18n*/\n                      i18n._(\"Approved\") :\n                      /*i18n*/\n                      i18n._(\"Approve {0}\", {\n                        0: currencyIn === null || currencyIn === void 0 ? void 0 : currencyIn.symbol\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1000,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                      onClick: function onClick() {\n                        mixpanelSwapInit();\n\n                        if (isExpertMode) {\n                          handleSwap();\n                        } else {\n                          setSwapState({\n                            tradeToConfirm: trade,\n                            attemptingTxn: false,\n                            swapErrorMessage: undefined,\n                            showConfirm: true,\n                            txHash: undefined\n                          });\n                        }\n                      },\n                      width: \"48%\",\n                      id: \"swap-button\",\n                      disabled: !isValid || approvalState !== ApprovalState.APPROVED,\n                      children: /*#__PURE__*/_jsxDEV(Text, {\n                        fontSize: 16,\n                        fontWeight: 500,\n                        children: trade && Number(trade.priceImpact) > 5 ?\n                        /*i18n*/\n                        i18n._(\"Swap Anyway\") :\n                        /*i18n*/\n                        i18n._(\"Swap\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1036,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1017,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 999,\n                    columnNumber: 25\n                  }, this) : isLoading ? /*#__PURE__*/_jsxDEV(GreyCard, {\n                    style: {\n                      textAlign: 'center',\n                      borderRadius: '999px',\n                      padding: '12px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      color: theme.subText,\n                      fontSize: \"14px\",\n                      children: /*#__PURE__*/_jsxDEV(Dots, {\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Calculating best route\"\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1044,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1043,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1042,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(ButtonError, {\n                    onClick: function onClick() {\n                      mixpanelSwapInit();\n\n                      if (isExpertMode) {\n                        handleSwap();\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined\n                        });\n                      }\n                    },\n                    id: \"swap-button\",\n                    disabled: !isValid || !!swapCallbackError || !isExpertMode && trade && (Number(trade.priceImpact) > 15 || Number(trade.priceImpact) === -1),\n                    style: _objectSpread({\n                      border: 'none'\n                    }, !(!isValid || !!swapCallbackError || approvalState !== ApprovalState.APPROVED || !isExpertMode && trade && (Number(trade.priceImpact) > 15 || Number(trade.priceImpact) === -1)) && trade && (Number(trade.priceImpact) > 5 || Number(trade.priceImpact) === -1) ? {\n                      background: theme.red,\n                      color: theme.white\n                    } : {}),\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      fontWeight: 500,\n                      children: swapInputError ? swapInputError : trade && (Number(trade.priceImpact) > 5 || Number(trade.priceImpact) === -1) ?\n                      /*i18n*/\n                      i18n._(\"Swap Anyway\") :\n                      /*i18n*/\n                      i18n._(\"Swap\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1085,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 25\n                  }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(Column, {\n                    style: {\n                      marginTop: '1rem'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ProgressSteps, {\n                      steps: [approvalState === ApprovalState.APPROVED]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1096,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1095,\n                    columnNumber: 25\n                  }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n                    error: swapErrorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1099,\n                    columnNumber: 59\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 19\n              }, this)\n            }, void 0, false), activeTab === TAB.INFO && /*#__PURE__*/_jsxDEV(TokenInfo, {\n              currencies: currencies,\n              onBack: function onBack() {\n                return setActiveTab(TAB.SWAP);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 42\n            }, this), activeTab === TAB.SETTINGS && /*#__PURE__*/_jsxDEV(SettingsPanel, {\n              onBack: function onBack() {\n                return setActiveTab(TAB.SWAP);\n              },\n              onClickLiquiditySources: function onClickLiquiditySources() {\n                return setActiveTab(TAB.LIQUIDITY_SOURCES);\n              },\n              onClickGasPriceTracker: function onClickGasPriceTracker() {\n                return setActiveTab(TAB.GAS_PRICE_TRACKER);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 17\n            }, this), activeTab === TAB.GAS_PRICE_TRACKER && /*#__PURE__*/_jsxDEV(GasPriceTrackerPanel, {\n              onBack: function onBack() {\n                return setActiveTab(TAB.SETTINGS);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 17\n            }, this), activeTab === TAB.LIQUIDITY_SOURCES && /*#__PURE__*/_jsxDEV(LiquiditySourcesPanel, {\n              onBack: function onBack() {\n                return setActiveTab(TAB.SETTINGS);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), (isShowLiveChart || shouldRenderTokenInfo) && /*#__PURE__*/_jsxDEV(InfoComponentsWrapper, {\n          children: [isShowLiveChart && /*#__PURE__*/_jsxDEV(LiveChartWrapper, {\n            children: /*#__PURE__*/_jsxDEV(Suspense, {\n              fallback: /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: \"100%\",\n                baseColor: theme.background,\n                highlightColor: theme.buttonGray\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 31\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(LiveChart, {\n                onRotateClick: handleRotateClick,\n                currencies: currencies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 17\n          }, this), shouldRenderTokenInfo ? /*#__PURE__*/_jsxDEV(TokenInfoV2, {\n            currencyIn: currencyIn,\n            currencyOut: currencyOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 40\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(SwitchLocaleLinkWrapper, {\n          children: /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Swap, \"6+h0qxfgAJHPK2aw39UUdL7DE1Y=\", false, function () {\n  return [useShowLiveChart, useShowTokenInfo, useParsedQueryString, useAllDexes, useTutorialSwapGuide, useDefaultsFromURLSearch, useCurrency, useCurrency, useAllTokens, useActiveWeb3React, useTheme, useWalletModalToggle, useToggleTransactionSettingsMenu, useExpertModeManager, useSwapState, useDerivedSwapInfoV2, useProAmmDerivedSwapInfo, useWrapCallback, useSwapActionHandlers, useProAmmApproveCallback, useSwapCallback, useMixpanel, useParams, useActiveNetwork, useUserAddedTokens, usePrevious, useUserSlippageTolerance];\n});\n\n_c7 = Swap;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"LiveChart$lazy\");\n$RefreshReg$(_c2, \"LiveChart\");\n$RefreshReg$(_c3, \"Routing$lazy\");\n$RefreshReg$(_c4, \"Routing\");\n$RefreshReg$(_c5, \"AppBodyWrapped\");\n$RefreshReg$(_c6, \"SwitchLocaleLinkWrapper\");\n$RefreshReg$(_c7, \"Swap\");","map":{"version":3,"names":["ChainId","Token","JSBI","stringify","Suspense","lazy","useCallback","useEffect","useMemo","useRef","useState","AlertTriangle","Skeleton","useParams","Box","Flex","Text","styled","keyframes","AddressInputPanel","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","GreyCard","Column","CurrencyInputPanel","Swap","SwapIcon","TransactionSettingsIcon","InfoHelper","Loader","ProgressSteps","AutoRow","RowBetween","ShareButtonWithModal","SwitchLocaleLink","TokenWarningModal","MouseoverTooltip","TutorialIds","ConfirmSwapModal","GasPriceTrackerPanel","LiquiditySourcesPanel","MobileTokenInfo","PairSuggestion","SettingsPanel","TokenInfo","TokenInfoV2","TradePrice","ArrowWrapper","BottomGrouping","Container","Dots","InfoComponentsWrapper","KyberTag","LiveChartWrapper","PageWrapper","PriceImpactHigh","StyledActionButtonSwapForm","SwapCallbackError","SwapFormActions","SwapFormWrapper","Tab","TabContainer","TabWrapper","Wrapper","NETWORKS_INFO","SUPPORTED_NETWORKS","Z_INDEXS","STABLE_COINS_ADDRESS","nativeOnChain","useActiveWeb3React","useAllTokens","useCurrency","useActiveNetwork","ApprovalState","useProAmmApproveCallback","useMixpanel","MIXPANEL_TYPE","useParsedQueryString","usePrevious","useSwapCallback","useTheme","useWrapCallback","WrapType","BodyWrapper","ClickableText","useToggleTransactionSettingsMenu","useWalletModalToggle","useAllDexes","Field","useDefaultsFromURLSearch","useSwapActionHandlers","useSwapState","useDerivedSwapInfoV2","useProAmmDerivedSwapInfo","useTutorialSwapGuide","useExpertModeManager","useShowLiveChart","useShowTokenInfo","useUserAddedTokens","useUserSlippageTolerance","TYPE","formattedNum","isAddressString","basisPointsToPercent","currencyId","filterTokensWithExactKeyword","maxAmountSpend","convertToSlug","getNetworkSlug","getSymbolSlug","convertSymbol","LiveChart","Routing","TutorialIcon","TutorialSvg","theme","subText","TAB","highlight","primary","AppBodyWrapped","SWAP_FORM","SwitchLocaleLinkWrapper","div","mediaWidth","upToMedium","RoutingIconWrapper","RoutingIcon","history","rotate","setRotate","showInverted","setShowInverted","isShowLiveChart","isShowTokenInfoSetting","qs","allDexes","show","isShowTutorial","refSuggestPair","showingPairSuggestionImport","setShowingPairSuggestionImport","shouldHighlightSwapBox","highlightBox","isSelectCurencyMannual","setIsSelectCurencyMannual","SWAP","activeTab","setActiveTab","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","defaultTokens","importTokensNotInDefault","token","Boolean","address","account","chainId","toggleWalletModal","toggleSettings","isExpertMode","independentField","typedValue","recipient","feeConfig","INPUT","OUTPUT","currencies","tradeComparer","onRefresh","loadingAPI","loading","isPairNotfound","trade","tradeState","state","allowedSlippage","currencyBalances","parsedAmount","swapInputError","inputError","comparedDex","find","dex","id","currencyIn","currencyOut","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","parsedAmounts","inputAmount","outputAmount","onSwitchTokensV2","onCurrencySelection","onResetSelectCurrency","onUserInput","onChangeRecipient","onChangeTrade","handleRecipientChange","value","mixpanelHandler","ADD_RECIPIENT_CLICKED","isValid","dependentField","handleTypeInput","handleTypeOutput","handleDismissTokenWarning","handleConfirmTokenWarning","current","onConfirmImportToken","showConfirm","tradeToConfirm","undefined","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","userHasSpecifiedInputOutput","greaterThan","BigInt","noRoute","swaps","length","approvalState","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","NOT_APPROVED","handleRotateClick","prev","maxAmountInput","swapCallback","callback","swapCallbackError","error","handleSwap","then","hash","catch","message","showApproveFlow","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleHalfInput","divide","handleOutputSelect","outputCurrency","isLoading","mixpanelSwapInit","SWAP_INITIATED","params","getUrlMatchParams","fromCurrency","toLowerCase","toCurrency","network","changeNetwork","refIsCheckNetworkAutoSelect","refIsImportUserToken","findToken","keyword","nativeToken","Object","values","navigate","url","newQs","networkId","push","findTokenPairFromUrl","compareNetwork","isSame","fromToken","isAddress1","isAddress2","toToken","checkAutoSelectTokenFromUrl","findChainId","route","syncUrl","symbolIn","symbolOut","onSelectSuggestedPair","amount","tokenImports","prevTokenImports","isChangeNetwork","isRemoved","addressIn","wrapped","addressOut","tokenRemoved","token2","forEach","initialTotalTokenDefault","keys","isLoadedTokenDefault","checkParamsWrong","newQuery","replace","search","refCheckParamWrong","ADVANCED_MODE_ON","rawSlippage","setRawSlippage","isStableCoinSwap","includes","rawSlippageRef","shareUrl","window","location","origin","shouldRenderTokenInfo","isShowModalImportToken","ETHW","INFO","TOKEN_SWAP_LINK_SHARED","SETTINGS","BUTTON_SETTING_SWAP_FORM","warning","SWAP_FORM_CONTENT","gap","executionPrice","position","tradeSaved","usd","percent","toFixed","name","apr","Number","priceImpact","marginRight","text","red","WRAP","UNWRAP","textAlign","borderRadius","padding","symbol","border","background","color","white","marginTop","LIQUIDITY_SOURCES","GAS_PRICE_TRACKER","buttonGray"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/SwapV2/index.tsx"],"sourcesContent":["import { ChainId, Currency, CurrencyAmount, Token,TradeType } from '@kyberswap/ks-sdk-core'\nimport { Trade } from '@kyberswap/ks-sdk-elastic'\nimport { Trans, t } from '@lingui/macro'\nimport JSBI from 'jsbi'\nimport { stringify } from 'qs'\nimport { Suspense, lazy, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport Skeleton from 'react-loading-skeleton'\nimport { RouteComponentProps, useParams } from 'react-router-dom'\nimport { Box, Flex, Text } from 'rebass'\nimport styled, { DefaultTheme, keyframes } from 'styled-components'\n\nimport { ReactComponent as TutorialSvg } from 'assets/svg/play_circle_outline.svg'\nimport { ReactComponent as RoutingIcon } from 'assets/svg/routing-icon.svg'\nimport AddressInputPanel from 'components/AddressInputPanel'\n\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\nimport { GreyCard } from 'components/Card/index'\nimport Column from 'components/Column/index'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport { Swap as SwapIcon } from 'components/Icons'\nimport TransactionSettingsIcon from 'components/Icons/TransactionSettingsIcon'\nimport InfoHelper from 'components/InfoHelper'\nimport Loader from 'components/Loader'\nimport ProgressSteps from 'components/ProgressSteps'\nimport { AutoRow, RowBetween } from 'components/Row'\n//import { SEOSwap } from 'components/SEO'\nimport { ShareButtonWithModal } from 'components/ShareModal'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { TutorialIds } from 'components/Tutorial/TutorialSwap/constant'\n//import AdvancedSwapDetailsDropdown from 'components/swapv2/AdvancedSwapDetailsDropdown'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport GasPriceTrackerPanel from 'components/swapv2/GasPriceTrackerPanel'\nimport LiquiditySourcesPanel from 'components/swapv2/LiquiditySourcesPanel'\nimport MobileTokenInfo from 'components/swapv2/MobileTokenInfo'\nimport PairSuggestion, { PairSuggestionHandle } from 'components/swapv2/PairSuggestion'\n//import RefreshButton from 'components/swapv2/RefreshButton'\nimport SettingsPanel from 'components/swapv2/SwapSettingsPanel'\nimport TokenInfo from 'components/swapv2/TokenInfo'\nimport TokenInfoV2 from 'components/swapv2/TokenInfoV2'\nimport TradePrice from 'components/swapv2/TradePrice'\n//import TradeTypeSelection from 'components/swapv2/TradeTypeSelection'\nimport {\n  ArrowWrapper,\n  BottomGrouping,\n  Container,\n  Dots,\n  InfoComponentsWrapper,\n  KyberTag,\n  LiveChartWrapper,\n  PageWrapper,\n  PriceImpactHigh,\n  StyledActionButtonSwapForm,\n  SwapCallbackError,\n  SwapFormActions,\n  SwapFormWrapper,\n  Tab,\n  TabContainer,\n  TabWrapper,\n  Wrapper,\n} from 'components/swapv2/styleds'\nimport { NETWORKS_INFO, SUPPORTED_NETWORKS } from 'constants/networks'\nimport { Z_INDEXS } from 'constants/styles'\nimport { STABLE_COINS_ADDRESS, nativeOnChain } from 'constants/tokens'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTokens, useCurrency } from 'hooks/Tokens'\nimport { useActiveNetwork } from 'hooks/useActiveNetwork'\nimport { ApprovalState, useProAmmApproveCallback } from 'hooks/useApproveCallback'\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport usePrevious from 'hooks/usePrevious'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useTheme from 'hooks/useTheme'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { BodyWrapper } from 'pages/AppBody'\nimport { ClickableText } from 'pages/Pool/styleds'\nimport { useToggleTransactionSettingsMenu, useWalletModalToggle } from 'state/application/hooks'\nimport { useAllDexes } from 'state/customizeDexes/hooks'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useDerivedSwapInfoV2 } from 'state/swap/useAggregator'\nimport { useProAmmDerivedSwapInfo } from 'state/swap/proamm/hooks'\nimport { useTutorialSwapGuide } from 'state/tutorial/hooks'\nimport {\n  useExpertModeManager,\n  useShowLiveChart,\n  useShowTokenInfo,\n  useUserAddedTokens,\n  useUserSlippageTolerance,\n} from 'state/user/hooks'\nimport { TYPE } from 'theme'\nimport { formattedNum, isAddressString,basisPointsToPercent } from 'utils'\n//import { Aggregator } from 'utils/aggregator'\nimport { currencyId } from 'utils/currencyId'\nimport { filterTokensWithExactKeyword } from 'utils/filtering'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { convertToSlug, getNetworkSlug, getSymbolSlug } from 'utils/string'\nimport { convertSymbol } from 'utils/tokenInfo'\n\n\nconst LiveChart = lazy(() => import('components/LiveChart'))\nconst Routing = lazy(() => import('components/swapv2/Routing'))\nconst TutorialIcon = styled(TutorialSvg)`\n  width: 22px;\n  height: 22px;\n  path {\n    fill: ${({ theme }) => theme.subText};\n    stroke: ${({ theme }) => theme.subText};\n  }\n`\n\nenum TAB {\n  SWAP = 'swap',\n  INFO = 'info',\n  SETTINGS = 'settings',\n  GAS_PRICE_TRACKER = 'gas_price_tracker',\n  LIQUIDITY_SOURCES = 'liquidity_sources',\n  // LIMIT = 'limit'\n}\n\nconst highlight = (theme: DefaultTheme) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${theme.primary};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${theme.primary};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${theme.primary};\n  }\n`\n\nexport const AppBodyWrapped = styled(BodyWrapper)`\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.04);\n  z-index: ${Z_INDEXS.SWAP_FORM};\n  padding: 16px 16px 24px;\n  margin-top: 0;\n\n  &[data-highlight='true'] {\n    animation: ${({ theme }) => highlight(theme)} 2s 2 alternate ease-in-out;\n  }\n`\n\nconst SwitchLocaleLinkWrapper = styled.div`\n  margin-bottom: 30px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n  margin-bottom: 0px;\n`}\n`\n\nconst RoutingIconWrapper = styled(RoutingIcon)`\n  height: 27px;\n  width: 27px;\n  margin-right: 10px;\n  path {\n    fill: ${({ theme }) => theme.subText} !important;\n  }\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const [rotate, setRotate] = useState(false)\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const isShowLiveChart = useShowLiveChart()\n  const isShowTokenInfoSetting = useShowTokenInfo()\n  const qs = useParsedQueryString()\n  const allDexes = useAllDexes()\n  const [{ show: isShowTutorial = false }] = useTutorialSwapGuide()\n\n  const refSuggestPair = useRef<PairSuggestionHandle>(null)\n  const [showingPairSuggestionImport, setShowingPairSuggestionImport] = useState<boolean>(false) // show modal import when click pair suggestion\n\n  const shouldHighlightSwapBox = qs.highlightBox === 'true'\n\n  const [isSelectCurencyMannual, setIsSelectCurencyMannual] = useState(false) // true when: select token input, output mannualy or click rotate token.\n  // else select via url\n\n  const [activeTab, setActiveTab] = useState<TAB>(TAB.SWAP)\n\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !Boolean(token.address in defaultTokens)\n    })\n\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useTheme()\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleTransactionSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n//  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const {\n    independentField,\n    typedValue,\n    recipient,\n    feeConfig,\n    [Field.INPUT]: INPUT,\n    [Field.OUTPUT]: OUTPUT,\n  } = useSwapState()\n\n  const {\n   // v2Trade,\n  //  currencyBalances,\n  //  parsedAmount,\n      currencies,\n  //  inputError: swapInputError,\n    tradeComparer,\n    onRefresh,\n    loading: loadingAPI,\n    isPairNotfound,\n  } = useDerivedSwapInfoV2()\n\n  const {\n    trade: { state: tradeState, trade },\n    allowedSlippage,\n    currencyBalances,\n    parsedAmount,\n    inputError: swapInputError,\n  } = useProAmmDerivedSwapInfo()\n\n//console.log(\"swapInputErrorswapInputErrorswapInputErrorswapInputError\",swapInputError)\n  const comparedDex = useMemo(\n    () => allDexes?.find(dex => dex.id === tradeComparer?.comparedDex),\n    [allDexes, tradeComparer],\n  )\n  const currencyIn = currencies[Field.INPUT]\n  const currencyOut = currencies[Field.OUTPUT]\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n // const trade = showWrap ? undefined : Trade\n\n  // const parsedAmounts = showWrap\n  //   ? {\n  //       [Field.INPUT]: parsedAmount,\n  //       [Field.OUTPUT]: parsedAmount,\n  //     }\n  //   : {\n  //       [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n  //       [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n  //     }\n\n  const parsedAmounts = useMemo(\n    () =>\n      showWrap\n        ? {\n            [Field.INPUT]: parsedAmount,\n            [Field.OUTPUT]: parsedAmount,\n          }\n        : {\n            [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n            [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n          },\n    [independentField, parsedAmount, showWrap, trade],\n  )    \n\n  const {\n    onSwitchTokensV2,\n    onCurrencySelection,\n    onResetSelectCurrency,\n    onUserInput,\n    onChangeRecipient,\n    onChangeTrade,\n  } = useSwapActionHandlers()\n\n  // reset recipient\n  useEffect(() => {\n    onChangeRecipient(null)\n  }, [onChangeRecipient, isExpertMode])\n\n  // useEffect(() => {\n  //   // Save current trade to store\n  //   onChangeTrade(trade)\n  // }, [trade, onChangeTrade])\n\n  const handleRecipientChange = (value: string | null) => {\n    if (recipient === null && value !== null) {\n      mixpanelHandler(MIXPANEL_TYPE.ADD_RECIPIENT_CLICKED)\n    }\n    onChangeRecipient(value)\n  }\n\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback((): void => {\n    // ...\n  }, [])\n\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    if (showingPairSuggestionImport) {\n      setShowingPairSuggestionImport(false)\n    } else {\n      setDismissTokenWarning(true)\n    }\n  }, [showingPairSuggestionImport])\n\n  const handleConfirmTokenWarning = useCallback(() => {\n    handleDismissTokenWarning()\n    if (showingPairSuggestionImport) {\n      refSuggestPair.current?.onConfirmImportToken() // callback from children\n    }\n  }, [handleDismissTokenWarning, showingPairSuggestionImport])\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencyIn && currencyOut && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !trade?.swaps?.length\n\n  // check whether the user has approved the router on the input token\n  //const [approval, approveCallback] = useApproveCallbackFromTradeV2(trade, allowedSlippage)\n  const [approvalState, approveCallback] = useProAmmApproveCallback(trade, basisPointsToPercent(allowedSlippage))\n\n //console.log(\"approvalapprovalapprovalapprovalapproval\",approval);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n   // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n    if (approvalState === ApprovalState.NOT_APPROVED) {\n      setApprovalSubmitted(false)\n    }\n  }, [approvalState, approvalSubmitted])\n\n \n  const handleRotateClick = useCallback(() => {\n    setApprovalSubmitted(false) // reset 2 step UI for approvals\n    setRotate(prev => !prev)\n    onSwitchTokensV2()\n    setIsSelectCurencyMannual(true)\n  }, [onSwitchTokensV2])\n\n\n\n  const maxAmountInput: CurrencyAmount<Currency> | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [tradeToConfirm, showConfirm, swapCallback])\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED))\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency: Currency) => {\n      setIsSelectCurencyMannual(true)\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection],\n  )\n\n\n\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\n  }, [maxAmountInput, onUserInput])\n\n  const handleHalfInput = useCallback(() => {\n    onUserInput(Field.INPUT, currencyBalances[Field.INPUT]?.divide(2).toExact() || '')\n  }, [currencyBalances, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency: Currency) => {\n      setIsSelectCurencyMannual(true)\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n    },\n    [onCurrencySelection],\n  )\n\n  const isLoading =\n    loadingAPI ||\n    ((!currencyBalances[Field.INPUT] || !currencyBalances[Field.OUTPUT]) && userHasSpecifiedInputOutput && !trade)\n\n\n\n\n const { mixpanelHandler } = useMixpanel(trade, currencies)\n  const mixpanelSwapInit = () => {\n    mixpanelHandler(MIXPANEL_TYPE.SWAP_INITIATED)\n  }\n\n  /** check url params format `/swap/network/x-to-y` and then auto select token input\n   * - Flow: check network first and find token pairs (x vs y)\n   */\n\n  const params = useParams<{\n    fromCurrency: string\n    toCurrency: string\n    network: string\n  }>()\n\n  const getUrlMatchParams = () => {\n    const fromCurrency = (params.fromCurrency || '').toLowerCase()\n    const toCurrency = (params.toCurrency || '').toLowerCase()\n    const network: string = convertToSlug(params.network || '')\n    return { fromCurrency, toCurrency, network }\n  }\n\n  const { changeNetwork } = useActiveNetwork()\n  const refIsCheckNetworkAutoSelect = useRef<boolean>(false) // has done check network\n  const refIsImportUserToken = useRef<boolean>(false)\n\n  const findToken = (keyword: string) => {\n    const nativeToken = nativeOnChain(chainId as ChainId)\n    if (keyword === getSymbolSlug(nativeToken)) {\n      return nativeToken\n    }\n    return filterTokensWithExactKeyword(Object.values(defaultTokens), keyword)[0]\n  }\n\n  const navigate = useCallback(\n    (url: string) => {\n      const newQs = { ...qs }\n      // /swap/net/symA-to-symB?inputCurrency= addressC/symC &outputCurrency= addressD/symD\n      delete newQs.outputCurrency\n      delete newQs.inputCurrency\n      delete newQs.networkId\n      history.push(`${url}?${stringify(newQs)}`) // keep query params\n    },\n    [history, qs],\n  )\n\n  function findTokenPairFromUrl() {\n    let { fromCurrency, toCurrency, network } = getUrlMatchParams()\n    if (!fromCurrency || !network) return\n\n    const compareNetwork = getNetworkSlug(chainId)\n\n    if (compareNetwork && network !== compareNetwork) {\n      // when select change network => force get new network\n      network = compareNetwork\n      navigate(`/swap/${network}/${fromCurrency}${toCurrency ? `-to-${toCurrency}` : ''}`)\n    }\n\n    const isSame = fromCurrency && fromCurrency === toCurrency\n    if (!toCurrency || isSame) {\n      // net/symbol\n      const fromToken = findToken(fromCurrency)\n      if (fromToken) {\n        onCurrencySelection(Field.INPUT, fromToken)\n        if (isSame) navigate(`/swap/${network}/${fromCurrency}`)\n      } else navigate('/swap')\n      return\n    }\n\n    const isAddress1 = isAddressString(fromCurrency)\n    const isAddress2 = isAddressString(toCurrency)\n\n    // net/add-to-add\n    if (isAddress1 && isAddress2) {\n      const fromToken = findToken(fromCurrency)\n      const toToken = findToken(toCurrency)\n      if (fromToken && toToken) {\n        navigate(`/swap/${network}/${getSymbolSlug(fromToken)}-to-${getSymbolSlug(toToken)}`)\n        onCurrencySelection(Field.INPUT, fromToken)\n        onCurrencySelection(Field.OUTPUT, toToken)\n      } else navigate('/swap')\n      return\n    }\n\n    // sym-to-sym\n    fromCurrency = convertSymbol(network, fromCurrency)\n    toCurrency = convertSymbol(network, toCurrency)\n\n    const fromToken = findToken(fromCurrency)\n    const toToken = findToken(toCurrency)\n\n    if (!toToken || !fromToken) {\n      navigate('/swap')\n      return\n    }\n    onCurrencySelection(Field.INPUT, fromToken)\n    onCurrencySelection(Field.OUTPUT, toToken)\n  }\n\n  const checkAutoSelectTokenFromUrl = () => {\n    // check case:  `/swap/net/sym-to-sym` or `/swap/net/sym` is valid\n    const { fromCurrency, network } = getUrlMatchParams()\n    if (!fromCurrency || !network) return\n\n    const findChainId = SUPPORTED_NETWORKS.find(chainId => NETWORKS_INFO[chainId].route === network)\n    if (!findChainId) {\n      return navigate('/swap')\n    }\n    if (findChainId !== chainId) {\n      changeNetwork(\n        findChainId,\n        () => {\n          refIsCheckNetworkAutoSelect.current = true\n        },\n        () => {\n          navigate('/swap')\n        },\n      )\n    } else {\n      refIsCheckNetworkAutoSelect.current = true\n    }\n  }\n\n  const syncUrl = useCallback(\n    (currencyIn: Currency | undefined, currencyOut: Currency | undefined) => {\n      const symbolIn = getSymbolSlug(currencyIn)\n      const symbolOut = getSymbolSlug(currencyOut)\n      if (symbolIn && symbolOut && chainId) {\n        navigate(`/swap/${getNetworkSlug(chainId)}/${symbolIn}-to-${symbolOut}`)\n      }\n    },\n    [navigate, chainId],\n  )\n\n  const onSelectSuggestedPair = useCallback(\n    (fromToken: Currency | undefined, toToken: Currency | undefined, amount: string) => {\n      if (fromToken) onCurrencySelection(Field.INPUT, fromToken)\n      if (toToken) onCurrencySelection(Field.OUTPUT, toToken)\n      if (amount) handleTypeInput(amount)\n    },\n    [handleTypeInput, onCurrencySelection],\n  )\n\n  const tokenImports: Token[] = useUserAddedTokens()\n  const prevTokenImports = usePrevious(tokenImports) || []\n\n  useEffect(() => {\n    const { network } = getUrlMatchParams()\n    const compareNetwork = getNetworkSlug(chainId)\n    const isChangeNetwork = compareNetwork !== network\n    if (isChangeNetwork) return\n\n    // when import/remove token\n    const isRemoved = prevTokenImports?.length > tokenImports.length\n    const addressIn = currencyIn?.wrapped?.address\n    const addressOut = currencyOut?.wrapped?.address\n\n    if (isRemoved) {\n      // removed token => deselect input\n      const tokenRemoved = prevTokenImports.filter(\n        token => !tokenImports.find(token2 => token2.address === token.address),\n      )\n      tokenRemoved.forEach(({ address }: Token) => {\n        if (address === addressIn || !currencyIn) {\n          onResetSelectCurrency(Field.INPUT)\n        }\n        if (address === addressOut || !currencyOut) {\n          onResetSelectCurrency(Field.OUTPUT)\n        }\n      })\n    }\n    // import token\n    else if (tokenImports.find(({ address }: Token) => address === addressIn || address === addressOut)) {\n      refIsImportUserToken.current = true\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tokenImports])\n\n  const initialTotalTokenDefault = useRef<number | null>(null)\n\n  useEffect(() => {\n    checkAutoSelectTokenFromUrl()\n    initialTotalTokenDefault.current = Object.keys(defaultTokens).length // it will be equal with tokenImports.length\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const isLoadedTokenDefault = account\n    ? Object.keys(defaultTokens).length > tokenImports.length\n    : initialTotalTokenDefault.current !== null && Object.keys(defaultTokens).length > initialTotalTokenDefault.current //\n\n  useEffect(() => {\n    /**\n     * defaultTokens change only when:\n     * - the first time get data\n     * - change network\n     * - import/remove token */\n    if (refIsCheckNetworkAutoSelect.current && !refIsImportUserToken.current && isLoadedTokenDefault) {\n      findTokenPairFromUrl()\n    }\n    refIsImportUserToken.current = false\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultTokens, refIsCheckNetworkAutoSelect.current])\n\n  // useEffect(() => {\n  //   if (isSelectCurencyMannual) syncUrl(currencyIn, currencyOut) // when we select token manual\n  // }, [currencyIn, currencyOut, isSelectCurencyMannual, syncUrl])\n\n  // swap?inputCurrency=xxx&outputCurrency=yyy. xxx yyy not exist in chain => remove params => select default pair\n\n  const checkParamsWrong = () => {\n    if (isPairNotfound && !currencyIn && !currencyOut) {\n      const newQuery = { ...qs }\n      delete newQuery.inputCurrency\n      delete newQuery.outputCurrency\n      history.replace({\n        search: stringify(newQuery),\n      })\n    }\n  }\n\n  const refCheckParamWrong = useRef(checkParamsWrong)\n  refCheckParamWrong.current = checkParamsWrong\n  useEffect(() => {\n    refCheckParamWrong.current()\n  }, [chainId])\n\n  useEffect(() => {\n    if (isExpertMode) {\n      mixpanelHandler(MIXPANEL_TYPE.ADVANCED_MODE_ON)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isExpertMode])\n\n\n\n  const [rawSlippage, setRawSlippage] = useUserSlippageTolerance()\n\n  const isStableCoinSwap =\n    INPUT?.currencyId &&\n    OUTPUT?.currencyId &&\n    chainId &&\n    STABLE_COINS_ADDRESS[chainId].includes(INPUT?.currencyId) &&\n    STABLE_COINS_ADDRESS[chainId].includes(OUTPUT?.currencyId)\n\n  const rawSlippageRef = useRef(rawSlippage)\n  rawSlippageRef.current = rawSlippage\n\n  useEffect(() => {\n    if (isStableCoinSwap && rawSlippageRef.current > 10) {\n      setRawSlippage(10)\n    }\n    if (!isStableCoinSwap && rawSlippageRef.current === 10) {\n      setRawSlippage(50)\n    }\n  }, [isStableCoinSwap, setRawSlippage])\n\n  const shareUrl = useMemo(() => {\n    return `${window.location.origin}/swap?networkId=${chainId}${\n      currencyIn && currencyOut\n        ? `&${stringify({\n            inputCurrency: currencyId(currencyIn, chainId),\n            outputCurrency: currencyId(currencyOut, chainId),\n          })}`\n        : ''\n    }`\n  }, [currencyIn, currencyOut, chainId])\n\n  // const { isInWhiteList: isPairInWhiteList, canonicalUrl } = checkPairInWhiteList(\n  //   chainId,\n  //   getSymbolSlug(currencyIn),\n  //   getSymbolSlug(currencyOut),\n  // )\n\n  const shouldRenderTokenInfo = isShowTokenInfoSetting && currencyIn && currencyOut\n\n  const isShowModalImportToken =\n    isLoadedTokenDefault && importTokensNotInDefault.length > 0 && (!dismissTokenWarning || showingPairSuggestionImport)\n\n  return (\n    <>\n      {/**\n       * /swap/bnb/knc-to-usdt vs /swap/bnb/usdt-to-knc has same content\n       * => add canonical link that specify which is main page, => /swap/bnb/knc-to-usdt\n       */}\n     \n     \n      <TokenWarningModal\n        isOpen={isShowModalImportToken}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n        onDismiss={handleDismissTokenWarning}\n      />\n      <PageWrapper>\n        <Container>\n          <SwapFormWrapper isShowTutorial={isShowTutorial}>\n            <RowBetween mb={'16px'}>\n              <TabContainer>\n                <TabWrapper>\n                  <Tab onClick={() => setActiveTab(TAB.SWAP)} isActive={activeTab === TAB.SWAP}>\n                    <Text fontSize={20} fontWeight={500}>{t`Swap`}</Text>\n                  </Tab>\n                </TabWrapper>\n              </TabContainer>\n\n              <SwapFormActions>\n  \n                {chainId !== ChainId.ETHW && (\n                  <MobileTokenInfo\n                    currencies={currencies}\n                    onClick={() => setActiveTab(prev => (prev === TAB.INFO ? TAB.SWAP : TAB.INFO))}\n                  />\n                )}\n                <ShareButtonWithModal\n                  url={shareUrl}\n                  onShared={() => {\n                    mixpanelHandler(MIXPANEL_TYPE.TOKEN_SWAP_LINK_SHARED)\n                  }}\n                />\n                <StyledActionButtonSwapForm\n                  active={activeTab === TAB.SETTINGS}\n                  onClick={() => setActiveTab(prev => (prev === TAB.SETTINGS ? TAB.SWAP : TAB.SETTINGS))}\n                  aria-label=\"Swap Settings\"\n                >\n                  <MouseoverTooltip\n                    text={!isExpertMode ? t`Settings` : t`Advanced mode is on!`}\n                    placement=\"top\"\n                    width=\"fit-content\"\n                  >\n                    <span id={TutorialIds.BUTTON_SETTING_SWAP_FORM}>\n                      <TransactionSettingsIcon fill={isExpertMode ? theme.warning : theme.subText} />\n                    </span>\n                  </MouseoverTooltip>\n                </StyledActionButtonSwapForm>\n                {/* <TransactionSettings isShowDisplaySettings /> */}\n              </SwapFormActions>\n            </RowBetween>\n\n            {chainId !== ChainId.ETHW && (\n              <RowBetween mb={'16px'}>\n                <PairSuggestion\n                  ref={refSuggestPair}\n                  onSelectSuggestedPair={onSelectSuggestedPair}\n                  setShowModalImportToken={setShowingPairSuggestionImport}\n                />\n              </RowBetween>\n            )}\n\n            <AppBodyWrapped data-highlight={shouldHighlightSwapBox} id={TutorialIds.SWAP_FORM}>\n              {activeTab === TAB.SWAP && (\n                <>\n                  <Wrapper id={TutorialIds.SWAP_FORM_CONTENT}>\n                    <ConfirmSwapModal\n                      isOpen={showConfirm}\n                      trade={trade}\n                      originalTrade={tradeToConfirm}\n                      onAcceptChanges={handleAcceptChanges}\n                      attemptingTxn={attemptingTxn}\n                      txHash={txHash}\n                      recipient={recipient}\n                      allowedSlippage={allowedSlippage}\n                      onConfirm={handleSwap}\n                      swapErrorMessage={swapErrorMessage}\n                      onDismiss={handleConfirmDismiss}\n                      tokenAddToMetaMask={currencyOut}\n                    />\n\n                    <Flex flexDirection=\"column\" sx={{ gap: '0.75rem' }}>\n                      <CurrencyInputPanel\n                        value={formattedAmounts[Field.INPUT]}\n                        positionMax=\"top\"\n                        showMaxButton\n                        currency={currencyIn}\n                        onUserInput={handleTypeInput}\n                        onMax={handleMaxInput}\n                        onHalf={handleHalfInput}\n                        onCurrencySelect={handleInputSelect}\n                        otherCurrency={currencyOut}\n                        id=\"swap-currency-input\"\n                        showCommonBases={true}\n                     \n                      />\n                      <AutoRow justify=\"space-between\">\n                        <Flex alignItems=\"center\">\n                          {!showWrap && (\n                            <>\n                             \n                              <TradePrice\n                                price={trade?.executionPrice}\n                                showInverted={showInverted}\n                                setShowInverted={setShowInverted}\n                              />\n                            </>\n                          )}\n                        </Flex>\n\n                        <ArrowWrapper rotated={rotate} onClick={handleRotateClick}>\n                          <SwapIcon size={24} color={theme.subText} />\n                        </ArrowWrapper>\n                      </AutoRow>\n                      <Box sx={{ position: 'relative' }}>\n                        {tradeComparer?.tradeSaved?.usd && comparedDex && (\n                          <KyberTag>\n                            <Trans>You save</Trans>{' '}\n                            {formattedNum(tradeComparer.tradeSaved.usd, true) +\n                              ` (${\n                                tradeComparer?.tradeSaved?.percent &&\n                                (tradeComparer.tradeSaved.percent < 0.01\n                                  ? '<0.01'\n                                  : tradeComparer.tradeSaved.percent.toFixed(2))\n                              }%)`}\n                            <InfoHelper\n                              text={\n                                <Text>\n                                  <Trans>\n                                    The amount you save compared to{' '}\n                                    <Text as=\"span\" color={theme.warning}>\n                                      {comparedDex.name}\n                                    </Text>\n                                    .\n                                  </Trans>{' '}\n                                  <Trans>\n                                    <Text color={theme.primary} fontWeight={500} as=\"span\">\n                                      VoxelSwap\n                                    </Text>{' '}\n                                    gets you the best token rates\n                                  </Trans>\n                                </Text>\n                              }\n                              size={14}\n                              color={theme.apr}\n                            />\n                          </KyberTag>\n                        )}\n\n                        <CurrencyInputPanel\n                          disabledInput\n                          value={formattedAmounts[Field.OUTPUT]}\n                          onUserInput={handleTypeOutput}\n                          showMaxButton={false}\n                          currency={currencyOut}\n                          onCurrencySelect={handleOutputSelect}\n                          otherCurrency={currencyIn}\n                          id=\"swap-currency-output\"\n                          showCommonBases={true}\n                                            />\n                      </Box>\n\n                      {isExpertMode && !showWrap && (\n                        <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                      )}\n\n                      {!showWrap && (\n                        <Flex\n                          alignItems=\"center\"\n                          fontSize={12}\n                          color={theme.subText}\n                          onClick={toggleSettings}\n                          width=\"fit-content\"\n                        >\n                          <ClickableText color={theme.subText} fontWeight={500}>\n                            <Trans>Max Slippage:</Trans>&nbsp;\n                            {allowedSlippage / 100}%\n                          </ClickableText>\n                        </Flex>\n                      )}\n                    </Flex>\n\n                  \n                    {Number(trade?.priceImpact) === -1 ? (\n                      <PriceImpactHigh>\n                        <AlertTriangle color={theme.warning} size={16} style={{ marginRight: '10px' }} />\n                        <Trans>Unable to calculate Price Impact</Trans>\n                        <InfoHelper text={t`Turn on Advanced Mode to trade`} color={theme.text} />\n                      </PriceImpactHigh>\n                    ) : (\n                      !!trade?.priceImpact &&\n                      Number(trade.priceImpact) > 5 && (\n                        <PriceImpactHigh veryHigh={Number(trade?.priceImpact) > 15}>\n                          <AlertTriangle\n                            color={ Number(trade?.priceImpact) > 15 ? theme.red : theme.warning}\n                            size={16}\n                            style={{ marginRight: '10px' }}\n                          />\n                          { Number(trade?.priceImpact) > 15 ? (\n                            <Trans>Price Impact is Very High</Trans>\n                          ) : (\n                            <Trans>Price Impact is High</Trans>\n                          )}\n                          <InfoHelper\n                            text={\n                              isExpertMode\n                                ? t`You have turned on Advanced Mode from settings. Trades with high price impact can be executed`\n                                : t`Turn on Advanced Mode from settings to execute trades with high price impact`\n                            }\n                            color={theme.text}\n                          />\n                        </PriceImpactHigh>\n                      )\n                    )}\n\n                    <BottomGrouping>\n                      {!account ? (\n                        <ButtonLight onClick={toggleWalletModal}>\n                          <Trans>Connect Wallet</Trans>\n                        </ButtonLight>\n                      ) : showWrap ? (\n                        <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                          {wrapInputError ??\n                            (wrapType === WrapType.WRAP ? t`Wrap` : wrapType === WrapType.UNWRAP ? t`Unwrap` : null)}\n                        </ButtonPrimary>\n                      ) : noRoute && userHasSpecifiedInputOutput ? (\n                        <GreyCard style={{ textAlign: 'center', borderRadius: '999px', padding: '12px' }}>\n                          <TYPE.main>\n                            <Trans>Insufficient liquidity for this trade.</Trans>\n                          </TYPE.main>\n                        </GreyCard>\n                      ) : showApproveFlow ? (\n                        <RowBetween>\n                          <ButtonConfirmed\n                            onClick={approveCallback}\n                            disabled={approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                            width=\"48%\"\n                            altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                            confirmed={approvalState === ApprovalState.APPROVED}\n                          >\n                            {approvalState === ApprovalState.PENDING ? (\n                              <AutoRow gap=\"6px\" justify=\"center\">\n                                <Trans>Approving</Trans> <Loader stroke=\"white\" />\n                              </AutoRow>\n                            ) : approvalSubmitted && approvalState === ApprovalState.APPROVED ? (\n                              t`Approved`\n                            ) : (\n                              t`Approve ${currencyIn?.symbol}`\n                            )}\n                          </ButtonConfirmed>\n                          <ButtonError\n                            onClick={() => {\n                              mixpanelSwapInit()\n                              if (isExpertMode) {\n                                handleSwap()\n                              } else {\n                                setSwapState({\n                                  tradeToConfirm: trade,\n                                  attemptingTxn: false,\n                                  swapErrorMessage: undefined,\n                                  showConfirm: true,\n                                  txHash: undefined,\n                                })\n                              }\n                            }}\n                            width=\"48%\"\n                            id=\"swap-button\"\n                            disabled={!isValid || approvalState !== ApprovalState.APPROVED}\n                          >\n                            <Text fontSize={16} fontWeight={500}>\n                              {trade && Number(trade.priceImpact) > 5 ? t`Swap Anyway` : t`Swap`}\n                            </Text>\n                          </ButtonError>\n                        </RowBetween>\n                      ) : isLoading ? (\n                        <GreyCard style={{ textAlign: 'center', borderRadius: '999px', padding: '12px' }}>\n                          <Text color={theme.subText} fontSize=\"14px\">\n                            <Dots>\n                              <Trans>Calculating best route</Trans>\n                            </Dots>\n                          </Text>\n                        </GreyCard>\n                      ) : (\n                        <ButtonError\n                          onClick={() => {\n                            mixpanelSwapInit()\n                            if (isExpertMode) {\n                              handleSwap()\n                            } else {\n                              setSwapState({\n                                tradeToConfirm: trade,\n                                attemptingTxn: false,\n                                swapErrorMessage: undefined,\n                                showConfirm: true,\n                                txHash: undefined,\n                              })\n                            }\n                          }}\n                          id=\"swap-button\"\n                          disabled={\n                            !isValid ||\n                            !!swapCallbackError ||\n                            (!isExpertMode && trade && (Number(trade.priceImpact) > 15 || Number(trade.priceImpact) === -1))\n                          }\n                          style={{\n                            border: 'none',\n                            ...(!(\n                              !isValid ||\n                              !!swapCallbackError ||\n                              approvalState !== ApprovalState.APPROVED ||\n                              (!isExpertMode && trade && (Number(trade.priceImpact) > 15 || Number(trade.priceImpact) === -1))\n                            ) &&\n                            trade &&\n                            (Number(trade.priceImpact) > 5 || Number(trade.priceImpact) === -1)\n                              ? { background: theme.red, color: theme.white }\n                              : {}),\n                          }}\n                        >\n                          <Text fontWeight={500}>\n                            {swapInputError\n                              ? swapInputError\n                              : trade && (Number(trade.priceImpact) > 5 || Number(trade.priceImpact) === -1)\n                              ? t`Swap Anyway`\n                              : t`Swap`}\n                          </Text>\n                        </ButtonError>\n                      )}\n                      {showApproveFlow && (\n                        <Column style={{ marginTop: '1rem' }}>\n                          <ProgressSteps steps={[approvalState === ApprovalState.APPROVED]} />\n                        </Column>\n                      )}\n                      {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n                    </BottomGrouping>\n                  </Wrapper>\n                </>\n              )}\n              {activeTab === TAB.INFO && <TokenInfo currencies={currencies} onBack={() => setActiveTab(TAB.SWAP)} />}\n              {activeTab === TAB.SETTINGS && (\n                <SettingsPanel\n                  onBack={() => setActiveTab(TAB.SWAP)}\n                  onClickLiquiditySources={() => setActiveTab(TAB.LIQUIDITY_SOURCES)}\n                  onClickGasPriceTracker={() => setActiveTab(TAB.GAS_PRICE_TRACKER)}\n                />\n              )}\n              {activeTab === TAB.GAS_PRICE_TRACKER && (\n                <GasPriceTrackerPanel onBack={() => setActiveTab(TAB.SETTINGS)} />\n              )}\n              {activeTab === TAB.LIQUIDITY_SOURCES && (\n                <LiquiditySourcesPanel onBack={() => setActiveTab(TAB.SETTINGS)} />\n              )}\n            </AppBodyWrapped>\n           \n          </SwapFormWrapper>\n\n          {(isShowLiveChart || shouldRenderTokenInfo) && (\n            <InfoComponentsWrapper>\n              {isShowLiveChart && (\n                <LiveChartWrapper>\n                  <Suspense\n                    fallback={<Skeleton height=\"100%\" baseColor={theme.background} highlightColor={theme.buttonGray} />}\n                  >\n                    <LiveChart onRotateClick={handleRotateClick} currencies={currencies} />\n                  </Suspense>\n                </LiveChartWrapper>\n              )}\n    \n              {shouldRenderTokenInfo ? <TokenInfoV2 currencyIn={currencyIn} currencyOut={currencyOut} /> : null}\n            </InfoComponentsWrapper>\n          )}\n        </Container>\n        <Flex justifyContent=\"center\">\n          <SwitchLocaleLinkWrapper>\n            <SwitchLocaleLink />\n          </SwitchLocaleLinkWrapper>\n        </Flex>\n      </PageWrapper>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}