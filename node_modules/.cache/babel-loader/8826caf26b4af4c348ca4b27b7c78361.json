{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { TRENDING_SOON_SUPPORTED_NETWORKS } from 'constants/index';\nimport { TrueSightTimeframe } from 'pages/TrueSight/index';\nexport default function useGetTrendingData(filter, currentPage, itemPerPage) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _filter$selectedToken, _filter$selectedToken2, _filter$selectedTag, timeframe, url, response, json, rawResult, result, trueSightTokens, start, end, selectedNetworkKey, filteredTokens;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                timeframe = filter.timeframe === TrueSightTimeframe.ONE_DAY ? '24h' : '7d';\n                url = \"\".concat(process.env.REACT_APP_TRUESIGHT_API, \"/api/v1/trending?timeframe=\").concat(timeframe, \"&page_number=\").concat(filter.isShowTrueSightOnly ? 0 : currentPage - 1, \"&page_size=\").concat(filter.isShowTrueSightOnly ? 9999 : itemPerPage, \"&search_token_id=\").concat((_filter$selectedToken = (_filter$selectedToken2 = filter.selectedTokenData) === null || _filter$selectedToken2 === void 0 ? void 0 : _filter$selectedToken2.token_id) !== null && _filter$selectedToken !== void 0 ? _filter$selectedToken : '', \"&search_token_tag=\").concat((_filter$selectedTag = filter.selectedTag) !== null && _filter$selectedTag !== void 0 ? _filter$selectedTag : '');\n                setError(undefined);\n                setIsLoading(true);\n                _context.next = 7;\n                return fetch(url);\n\n              case 7:\n                response = _context.sent;\n\n                if (!response.ok) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 11;\n                return response.json();\n\n              case 11:\n                json = _context.sent;\n                rawResult = json.data;\n\n                if (filter.isShowTrueSightOnly) {\n                  trueSightTokens = rawResult.tokens.filter(function (token) {\n                    return token.discovered_on > 0;\n                  });\n                  start = (currentPage - 1) * itemPerPage;\n                  end = currentPage * itemPerPage;\n                  result = {\n                    total_number_tokens: trueSightTokens.length,\n                    tokens: trueSightTokens.slice(start, end)\n                  };\n                } else {\n                  result = rawResult;\n                } // Sort platforms\n\n\n                result.tokens = result.tokens.map(function (token) {\n                  var priorityNetworks = Object.keys(TRENDING_SOON_SUPPORTED_NETWORKS);\n                  var platforms = new Map();\n\n                  for (var i = 0; i < priorityNetworks.length; i++) {\n                    var network = priorityNetworks[i];\n                    var address = token.platforms[network];\n\n                    if (address) {\n                      platforms.set(network, address);\n                    }\n                  }\n\n                  return _objectSpread(_objectSpread({}, token), {}, {\n                    platforms: platforms\n                  });\n                }); // Filter network in frontend\n\n                if (filter.selectedNetwork) {\n                  selectedNetworkKey = Object.keys(TRENDING_SOON_SUPPORTED_NETWORKS).find(function (key) {\n                    return TRENDING_SOON_SUPPORTED_NETWORKS[key] === filter.selectedNetwork;\n                  });\n                  filteredTokens = result.tokens.filter(function (tokenData) {\n                    return tokenData.present_on_chains.includes(selectedNetworkKey);\n                  });\n                  result = {\n                    total_number_tokens: filteredTokens.length,\n                    tokens: filteredTokens\n                  };\n                }\n\n                setData(result);\n\n              case 17:\n                setIsLoading(false);\n                _context.next = 25;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                setError(_context.t0);\n                setIsLoading(false);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 20]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [currentPage, filter, itemPerPage]);\n  return useMemo(function () {\n    return {\n      isLoading: isLoading,\n      data: data,\n      error: error\n    };\n  }, [data, isLoading, error]);\n}\n\n_s(useGetTrendingData, \"S2w/06gZOxv1pUmOxFGNficRqs0=\");","map":{"version":3,"names":["useEffect","useMemo","useState","TRENDING_SOON_SUPPORTED_NETWORKS","TrueSightTimeframe","useGetTrendingData","filter","currentPage","itemPerPage","isLoading","setIsLoading","error","setError","data","setData","fetchData","timeframe","ONE_DAY","url","process","env","REACT_APP_TRUESIGHT_API","isShowTrueSightOnly","selectedTokenData","token_id","selectedTag","undefined","fetch","response","ok","json","rawResult","trueSightTokens","tokens","token","discovered_on","start","end","result","total_number_tokens","length","slice","map","priorityNetworks","Object","keys","platforms","Map","i","network","address","set","selectedNetwork","selectedNetworkKey","find","key","filteredTokens","tokenData","present_on_chains","includes","console"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/TrueSight/hooks/useGetTrendingData.ts"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react'\n\nimport { TRENDING_SOON_SUPPORTED_NETWORKS } from 'constants/index'\nimport { TrueSightTokenResponse } from 'pages/TrueSight/hooks/useGetTrendingSoonData'\nimport { TrueSightFilter, TrueSightTimeframe } from 'pages/TrueSight/index'\n\nexport default function useGetTrendingData(filter: TrueSightFilter, currentPage: number, itemPerPage: number) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error>()\n  const [data, setData] = useState<TrueSightTokenResponse>()\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const timeframe = filter.timeframe === TrueSightTimeframe.ONE_DAY ? '24h' : '7d'\n        const url = `${process.env.REACT_APP_TRUESIGHT_API}/api/v1/trending?timeframe=${timeframe}&page_number=${\n          filter.isShowTrueSightOnly ? 0 : currentPage - 1\n        }&page_size=${filter.isShowTrueSightOnly ? 9999 : itemPerPage}&search_token_id=${\n          filter.selectedTokenData?.token_id ?? ''\n        }&search_token_tag=${filter.selectedTag ?? ''}`\n        setError(undefined)\n        setIsLoading(true)\n        const response = await fetch(url)\n        if (response.ok) {\n          const json = await response.json()\n          const rawResult: TrueSightTokenResponse = json.data\n\n          let result: TrueSightTokenResponse\n          if (filter.isShowTrueSightOnly) {\n            const trueSightTokens = rawResult.tokens.filter(token => token.discovered_on > 0)\n            const start = (currentPage - 1) * itemPerPage\n            const end = currentPage * itemPerPage\n            result = {\n              total_number_tokens: trueSightTokens.length,\n              tokens: trueSightTokens.slice(start, end),\n            }\n          } else {\n            result = rawResult\n          }\n\n          // Sort platforms\n          result.tokens = result.tokens.map(token => {\n            const priorityNetworks = Object.keys(TRENDING_SOON_SUPPORTED_NETWORKS)\n            const platforms = new Map<string, string>()\n            for (let i = 0; i < priorityNetworks.length; i++) {\n              const network = priorityNetworks[i]\n              const address = (token.platforms as unknown as { [p: string]: string })[network]\n              if (address) {\n                platforms.set(network, address)\n              }\n            }\n            return {\n              ...token,\n              platforms,\n            }\n          })\n\n          // Filter network in frontend\n          if (filter.selectedNetwork) {\n            const selectedNetworkKey = Object.keys(TRENDING_SOON_SUPPORTED_NETWORKS).find(\n              (key: string) => TRENDING_SOON_SUPPORTED_NETWORKS[key] === filter.selectedNetwork,\n            )\n            const filteredTokens = result.tokens.filter(tokenData =>\n              tokenData.present_on_chains.includes(selectedNetworkKey as string),\n            )\n            result = {\n              total_number_tokens: filteredTokens.length,\n              tokens: filteredTokens,\n            }\n          }\n          setData(result)\n        }\n        setIsLoading(false)\n      } catch (err) {\n        console.error(err)\n        setError(err)\n        setIsLoading(false)\n      }\n    }\n\n    fetchData()\n  }, [currentPage, filter, itemPerPage])\n\n  return useMemo(() => ({ isLoading, data, error }), [data, isLoading, error])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}