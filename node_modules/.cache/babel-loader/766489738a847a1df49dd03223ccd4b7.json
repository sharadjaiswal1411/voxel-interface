{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { CurrencyAmount, TradeType } from '@kyberswap/ks-sdk-core';\nimport { SwapQuoter, Trade } from '@kyberswap/ks-sdk-elastic';\nimport JSBI from 'jsbi';\nimport { useMemo } from 'react';\nimport { useSingleContractWithCallData } from 'state/multicall/hooks';\nimport { TradeState } from 'state/routing/types';\nimport { useProAmmQuoter } from './useContract';\nimport { useProAmmAllRoutes } from './useProAmmAllRoutes';\nexport function useProAmmClientSideTrade(tradeType, amountSpecified, otherCurrency) {\n  _s();\n\n  var _useMemo = useMemo(function () {\n    return tradeType === TradeType.EXACT_INPUT ? [amountSpecified === null || amountSpecified === void 0 ? void 0 : amountSpecified.currency, otherCurrency] : [otherCurrency, amountSpecified === null || amountSpecified === void 0 ? void 0 : amountSpecified.currency];\n  }, [tradeType, amountSpecified, otherCurrency]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      currencyIn = _useMemo2[0],\n      currencyOut = _useMemo2[1];\n\n  var _useProAmmAllRoutes = useProAmmAllRoutes(currencyIn, currencyOut),\n      routes = _useProAmmAllRoutes.routes,\n      routesLoading = _useProAmmAllRoutes.loading;\n\n  var quoter = useProAmmQuoter();\n  var quotesResults = useSingleContractWithCallData(quoter, amountSpecified ? routes.map(function (route) {\n    return SwapQuoter.quoteCallParameters(route, amountSpecified, tradeType).calldata;\n  }) : [], {\n    gasRequired: 2000000\n  });\n  return useMemo(function () {\n    if (!amountSpecified || !currencyIn || !currencyOut || quotesResults.some(function (_ref) {\n      var valid = _ref.valid;\n      return !valid;\n    }) || ( // skip when tokens are the same\n    tradeType === TradeType.EXACT_INPUT ? amountSpecified.currency.equals(currencyOut) : amountSpecified.currency.equals(currencyIn))) {\n      return {\n        state: TradeState.INVALID,\n        trade: undefined\n      };\n    }\n\n    if (routesLoading || quotesResults.some(function (_ref2) {\n      var loading = _ref2.loading;\n      return loading;\n    })) {\n      return {\n        state: TradeState.LOADING,\n        trade: undefined\n      };\n    }\n\n    var _quotesResults$reduce = quotesResults.reduce(function (currentBest, _ref3, i) {\n      var result = _ref3.result;\n      if (!result || !result[0]) return currentBest;\n      var res = result[0];\n      if (!result[0]) return currentBest; // overwrite the current best if it's not defined or if this route is better\n\n      if (tradeType === TradeType.EXACT_INPUT) {\n        var _amountOut = CurrencyAmount.fromRawAmount(currencyOut, res.returnedAmount.toString());\n\n        if (currentBest.amountOut === null || JSBI.lessThan(currentBest.amountOut.quotient, _amountOut.quotient)) {\n          return {\n            bestRoute: routes[i],\n            amountIn: amountSpecified,\n            amountOut: _amountOut\n          };\n        }\n      } else {\n        var _amountIn = CurrencyAmount.fromRawAmount(currencyIn, res.returnedAmount.toString());\n\n        if (currentBest.amountIn === null || JSBI.greaterThan(currentBest.amountIn.quotient, _amountIn.quotient)) {\n          return {\n            bestRoute: routes[i],\n            amountIn: _amountIn,\n            amountOut: amountSpecified\n          };\n        }\n      }\n\n      return currentBest;\n    }, {\n      bestRoute: null,\n      amountIn: null,\n      amountOut: null\n    }),\n        bestRoute = _quotesResults$reduce.bestRoute,\n        amountIn = _quotesResults$reduce.amountIn,\n        amountOut = _quotesResults$reduce.amountOut;\n\n    if (!bestRoute || !amountIn || !amountOut) {\n      return {\n        state: TradeState.NO_ROUTE_FOUND,\n        trade: undefined\n      };\n    }\n\n    return {\n      state: TradeState.VALID,\n      trade: Trade.createUncheckedTrade({\n        route: bestRoute,\n        inputAmount: amountIn,\n        outputAmount: amountOut,\n        tradeType: tradeType\n      })\n    };\n  }, [amountSpecified, currencyIn, currencyOut, quotesResults, routes, routesLoading, tradeType]);\n}\n\n_s(useProAmmClientSideTrade, \"phFrteV/BiwBbrVDoyN1irM6P2g=\", false, function () {\n  return [useProAmmAllRoutes, useProAmmQuoter, useSingleContractWithCallData];\n});","map":{"version":3,"names":["CurrencyAmount","TradeType","SwapQuoter","Trade","JSBI","useMemo","useSingleContractWithCallData","TradeState","useProAmmQuoter","useProAmmAllRoutes","useProAmmClientSideTrade","tradeType","amountSpecified","otherCurrency","EXACT_INPUT","currency","currencyIn","currencyOut","routes","routesLoading","loading","quoter","quotesResults","map","route","quoteCallParameters","calldata","gasRequired","some","valid","equals","state","INVALID","trade","undefined","LOADING","reduce","currentBest","i","result","res","amountOut","fromRawAmount","returnedAmount","toString","lessThan","quotient","bestRoute","amountIn","greaterThan","NO_ROUTE_FOUND","VALID","createUncheckedTrade","inputAmount","outputAmount"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useProAmmClientSideTrade.ts"],"sourcesContent":["import { Currency, CurrencyAmount, TradeType } from '@kyberswap/ks-sdk-core'\nimport { Route, SwapQuoter, Trade } from '@kyberswap/ks-sdk-elastic'\nimport JSBI from 'jsbi'\nimport { useMemo } from 'react'\n\nimport { useSingleContractWithCallData } from 'state/multicall/hooks'\nimport { TradeState } from 'state/routing/types'\n\nimport { useProAmmQuoter } from './useContract'\nimport { useProAmmAllRoutes } from './useProAmmAllRoutes'\n\nexport function useProAmmClientSideTrade<TTradeType extends TradeType>(\n  tradeType: TTradeType,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency,\n): {\n  state: TradeState\n  trade: Trade<Currency, Currency, TradeType> | undefined\n} {\n  const [currencyIn, currencyOut] = useMemo(\n    () =>\n      tradeType === TradeType.EXACT_INPUT\n        ? [amountSpecified?.currency, otherCurrency]\n        : [otherCurrency, amountSpecified?.currency],\n    [tradeType, amountSpecified, otherCurrency],\n  )\n  const { routes, loading: routesLoading } = useProAmmAllRoutes(currencyIn, currencyOut)\n\n  const quoter = useProAmmQuoter()\n\n  const quotesResults = useSingleContractWithCallData(\n    quoter,\n    amountSpecified\n      ? routes.map(route => SwapQuoter.quoteCallParameters(route, amountSpecified, tradeType).calldata)\n      : [],\n    {\n      gasRequired: 2_000_000,\n    },\n  )\n\n  return useMemo(() => {\n    if (\n      !amountSpecified ||\n      !currencyIn ||\n      !currencyOut ||\n      quotesResults.some(({ valid }) => !valid) ||\n      // skip when tokens are the same\n      (tradeType === TradeType.EXACT_INPUT\n        ? amountSpecified.currency.equals(currencyOut)\n        : amountSpecified.currency.equals(currencyIn))\n    ) {\n      return {\n        state: TradeState.INVALID,\n        trade: undefined,\n      }\n    }\n\n    if (routesLoading || quotesResults.some(({ loading }) => loading)) {\n      return {\n        state: TradeState.LOADING,\n        trade: undefined,\n      }\n    }\n    const { bestRoute, amountIn, amountOut } = quotesResults.reduce(\n      (\n        currentBest: {\n          bestRoute: Route<Currency, Currency> | null\n          amountIn: CurrencyAmount<Currency> | null\n          amountOut: CurrencyAmount<Currency> | null\n        },\n        { result },\n        i,\n      ) => {\n        if (!result || !result[0]) return currentBest\n        const res = result[0]\n        if (!result[0]) return currentBest\n        // overwrite the current best if it's not defined or if this route is better\n        if (tradeType === TradeType.EXACT_INPUT) {\n          const amountOut = CurrencyAmount.fromRawAmount(currencyOut, res.returnedAmount.toString())\n          if (currentBest.amountOut === null || JSBI.lessThan(currentBest.amountOut.quotient, amountOut.quotient)) {\n            return {\n              bestRoute: routes[i],\n              amountIn: amountSpecified,\n              amountOut,\n            }\n          }\n        } else {\n          const amountIn = CurrencyAmount.fromRawAmount(currencyIn, res.returnedAmount.toString())\n          if (currentBest.amountIn === null || JSBI.greaterThan(currentBest.amountIn.quotient, amountIn.quotient)) {\n            return {\n              bestRoute: routes[i],\n              amountIn,\n              amountOut: amountSpecified,\n            }\n          }\n        }\n        return currentBest\n      },\n      {\n        bestRoute: null,\n        amountIn: null,\n        amountOut: null,\n      },\n    )\n\n    if (!bestRoute || !amountIn || !amountOut) {\n      return {\n        state: TradeState.NO_ROUTE_FOUND,\n        trade: undefined,\n      }\n    }\n    return {\n      state: TradeState.VALID,\n      trade: Trade.createUncheckedTrade({\n        route: bestRoute,\n        inputAmount: amountIn,\n        outputAmount: amountOut,\n        tradeType,\n      }),\n    }\n  }, [amountSpecified, currencyIn, currencyOut, quotesResults, routes, routesLoading, tradeType])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}