{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"steps\", \"disabled\"];\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/ProgressSteps/index.tsx\";\nimport { transparentize } from 'polished';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AutoColumn } from '../Column';\nimport { RowBetween } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Wrapper = styled(AutoColumn).withConfig({\n  displayName: \"ProgressSteps__Wrapper\",\n  componentId: \"sc-1ye6oi2-0\"\n})([\"\"]);\n_c = Wrapper;\nvar Grouping = styled(RowBetween).withConfig({\n  displayName: \"ProgressSteps__Grouping\",\n  componentId: \"sc-1ye6oi2-1\"\n})([\"width:50%;\"]);\n_c2 = Grouping;\nvar Circle = styled.div.withConfig({\n  displayName: \"ProgressSteps__Circle\",\n  componentId: \"sc-1ye6oi2-2\"\n})([\"min-width:20px;min-height:20px;background-color:\", \";border-radius:50%;color:\", \";display:flex;align-items:center;justify-content:center;line-height:8px;font-size:12px;\"], function (_ref) {\n  var theme = _ref.theme,\n      confirmed = _ref.confirmed,\n      disabled = _ref.disabled;\n  return disabled ? theme.buttonGray : confirmed ? theme.green1 : theme.primary;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.textReverse;\n});\n_c3 = Circle;\nvar CircleRow = styled.div.withConfig({\n  displayName: \"ProgressSteps__CircleRow\",\n  componentId: \"sc-1ye6oi2-3\"\n})([\"width:calc(100% - 20px);display:flex;align-items:center;\"]);\n_c4 = CircleRow;\nvar Connector = styled.div.withConfig({\n  displayName: \"ProgressSteps__Connector\",\n  componentId: \"sc-1ye6oi2-4\"\n})([\"width:100%;height:2px;background-color:;background:linear-gradient( 90deg,\", \" 0%,\", \" 80% );opacity:0.6;\"], function (_ref3) {\n  var theme = _ref3.theme,\n      prevConfirmed = _ref3.prevConfirmed,\n      disabled = _ref3.disabled;\n  return disabled ? theme.bg4 : transparentize(0.5, prevConfirmed ? theme.green1 : theme.primary);\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      prevConfirmed = _ref4.prevConfirmed,\n      disabled = _ref4.disabled;\n  return disabled ? theme.bg4 : prevConfirmed ? theme.primary : theme.bg4;\n});\n_c5 = Connector;\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles(_ref5) {\n  var _this = this;\n\n  var steps = _ref5.steps,\n      _ref5$disabled = _ref5.disabled,\n      disabled = _ref5$disabled === void 0 ? false : _ref5$disabled,\n      rest = _objectWithoutProperties(_ref5, _excluded);\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, _objectSpread(_objectSpread({\n    justify: 'center'\n  }, rest), {}, {\n    children: /*#__PURE__*/_jsxDEV(Grouping, {\n      children: [steps.map(function (step, i) {\n        return /*#__PURE__*/_jsxDEV(CircleRow, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            confirmed: step,\n            disabled: disabled || !steps[i - 1] && i !== 0,\n            children: step ? '✓' : i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Connector, {\n            prevConfirmed: step,\n            disabled: disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Circle, {\n        disabled: disabled || !steps[steps.length - 1],\n        children: steps.length + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ProgressCircles;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Grouping\");\n$RefreshReg$(_c3, \"Circle\");\n$RefreshReg$(_c4, \"CircleRow\");\n$RefreshReg$(_c5, \"Connector\");\n$RefreshReg$(_c6, \"ProgressCircles\");","map":{"version":3,"names":["transparentize","React","styled","AutoColumn","RowBetween","Wrapper","Grouping","Circle","div","theme","confirmed","disabled","buttonGray","green1","primary","textReverse","CircleRow","Connector","prevConfirmed","bg4","ProgressCircles","steps","rest","map","step","i","length"],"sources":["/Applications/XAMPP/voxel-interface/src/components/ProgressSteps/index.tsx"],"sourcesContent":["import { transparentize } from 'polished'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\n\nconst Wrapper = styled(AutoColumn)``\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.buttonGray : confirmed ? theme.green1 : theme.primary};\n  border-radius: 50%;\n  color: ${({ theme }) => theme.textReverse};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background-color: ;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.bg4 : transparentize(0.5, prevConfirmed ? theme.green1 : theme.primary)}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) => (disabled ? theme.bg4 : prevConfirmed ? theme.primary : theme.bg4)} 80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <Wrapper justify={'center'} {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}