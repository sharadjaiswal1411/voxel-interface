{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/Campaign/CampaignButtonEnterNow.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport React from 'react';\nimport { Dots } from 'components/swapv2/styleds';\nimport { StyledPrimaryButton } from 'pages/Campaign/CampaignButtonWithOptions';\nimport { useRegisterCampaignCaptchaModalToggle } from 'state/application/hooks';\nimport { useRecaptchaCampaignManager } from 'state/campaigns/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CampaignButtonEnterNow(_ref) {\n  _s();\n\n  var size = _ref.size,\n      campaign = _ref.campaign;\n\n  var _useRecaptchaCampaign = useRecaptchaCampaignManager(),\n      _useRecaptchaCampaign2 = _slicedToArray(_useRecaptchaCampaign, 2),\n      recaptchaCampaign = _useRecaptchaCampaign2[0],\n      updateRecaptchaCampaignId = _useRecaptchaCampaign2[1];\n\n  var toggleRegisterCampaignCaptchaModal = useRegisterCampaignCaptchaModalToggle();\n  var isVerifyingToken = campaign && campaign.id === recaptchaCampaign.id && recaptchaCampaign.loading;\n  if (campaign === undefined) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledPrimaryButton, {\n      disabled: isVerifyingToken,\n      size: size,\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        updateRecaptchaCampaignId(campaign.id);\n        toggleRegisterCampaignCaptchaModal();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Enter Now\"\n      }, void 0, false, void 0, this), isVerifyingToken && /*#__PURE__*/_jsxDEV(Dots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CampaignButtonEnterNow, \"qITAoohEGX7H3jl2V1TjKuhWvWY=\", false, function () {\n  return [useRecaptchaCampaignManager, useRegisterCampaignCaptchaModalToggle];\n});\n\n_c = CampaignButtonEnterNow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampaignButtonEnterNow\");","map":{"version":3,"names":["React","Dots","StyledPrimaryButton","useRegisterCampaignCaptchaModalToggle","useRecaptchaCampaignManager","CampaignButtonEnterNow","size","campaign","recaptchaCampaign","updateRecaptchaCampaignId","toggleRegisterCampaignCaptchaModal","isVerifyingToken","id","loading","undefined","e","stopPropagation"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/Campaign/CampaignButtonEnterNow.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport React from 'react'\n\nimport { Dots } from 'components/swapv2/styleds'\nimport { StyledPrimaryButton } from 'pages/Campaign/CampaignButtonWithOptions'\nimport { useRegisterCampaignCaptchaModalToggle } from 'state/application/hooks'\nimport { CampaignData } from 'state/campaigns/actions'\nimport { useRecaptchaCampaignManager } from 'state/campaigns/hooks'\n\ninterface CampaignButtonEnterNowProps {\n  size: 'small' | 'large'\n  campaign?: CampaignData\n}\n\nexport default function CampaignButtonEnterNow({ size, campaign }: CampaignButtonEnterNowProps) {\n  const [recaptchaCampaign, updateRecaptchaCampaignId] = useRecaptchaCampaignManager()\n  const toggleRegisterCampaignCaptchaModal = useRegisterCampaignCaptchaModalToggle()\n\n  const isVerifyingToken = campaign && campaign.id === recaptchaCampaign.id && recaptchaCampaign.loading\n\n  if (campaign === undefined) return null\n\n  return (\n    <>\n      <StyledPrimaryButton\n        disabled={isVerifyingToken}\n        size={size}\n        onClick={e => {\n          e.stopPropagation()\n          updateRecaptchaCampaignId(campaign.id)\n          toggleRegisterCampaignCaptchaModal()\n        }}\n      >\n        <Trans>Enter Now</Trans>\n        {isVerifyingToken && <Dots />}\n      </StyledPrimaryButton>\n    </>\n  )\n}\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,2BAArB;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,SAASC,qCAAT,QAAsD,yBAAtD;AAEA,SAASC,2BAAT,QAA4C,uBAA5C;;;AAOA,eAAe,SAASC,sBAAT,OAAiF;EAAA;;EAAA,IAA/CC,IAA+C,QAA/CA,IAA+C;EAAA,IAAzCC,QAAyC,QAAzCA,QAAyC;;EAC9F,4BAAuDH,2BAA2B,EAAlF;EAAA;EAAA,IAAOI,iBAAP;EAAA,IAA0BC,yBAA1B;;EACA,IAAMC,kCAAkC,GAAGP,qCAAqC,EAAhF;EAEA,IAAMQ,gBAAgB,GAAGJ,QAAQ,IAAIA,QAAQ,CAACK,EAAT,KAAgBJ,iBAAiB,CAACI,EAA9C,IAAoDJ,iBAAiB,CAACK,OAA/F;EAEA,IAAIN,QAAQ,KAAKO,SAAjB,EAA4B,OAAO,IAAP;EAE5B,oBACE;IAAA,uBACE,QAAC,mBAAD;MACE,QAAQ,EAAEH,gBADZ;MAEE,IAAI,EAAEL,IAFR;MAGE,OAAO,EAAE,iBAAAS,CAAC,EAAI;QACZA,CAAC,CAACC,eAAF;QACAP,yBAAyB,CAACF,QAAQ,CAACK,EAAV,CAAzB;QACAF,kCAAkC;MACnC,CAPH;MAAA,wBASE;QAAA;MAAA,+BATF,EAUGC,gBAAgB,iBAAI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAVvB;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAgBD;;GAxBuBN,sB;UACiCD,2B,EACZD,qC;;;KAFrBE,sB"},"metadata":{},"sourceType":"module"}