{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nexport default function useGetTagsForSearchBox(searchText) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var url, response, json, rawResult;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!searchText) {\n                  _context.next = 22;\n                  break;\n                }\n\n                _context.prev = 1;\n                url = process.env.REACT_APP_TRUESIGHT_API + '/api/v1/tags?search=' + searchText;\n                setError(undefined);\n                setIsLoading(true);\n                _context.next = 7;\n                return fetch(url);\n\n              case 7:\n                response = _context.sent;\n\n                if (!response.ok) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return response.json();\n\n              case 11:\n                json = _context.sent;\n                rawResult = json.data;\n                setData(rawResult !== null && rawResult !== void 0 ? rawResult : []);\n\n              case 14:\n                setIsLoading(false);\n                _context.next = 22;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n                setError(_context.t0);\n                setIsLoading(false);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 17]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [searchText]);\n  return useMemo(function () {\n    return {\n      isLoading: isLoading,\n      data: data,\n      error: error\n    };\n  }, [data, isLoading, error]);\n}\n\n_s(useGetTagsForSearchBox, \"E0cFk13Zcz1e8Bpe2aqfOsj/Q/0=\");","map":{"version":3,"names":["useEffect","useMemo","useState","useGetTagsForSearchBox","searchText","data","setData","isLoading","setIsLoading","error","setError","fetchData","url","process","env","REACT_APP_TRUESIGHT_API","undefined","fetch","response","ok","json","rawResult","console"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/TrueSight/hooks/useGetTagsForSearchBox.ts"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react'\n\nexport default function useGetTagsForSearchBox(searchText: string) {\n  const [data, setData] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error>()\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (searchText) {\n        try {\n          const url = process.env.REACT_APP_TRUESIGHT_API + '/api/v1/tags?search=' + searchText\n          setError(undefined)\n          setIsLoading(true)\n          const response = await fetch(url)\n          if (response.ok) {\n            const json = await response.json()\n            const rawResult = json.data\n            setData(rawResult ?? [])\n          }\n          setIsLoading(false)\n        } catch (err) {\n          console.error(err)\n          setError(err)\n          setIsLoading(false)\n        }\n      }\n    }\n\n    fetchData()\n  }, [searchText])\n\n  return useMemo(() => ({ isLoading, data, error }), [data, isLoading, error])\n}\n"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,eAAe,SAASC,sBAAT,CAAgCC,UAAhC,EAAoD;EAAA;;EACjE,gBAAwBF,QAAQ,CAAW,EAAX,CAAhC;EAAA;EAAA,IAAOG,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOK,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAA0BN,QAAQ,EAAlC;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcC,QAAd;;EAEAV,SAAS,CAAC,YAAM;IACd,IAAMW,SAAS;MAAA,sEAAG;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACZP,UADY;kBAAA;kBAAA;gBAAA;;gBAAA;gBAGNQ,GAHM,GAGAC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsC,sBAAtC,GAA+DX,UAH/D;gBAIZM,QAAQ,CAACM,SAAD,CAAR;gBACAR,YAAY,CAAC,IAAD,CAAZ;gBALY;gBAAA,OAMWS,KAAK,CAACL,GAAD,CANhB;;cAAA;gBAMNM,QANM;;gBAAA,KAORA,QAAQ,CAACC,EAPD;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAQSD,QAAQ,CAACE,IAAT,EART;;cAAA;gBAQJA,IARI;gBASJC,SATI,GASQD,IAAI,CAACf,IATb;gBAUVC,OAAO,CAACe,SAAD,aAACA,SAAD,cAACA,SAAD,GAAc,EAAd,CAAP;;cAVU;gBAYZb,YAAY,CAAC,KAAD,CAAZ;gBAZY;gBAAA;;cAAA;gBAAA;gBAAA;gBAcZc,OAAO,CAACb,KAAR;gBACAC,QAAQ,aAAR;gBACAF,YAAY,CAAC,KAAD,CAAZ;;cAhBY;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAATG,SAAS;QAAA;MAAA;IAAA,GAAf;;IAqBAA,SAAS;EACV,CAvBQ,EAuBN,CAACP,UAAD,CAvBM,CAAT;EAyBA,OAAOH,OAAO,CAAC;IAAA,OAAO;MAAEM,SAAS,EAATA,SAAF;MAAaF,IAAI,EAAJA,IAAb;MAAmBI,KAAK,EAALA;IAAnB,CAAP;EAAA,CAAD,EAAqC,CAACJ,IAAD,EAAOE,SAAP,EAAkBE,KAAlB,CAArC,CAAd;AACD;;GA/BuBN,sB"},"metadata":{},"sourceType":"module"}