{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { i18n } from \"@lingui/core\";\nimport { CurrencyAmount } from '@kyberswap/ks-sdk-core';\nimport { captureException } from '@sentry/react';\nimport { BigNumber } from 'ethers';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport useSWR from 'swr';\nimport { CLAIM_REWARDS_DATA_URL, KNC } from 'constants/index';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTransactions, useTransactionAdder } from 'state/transactions/hooks';\nimport { getClaimRewardContract } from 'utils';\n// eslint-disable react-hooks/exhaustive-deps\nexport default function useClaimReward() {\n  _s();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId,\n      account = _useActiveWeb3React.account,\n      library = _useActiveWeb3React.library;\n\n  var rewardContract = useMemo(function () {\n    return !!chainId && !!account && !!library ? getClaimRewardContract(chainId, library, account) : undefined;\n  }, [chainId, library, account]);\n  var isValid = !!chainId && !!account && !!library;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserHasReward = _useState2[0],\n      setIsUserHasReward = _useState2[1];\n\n  var _useState3 = useState('0'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rewardAmounts = _useState4[0],\n      setRewardAmounts = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phaseId = _useState8[0],\n      setPhaseId = _useState8[1];\n\n  var _useSWR = useSWR(isValid && chainId ? CLAIM_REWARDS_DATA_URL[chainId] : '', function (url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  }),\n      data = _useSWR.data;\n\n  var userRewards = useMemo(function () {\n    return data && Array.isArray(data) && account && data.map(function (phase) {\n      return {\n        phaseId: phase.phaseId,\n        tokens: phase.tokens,\n        reward: phase.userRewards[account]\n      };\n    }) || [];\n  }, [data, account]);\n  var updateRewardAmounts = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var i, phase, res, remainAmounts;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setRewardAmounts('0');\n            setIsUserHasReward(userRewards && userRewards.some(function (phase) {\n              return !!phase.reward;\n            }));\n\n            if (!(rewardContract && chainId && data && account && userRewards.length > 0)) {\n              _context.next = 19;\n              break;\n            }\n\n            i = 0;\n\n          case 4:\n            if (!(i < userRewards.length)) {\n              _context.next = 19;\n              break;\n            }\n\n            phase = userRewards[i];\n\n            if (!phase.reward) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 9;\n            return rewardContract.getClaimedAmounts(phase.phaseId || 0, account || '', phase.tokens || []);\n\n          case 9:\n            res = _context.sent;\n\n            if (!res) {\n              _context.next = 16;\n              break;\n            }\n\n            remainAmounts = BigNumber.from(phase.reward.amounts[0]).sub(BigNumber.from(res[0])).toString();\n            setRewardAmounts(CurrencyAmount.fromRawAmount(KNC[chainId], remainAmounts).toSignificant(6));\n\n            if (!(remainAmounts !== '0')) {\n              _context.next = 16;\n              break;\n            }\n\n            setPhaseId(i);\n            return _context.abrupt(\"break\", 19);\n\n          case 16:\n            i++;\n            _context.next = 4;\n            break;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [rewardContract, chainId, data, account, userRewards]);\n  useEffect(function () {\n    setRewardAmounts('0');\n\n    if (data && chainId && account && library && userRewards) {\n      updateRewardAmounts().catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, [data, chainId, account, library, rewardContract, userRewards, updateRewardAmounts]);\n  var addTransactionWithType = useTransactionAdder();\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      attemptingTxn = _useState10[0],\n      setAttemptingTxn = _useState10[1];\n\n  var _useState11 = useState(undefined),\n      _useState12 = _slicedToArray(_useState11, 2),\n      txHash = _useState12[0],\n      setTxHash = _useState12[1];\n\n  var allTransactions = useAllTransactions();\n  var tx = useMemo(function () {\n    return Object.keys(allTransactions).map(function (key) {\n      return allTransactions[key];\n    }).filter(function (item) {\n      return item.type === 'Claim reward' && !item.receipt;\n    })[0];\n  }, [allTransactions]);\n  var resetTxn = useCallback(function () {\n    setAttemptingTxn(false);\n    setTxHash(undefined);\n    updateRewardAmounts();\n    setError(null);\n  }, [updateRewardAmounts]);\n  var hasPendingTx = !!tx;\n  useEffect(function () {\n    if (!hasPendingTx) {\n      resetTxn();\n    }\n  }, [hasPendingTx, resetTxn]);\n  var claimRewardsCallback = useCallback(function () {\n    if (rewardContract && chainId && account && library && data && userRewards[phaseId]) {\n      var _userReward$reward, _userReward$reward2, _userReward$reward3;\n\n      setAttemptingTxn(true); //execute isValidClaim method to pre-check\n\n      var userReward = userRewards[phaseId];\n      rewardContract.isValidClaim(userReward.phaseId, (_userReward$reward = userReward.reward) === null || _userReward$reward === void 0 ? void 0 : _userReward$reward.index, account, userReward.tokens, (_userReward$reward2 = userReward.reward) === null || _userReward$reward2 === void 0 ? void 0 : _userReward$reward2.amounts, (_userReward$reward3 = userReward.reward) === null || _userReward$reward3 === void 0 ? void 0 : _userReward$reward3.proof).then(function (res) {\n        if (res) {\n          return rewardContract.getClaimedAmounts(data.phaseId || 0, account || '', (data === null || data === void 0 ? void 0 : data.tokens) || []);\n        } else {\n          throw new Error();\n        }\n      }).then(function (res) {\n        if (res) {\n          var _userReward$reward4;\n\n          if (res.length === 0 || !BigNumber.from((_userReward$reward4 = userReward.reward) === null || _userReward$reward4 === void 0 ? void 0 : _userReward$reward4.amounts[0]).sub(BigNumber.from(res[0])).isZero()) {\n            var _userReward$reward5, _userReward$reward6, _userReward$reward7;\n\n            //if amount available for claim, execute claim method\n            return rewardContract.claim(userReward.phaseId, (_userReward$reward5 = userReward.reward) === null || _userReward$reward5 === void 0 ? void 0 : _userReward$reward5.index, account, userReward.tokens, (_userReward$reward6 = userReward.reward) === null || _userReward$reward6 === void 0 ? void 0 : _userReward$reward6.amounts, (_userReward$reward7 = userReward.reward) === null || _userReward$reward7 === void 0 ? void 0 : _userReward$reward7.proof);\n          } else {\n            setRewardAmounts('0');\n            throw new Error(\n            /*i18n*/\n            i18n._(\"Insufficient reward amount available for claim!\"));\n          }\n        } else {\n          throw new Error();\n        }\n      }).then(function (tx) {\n        setAttemptingTxn(false);\n        setTxHash(tx.hash);\n        addTransactionWithType(tx, {\n          type: 'Claim reward',\n          summary: rewardAmounts + ' KNC'\n        });\n      }).catch(function (err) {\n        //on invalid claim reward\n        setAttemptingTxn(false);\n        var e = new Error('Claim Reward error', {\n          cause: err\n        });\n        e.name = 'ClaimRewardError';\n        captureException(e);\n        setError(err.message ||\n        /*i18n*/\n        i18n._(\"Something is wrong. Please try again later!\"));\n      });\n    }\n  }, [rewardContract, chainId, account, library, data, rewardAmounts, phaseId, userRewards, addTransactionWithType]);\n  return {\n    isUserHasReward: isUserHasReward,\n    rewardAmounts: rewardAmounts,\n    claimRewardsCallback: claimRewardsCallback,\n    attemptingTxn: attemptingTxn,\n    txHash: txHash,\n    resetTxn: resetTxn,\n    pendingTx: !!tx && !tx.receipt,\n    error: error\n  };\n}\n\n_s(useClaimReward, \"Ee2NdqdtLaedqOgnWQ6GQpmaUNo=\", false, function () {\n  return [useActiveWeb3React, useSWR, useTransactionAdder, useAllTransactions];\n});","map":{"version":3,"names":["CurrencyAmount","captureException","BigNumber","useCallback","useEffect","useMemo","useState","useSWR","CLAIM_REWARDS_DATA_URL","KNC","useActiveWeb3React","useAllTransactions","useTransactionAdder","getClaimRewardContract","useClaimReward","chainId","account","library","rewardContract","undefined","isValid","isUserHasReward","setIsUserHasReward","rewardAmounts","setRewardAmounts","error","setError","phaseId","setPhaseId","url","fetch","then","r","json","data","userRewards","Array","isArray","map","phase","tokens","reward","updateRewardAmounts","some","length","i","getClaimedAmounts","res","remainAmounts","from","amounts","sub","toString","fromRawAmount","toSignificant","catch","console","log","addTransactionWithType","attemptingTxn","setAttemptingTxn","txHash","setTxHash","allTransactions","tx","Object","keys","key","filter","item","type","receipt","resetTxn","hasPendingTx","claimRewardsCallback","userReward","isValidClaim","index","proof","Error","isZero","claim","hash","summary","err","e","cause","name","message","pendingTx"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useClaimReward.ts"],"sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { CurrencyAmount } from '@kyberswap/ks-sdk-core'\nimport { t } from '@lingui/macro'\nimport { captureException } from '@sentry/react'\nimport { BigNumber } from 'ethers'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport useSWR from 'swr'\n\nimport { CLAIM_REWARDS_DATA_URL, KNC } from 'constants/index'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTransactions, useTransactionAdder } from 'state/transactions/hooks'\nimport { getClaimRewardContract } from 'utils'\n\nexport interface IReward {\n  index: number\n  amounts: string[]\n  proof: string[]\n}\nexport interface IPhaseData {\n  phaseId: number\n  merkleRoot: string\n  tokens: string[]\n  userRewards: { [address: string]: IReward }\n}\nexport interface IUserReward {\n  phaseId: number\n  tokens: string[]\n  reward: IReward | undefined\n}\n\n// eslint-disable react-hooks/exhaustive-deps\nexport default function useClaimReward() {\n  const { chainId, account, library } = useActiveWeb3React()\n  const rewardContract = useMemo(() => {\n    return !!chainId && !!account && !!library ? getClaimRewardContract(chainId, library, account) : undefined\n  }, [chainId, library, account])\n  const isValid = !!chainId && !!account && !!library\n  const [isUserHasReward, setIsUserHasReward] = useState(false)\n  const [rewardAmounts, setRewardAmounts] = useState('0')\n  const [error, setError] = useState<string | null>(null)\n  const [phaseId, setPhaseId] = useState(0)\n  const { data } = useSWR(isValid && chainId ? CLAIM_REWARDS_DATA_URL[chainId] : '', (url: string) =>\n    fetch(url).then(r => r.json()),\n  )\n  const userRewards: IUserReward[] = useMemo(\n    () =>\n      (data &&\n        Array.isArray(data) &&\n        account &&\n        data.map((phase: IPhaseData) => {\n          return { phaseId: phase.phaseId, tokens: phase.tokens, reward: phase.userRewards[account] }\n        })) ||\n      [],\n    [data, account],\n  )\n\n  const updateRewardAmounts = useCallback(async () => {\n    setRewardAmounts('0')\n    setIsUserHasReward(userRewards && userRewards.some((phase: IUserReward) => !!phase.reward))\n    if (rewardContract && chainId && data && account && userRewards.length > 0) {\n      for (let i = 0; i < userRewards.length; i++) {\n        const phase = userRewards[i]\n        if (phase.reward) {\n          const res = await rewardContract.getClaimedAmounts(phase.phaseId || 0, account || '', phase.tokens || [])\n          if (res) {\n            const remainAmounts = BigNumber.from(phase.reward.amounts[0]).sub(BigNumber.from(res[0])).toString()\n            setRewardAmounts(CurrencyAmount.fromRawAmount(KNC[chainId], remainAmounts).toSignificant(6))\n            if (remainAmounts !== '0') {\n              setPhaseId(i)\n              break\n            }\n          }\n        }\n      }\n    }\n  }, [rewardContract, chainId, data, account, userRewards])\n\n  useEffect(() => {\n    setRewardAmounts('0')\n    if (data && chainId && account && library && userRewards) {\n      updateRewardAmounts().catch(error => console.log(error))\n    }\n  }, [data, chainId, account, library, rewardContract, userRewards, updateRewardAmounts])\n\n  const addTransactionWithType = useTransactionAdder()\n  const [attemptingTxn, setAttemptingTxn] = useState(false)\n  const [txHash, setTxHash] = useState<string | undefined>(undefined)\n\n  const allTransactions = useAllTransactions()\n  const tx = useMemo(\n    () =>\n      Object.keys(allTransactions)\n        .map(key => allTransactions[key])\n        .filter(item => item.type === 'Claim reward' && !item.receipt)[0],\n    [allTransactions],\n  )\n  const resetTxn = useCallback(() => {\n    setAttemptingTxn(false)\n    setTxHash(undefined)\n    updateRewardAmounts()\n    setError(null)\n  }, [updateRewardAmounts])\n\n  const hasPendingTx = !!tx\n  useEffect(() => {\n    if (!hasPendingTx) {\n      resetTxn()\n    }\n  }, [hasPendingTx, resetTxn])\n\n  const claimRewardsCallback = useCallback(() => {\n    if (rewardContract && chainId && account && library && data && userRewards[phaseId]) {\n      setAttemptingTxn(true)\n      //execute isValidClaim method to pre-check\n      const userReward = userRewards[phaseId]\n      rewardContract\n        .isValidClaim(\n          userReward.phaseId,\n          userReward.reward?.index,\n          account,\n          userReward.tokens,\n          userReward.reward?.amounts,\n          userReward.reward?.proof,\n        )\n        .then((res: boolean) => {\n          if (res) {\n            return rewardContract.getClaimedAmounts(data.phaseId || 0, account || '', data?.tokens || [])\n          } else {\n            throw new Error()\n          }\n        })\n        .then((res: number[]) => {\n          if (res) {\n            if (\n              res.length === 0 ||\n              !BigNumber.from(userReward.reward?.amounts[0]).sub(BigNumber.from(res[0])).isZero()\n            ) {\n              //if amount available for claim, execute claim method\n              return rewardContract.claim(\n                userReward.phaseId,\n                userReward.reward?.index,\n                account,\n                userReward.tokens,\n                userReward.reward?.amounts,\n                userReward.reward?.proof,\n              )\n            } else {\n              setRewardAmounts('0')\n              throw new Error(t`Insufficient reward amount available for claim!`)\n            }\n          } else {\n            throw new Error()\n          }\n        })\n        .then((tx: TransactionResponse) => {\n          setAttemptingTxn(false)\n          setTxHash(tx.hash)\n          addTransactionWithType(tx, {\n            type: 'Claim reward',\n            summary: rewardAmounts + ' KNC',\n          })\n        })\n        .catch((err: any) => {\n          //on invalid claim reward\n          setAttemptingTxn(false)\n          const e = new Error('Claim Reward error', { cause: err })\n          e.name = 'ClaimRewardError'\n          captureException(e)\n\n          setError(err.message || t`Something is wrong. Please try again later!`)\n        })\n    }\n  }, [rewardContract, chainId, account, library, data, rewardAmounts, phaseId, userRewards, addTransactionWithType])\n\n  return {\n    isUserHasReward,\n    rewardAmounts,\n    claimRewardsCallback,\n    attemptingTxn,\n    txHash,\n    resetTxn,\n    pendingTx: !!tx && !tx.receipt,\n    error,\n  }\n}\n"],"mappings":";;;;;;;AACA,SAASA,cAAT,QAA+B,wBAA/B;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,SAASC,sBAAT,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,0BAAxD;AACA,SAASC,sBAAT,QAAuC,OAAvC;AAmBA;AACA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,0BAAsCJ,kBAAkB,EAAxD;EAAA,IAAQK,OAAR,uBAAQA,OAAR;EAAA,IAAiBC,OAAjB,uBAAiBA,OAAjB;EAAA,IAA0BC,OAA1B,uBAA0BA,OAA1B;;EACA,IAAMC,cAAc,GAAGb,OAAO,CAAC,YAAM;IACnC,OAAO,CAAC,CAACU,OAAF,IAAa,CAAC,CAACC,OAAf,IAA0B,CAAC,CAACC,OAA5B,GAAsCJ,sBAAsB,CAACE,OAAD,EAAUE,OAAV,EAAmBD,OAAnB,CAA5D,GAA0FG,SAAjG;EACD,CAF6B,EAE3B,CAACJ,OAAD,EAAUE,OAAV,EAAmBD,OAAnB,CAF2B,CAA9B;EAGA,IAAMI,OAAO,GAAG,CAAC,CAACL,OAAF,IAAa,CAAC,CAACC,OAAf,IAA0B,CAAC,CAACC,OAA5C;;EACA,gBAA8CX,QAAQ,CAAC,KAAD,CAAtD;EAAA;EAAA,IAAOe,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,iBAA0ChB,QAAQ,CAAC,GAAD,CAAlD;EAAA;EAAA,IAAOiB,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA0BlB,QAAQ,CAAgB,IAAhB,CAAlC;EAAA;EAAA,IAAOmB,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA8BpB,QAAQ,CAAC,CAAD,CAAtC;EAAA;EAAA,IAAOqB,OAAP;EAAA,IAAgBC,UAAhB;;EACA,cAAiBrB,MAAM,CAACa,OAAO,IAAIL,OAAX,GAAqBP,sBAAsB,CAACO,OAAD,CAA3C,GAAuD,EAAxD,EAA4D,UAACc,GAAD;IAAA,OACjFC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,IAAF,EAAJ;IAAA,CAAjB,CADiF;EAAA,CAA5D,CAAvB;EAAA,IAAQC,IAAR,WAAQA,IAAR;;EAGA,IAAMC,WAA0B,GAAG9B,OAAO,CACxC;IAAA,OACG6B,IAAI,IACHE,KAAK,CAACC,OAAN,CAAcH,IAAd,CADD,IAEClB,OAFD,IAGCkB,IAAI,CAACI,GAAL,CAAS,UAACC,KAAD,EAAuB;MAC9B,OAAO;QAAEZ,OAAO,EAAEY,KAAK,CAACZ,OAAjB;QAA0Ba,MAAM,EAAED,KAAK,CAACC,MAAxC;QAAgDC,MAAM,EAAEF,KAAK,CAACJ,WAAN,CAAkBnB,OAAlB;MAAxD,CAAP;IACD,CAFD,CAHF,IAMA,EAPF;EAAA,CADwC,EASxC,CAACkB,IAAD,EAAOlB,OAAP,CATwC,CAA1C;EAYA,IAAM0B,mBAAmB,GAAGvC,WAAW,0EAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YACtCqB,gBAAgB,CAAC,GAAD,CAAhB;YACAF,kBAAkB,CAACa,WAAW,IAAIA,WAAW,CAACQ,IAAZ,CAAiB,UAACJ,KAAD;cAAA,OAAwB,CAAC,CAACA,KAAK,CAACE,MAAhC;YAAA,CAAjB,CAAhB,CAAlB;;YAFsC,MAGlCvB,cAAc,IAAIH,OAAlB,IAA6BmB,IAA7B,IAAqClB,OAArC,IAAgDmB,WAAW,CAACS,MAAZ,GAAqB,CAHnC;cAAA;cAAA;YAAA;;YAI3BC,CAJ2B,GAIvB,CAJuB;;UAAA;YAAA,MAIpBA,CAAC,GAAGV,WAAW,CAACS,MAJI;cAAA;cAAA;YAAA;;YAK5BL,KAL4B,GAKpBJ,WAAW,CAACU,CAAD,CALS;;YAAA,KAM9BN,KAAK,CAACE,MANwB;cAAA;cAAA;YAAA;;YAAA;YAAA,OAOdvB,cAAc,CAAC4B,iBAAf,CAAiCP,KAAK,CAACZ,OAAN,IAAiB,CAAlD,EAAqDX,OAAO,IAAI,EAAhE,EAAoEuB,KAAK,CAACC,MAAN,IAAgB,EAApF,CAPc;;UAAA;YAO1BO,GAP0B;;YAAA,KAQ5BA,GAR4B;cAAA;cAAA;YAAA;;YASxBC,aATwB,GASR9C,SAAS,CAAC+C,IAAV,CAAeV,KAAK,CAACE,MAAN,CAAaS,OAAb,CAAqB,CAArB,CAAf,EAAwCC,GAAxC,CAA4CjD,SAAS,CAAC+C,IAAV,CAAeF,GAAG,CAAC,CAAD,CAAlB,CAA5C,EAAoEK,QAApE,EATQ;YAU9B5B,gBAAgB,CAACxB,cAAc,CAACqD,aAAf,CAA6B5C,GAAG,CAACM,OAAD,CAAhC,EAA2CiC,aAA3C,EAA0DM,aAA1D,CAAwE,CAAxE,CAAD,CAAhB;;YAV8B,MAW1BN,aAAa,KAAK,GAXQ;cAAA;cAAA;YAAA;;YAY5BpB,UAAU,CAACiB,CAAD,CAAV;YAZ4B;;UAAA;YAIIA,CAAC,EAJL;YAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,IAmBpC,CAAC3B,cAAD,EAAiBH,OAAjB,EAA0BmB,IAA1B,EAAgClB,OAAhC,EAAyCmB,WAAzC,CAnBoC,CAAvC;EAqBA/B,SAAS,CAAC,YAAM;IACdoB,gBAAgB,CAAC,GAAD,CAAhB;;IACA,IAAIU,IAAI,IAAInB,OAAR,IAAmBC,OAAnB,IAA8BC,OAA9B,IAAyCkB,WAA7C,EAA0D;MACxDO,mBAAmB,GAAGa,KAAtB,CAA4B,UAAA9B,KAAK;QAAA,OAAI+B,OAAO,CAACC,GAAR,CAAYhC,KAAZ,CAAJ;MAAA,CAAjC;IACD;EACF,CALQ,EAKN,CAACS,IAAD,EAAOnB,OAAP,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkCC,cAAlC,EAAkDiB,WAAlD,EAA+DO,mBAA/D,CALM,CAAT;EAOA,IAAMgB,sBAAsB,GAAG9C,mBAAmB,EAAlD;;EACA,iBAA0CN,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOqD,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,kBAA4BtD,QAAQ,CAAqBa,SAArB,CAApC;EAAA;EAAA,IAAO0C,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,eAAe,GAAGpD,kBAAkB,EAA1C;EACA,IAAMqD,EAAE,GAAG3D,OAAO,CAChB;IAAA,OACE4D,MAAM,CAACC,IAAP,CAAYH,eAAZ,EACGzB,GADH,CACO,UAAA6B,GAAG;MAAA,OAAIJ,eAAe,CAACI,GAAD,CAAnB;IAAA,CADV,EAEGC,MAFH,CAEU,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACC,IAAL,KAAc,cAAd,IAAgC,CAACD,IAAI,CAACE,OAA1C;IAAA,CAFd,EAEiE,CAFjE,CADF;EAAA,CADgB,EAKhB,CAACR,eAAD,CALgB,CAAlB;EAOA,IAAMS,QAAQ,GAAGrE,WAAW,CAAC,YAAM;IACjCyD,gBAAgB,CAAC,KAAD,CAAhB;IACAE,SAAS,CAAC3C,SAAD,CAAT;IACAuB,mBAAmB;IACnBhB,QAAQ,CAAC,IAAD,CAAR;EACD,CAL2B,EAKzB,CAACgB,mBAAD,CALyB,CAA5B;EAOA,IAAM+B,YAAY,GAAG,CAAC,CAACT,EAAvB;EACA5D,SAAS,CAAC,YAAM;IACd,IAAI,CAACqE,YAAL,EAAmB;MACjBD,QAAQ;IACT;EACF,CAJQ,EAIN,CAACC,YAAD,EAAeD,QAAf,CAJM,CAAT;EAMA,IAAME,oBAAoB,GAAGvE,WAAW,CAAC,YAAM;IAC7C,IAAIe,cAAc,IAAIH,OAAlB,IAA6BC,OAA7B,IAAwCC,OAAxC,IAAmDiB,IAAnD,IAA2DC,WAAW,CAACR,OAAD,CAA1E,EAAqF;MAAA;;MACnFiC,gBAAgB,CAAC,IAAD,CAAhB,CADmF,CAEnF;;MACA,IAAMe,UAAU,GAAGxC,WAAW,CAACR,OAAD,CAA9B;MACAT,cAAc,CACX0D,YADH,CAEID,UAAU,CAAChD,OAFf,wBAGIgD,UAAU,CAAClC,MAHf,uDAGI,mBAAmBoC,KAHvB,EAII7D,OAJJ,EAKI2D,UAAU,CAACnC,MALf,yBAMImC,UAAU,CAAClC,MANf,wDAMI,oBAAmBS,OANvB,yBAOIyB,UAAU,CAAClC,MAPf,wDAOI,oBAAmBqC,KAPvB,EASG/C,IATH,CASQ,UAACgB,GAAD,EAAkB;QACtB,IAAIA,GAAJ,EAAS;UACP,OAAO7B,cAAc,CAAC4B,iBAAf,CAAiCZ,IAAI,CAACP,OAAL,IAAgB,CAAjD,EAAoDX,OAAO,IAAI,EAA/D,EAAmE,CAAAkB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,MAAN,KAAgB,EAAnF,CAAP;QACD,CAFD,MAEO;UACL,MAAM,IAAIuC,KAAJ,EAAN;QACD;MACF,CAfH,EAgBGhD,IAhBH,CAgBQ,UAACgB,GAAD,EAAmB;QACvB,IAAIA,GAAJ,EAAS;UAAA;;UACP,IACEA,GAAG,CAACH,MAAJ,KAAe,CAAf,IACA,CAAC1C,SAAS,CAAC+C,IAAV,wBAAe0B,UAAU,CAAClC,MAA1B,wDAAe,oBAAmBS,OAAnB,CAA2B,CAA3B,CAAf,EAA8CC,GAA9C,CAAkDjD,SAAS,CAAC+C,IAAV,CAAeF,GAAG,CAAC,CAAD,CAAlB,CAAlD,EAA0EiC,MAA1E,EAFH,EAGE;YAAA;;YACA;YACA,OAAO9D,cAAc,CAAC+D,KAAf,CACLN,UAAU,CAAChD,OADN,yBAELgD,UAAU,CAAClC,MAFN,wDAEL,oBAAmBoC,KAFd,EAGL7D,OAHK,EAIL2D,UAAU,CAACnC,MAJN,yBAKLmC,UAAU,CAAClC,MALN,wDAKL,oBAAmBS,OALd,yBAMLyB,UAAU,CAAClC,MANN,wDAML,oBAAmBqC,KANd,CAAP;UAQD,CAbD,MAaO;YACLtD,gBAAgB,CAAC,GAAD,CAAhB;YACA,MAAM,IAAIuD,KAAJ;YAAA;YAAU,yDAAV,CAAN;UACD;QACF,CAlBD,MAkBO;UACL,MAAM,IAAIA,KAAJ,EAAN;QACD;MACF,CAtCH,EAuCGhD,IAvCH,CAuCQ,UAACiC,EAAD,EAA6B;QACjCJ,gBAAgB,CAAC,KAAD,CAAhB;QACAE,SAAS,CAACE,EAAE,CAACkB,IAAJ,CAAT;QACAxB,sBAAsB,CAACM,EAAD,EAAK;UACzBM,IAAI,EAAE,cADmB;UAEzBa,OAAO,EAAE5D,aAAa,GAAG;QAFA,CAAL,CAAtB;MAID,CA9CH,EA+CGgC,KA/CH,CA+CS,UAAC6B,GAAD,EAAc;QACnB;QACAxB,gBAAgB,CAAC,KAAD,CAAhB;QACA,IAAMyB,CAAC,GAAG,IAAIN,KAAJ,CAAU,oBAAV,EAAgC;UAAEO,KAAK,EAAEF;QAAT,CAAhC,CAAV;QACAC,CAAC,CAACE,IAAF,GAAS,kBAAT;QACAtF,gBAAgB,CAACoF,CAAD,CAAhB;QAEA3D,QAAQ,CAAC0D,GAAG,CAACI,OAAJ;QAAA;QAAe,qDAAhB,CAAR;MACD,CAvDH;IAwDD;EACF,CA9DuC,EA8DrC,CAACtE,cAAD,EAAiBH,OAAjB,EAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CiB,IAA5C,EAAkDX,aAAlD,EAAiEI,OAAjE,EAA0EQ,WAA1E,EAAuFuB,sBAAvF,CA9DqC,CAAxC;EAgEA,OAAO;IACLrC,eAAe,EAAfA,eADK;IAELE,aAAa,EAAbA,aAFK;IAGLmD,oBAAoB,EAApBA,oBAHK;IAILf,aAAa,EAAbA,aAJK;IAKLE,MAAM,EAANA,MALK;IAMLW,QAAQ,EAARA,QANK;IAOLiB,SAAS,EAAE,CAAC,CAACzB,EAAF,IAAQ,CAACA,EAAE,CAACO,OAPlB;IAQL9C,KAAK,EAALA;EARK,CAAP;AAUD;;GAzJuBX,c;UACgBJ,kB,EASrBH,M,EA2CcK,mB,EAIPD,kB"},"metadata":{},"sourceType":"module"}