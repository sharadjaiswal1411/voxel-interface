{"ast":null,"code":"var _createForOfIteratorHelper = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _possibleConstructorReturn = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\n\nvar _inherits = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\n(function (i, _) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = _() : \"function\" == typeof define && define.amd ? define(_) : (i = i || self, i.JSBI = _());\n})(this, function () {\n  'use strict';\n\n  var i = Math.imul,\n      _ = Math.clz32,\n      t = Math.abs,\n      e = Math.max,\n      g = Math.floor;\n\n  var o = /*#__PURE__*/function (_Array) {\n    _inherits(o, _Array);\n\n    var _super = _createSuper(o);\n\n    function o(i, _) {\n      var _this;\n\n      _classCallCheck(this, o);\n\n      if (_this = _super.call(this, i), _this.sign = _, i > o.__kMaxLength) throw new RangeError(\"Maximum BigInt size exceeded\");\n      return _possibleConstructorReturn(_this);\n    }\n\n    _createClass(o, [{\n      key: \"toDebugString\",\n      value: function toDebugString() {\n        var i = [\"BigInt[\"];\n\n        var _iterator = _createForOfIteratorHelper(this),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _2 = _step.value;\n            i.push((_2 ? (_2 >>> 0).toString(16) : _2) + \", \");\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return i.push(\"]\"), i.join(\"\");\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n        if (2 > i || 36 < i) throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n        return 0 === this.length ? \"0\" : 0 == (i & i - 1) ? o.__toStringBasePowerOfTwo(this, i) : o.__toStringGeneric(this, i, !1);\n      }\n    }, {\n      key: \"__copy\",\n      value: function __copy() {\n        var _ = new o(this.length, this.sign);\n\n        for (var _t = 0; _t < this.length; _t++) {\n          _[_t] = this[_t];\n        }\n\n        return _;\n      }\n    }, {\n      key: \"__trim\",\n      value: function __trim() {\n        var i = this.length,\n            _ = this[i - 1];\n\n        for (; 0 === _;) {\n          i--, _ = this[i - 1], this.pop();\n        }\n\n        return 0 === i && (this.sign = !1), this;\n      }\n    }, {\n      key: \"__initializeDigits\",\n      value: function __initializeDigits() {\n        for (var _3 = 0; _3 < this.length; _3++) {\n          this[_3] = 0;\n        }\n      }\n    }, {\n      key: \"__clzmsd\",\n      value: function __clzmsd() {\n        return o.__clz30(this.__digit(this.length - 1));\n      }\n    }, {\n      key: \"__inplaceMultiplyAdd\",\n      value: function __inplaceMultiplyAdd(i, _, t) {\n        t > this.length && (t = this.length);\n        var e = 32767 & i,\n            n = i >>> 15;\n        var g = 0,\n            s = _;\n\n        for (var l = 0; l < t; l++) {\n          var _i = this.__digit(l),\n              _4 = 32767 & _i,\n              _t2 = _i >>> 15,\n              r = o.__imul(_4, e),\n              a = o.__imul(_4, n),\n              u = o.__imul(_t2, e),\n              d = o.__imul(_t2, n);\n\n          var h = s + r + g;\n          g = h >>> 30, h &= 1073741823, h += ((32767 & a) << 15) + ((32767 & u) << 15), g += h >>> 30, s = d + (a >>> 15) + (u >>> 15), this.__setDigit(l, 1073741823 & h);\n        }\n\n        if (0 != g || 0 !== s) throw new Error(\"implementation bug\");\n      }\n    }, {\n      key: \"__inplaceAdd\",\n      value: function __inplaceAdd(_, t, e) {\n        var n = 0;\n\n        for (var _g = 0; _g < e; _g++) {\n          var _i2 = this.__halfDigit(t + _g) + _.__halfDigit(_g) + n;\n\n          n = _i2 >>> 15, this.__setHalfDigit(t + _g, 32767 & _i2);\n        }\n\n        return n;\n      }\n    }, {\n      key: \"__inplaceSub\",\n      value: function __inplaceSub(_, t, e) {\n        var n = 0;\n\n        if (1 & t) {\n          t >>= 1;\n\n          var _g2 = this.__digit(t),\n              _o11 = 32767 & _g2,\n              s = 0;\n\n          for (; s < e - 1 >>> 1; s++) {\n            var _i4 = _.__digit(s),\n                _e = (_g2 >>> 15) - (32767 & _i4) - n;\n\n            n = 1 & _e >>> 15, this.__setDigit(t + s, (32767 & _e) << 15 | 32767 & _o11), _g2 = this.__digit(t + s + 1), _o11 = (32767 & _g2) - (_i4 >>> 15) - n, n = 1 & _o11 >>> 15;\n          }\n\n          var _i3 = _.__digit(s),\n              l = (_g2 >>> 15) - (32767 & _i3) - n;\n\n          n = 1 & l >>> 15, this.__setDigit(t + s, (32767 & l) << 15 | 32767 & _o11);\n          if (t + s + 1 >= this.length) throw new RangeError(\"out of bounds\");\n          0 == (1 & e) && (_g2 = this.__digit(t + s + 1), _o11 = (32767 & _g2) - (_i3 >>> 15) - n, n = 1 & _o11 >>> 15, this.__setDigit(t + _.length, 1073709056 & _g2 | 32767 & _o11));\n        } else {\n          t >>= 1;\n          var _g3 = 0;\n\n          for (; _g3 < _.length - 1; _g3++) {\n            var _i6 = this.__digit(t + _g3),\n                _e2 = _.__digit(_g3),\n                _o13 = (32767 & _i6) - (32767 & _e2) - n;\n\n            n = 1 & _o13 >>> 15;\n\n            var _s2 = (_i6 >>> 15) - (_e2 >>> 15) - n;\n\n            n = 1 & _s2 >>> 15, this.__setDigit(t + _g3, (32767 & _s2) << 15 | 32767 & _o13);\n          }\n\n          var _i5 = this.__digit(t + _g3),\n              _o12 = _.__digit(_g3),\n              _s = (32767 & _i5) - (32767 & _o12) - n;\n\n          n = 1 & _s >>> 15;\n          var _l = 0;\n          0 == (1 & e) && (_l = (_i5 >>> 15) - (_o12 >>> 15) - n, n = 1 & _l >>> 15), this.__setDigit(t + _g3, (32767 & _l) << 15 | 32767 & _s);\n        }\n\n        return n;\n      }\n    }, {\n      key: \"__inplaceRightShift\",\n      value: function __inplaceRightShift(_) {\n        if (0 === _) return;\n\n        var t = this.__digit(0) >>> _;\n\n        var e = this.length - 1;\n\n        for (var n = 0; n < e; n++) {\n          var _i7 = this.__digit(n + 1);\n\n          this.__setDigit(n, 1073741823 & _i7 << 30 - _ | t), t = _i7 >>> _;\n        }\n\n        this.__setDigit(e, t);\n      }\n    }, {\n      key: \"__digit\",\n      value: function __digit(_) {\n        return this[_];\n      }\n    }, {\n      key: \"__unsignedDigit\",\n      value: function __unsignedDigit(_) {\n        return this[_] >>> 0;\n      }\n    }, {\n      key: \"__setDigit\",\n      value: function __setDigit(_, i) {\n        this[_] = 0 | i;\n      }\n    }, {\n      key: \"__setDigitGrow\",\n      value: function __setDigitGrow(_, i) {\n        this[_] = 0 | i;\n      }\n    }, {\n      key: \"__halfDigitLength\",\n      value: function __halfDigitLength() {\n        var i = this.length;\n        return 32767 >= this.__unsignedDigit(i - 1) ? 2 * i - 1 : 2 * i;\n      }\n    }, {\n      key: \"__halfDigit\",\n      value: function __halfDigit(_) {\n        return 32767 & this[_ >>> 1] >>> 15 * (1 & _);\n      }\n    }, {\n      key: \"__setHalfDigit\",\n      value: function __setHalfDigit(_, i) {\n        var t = _ >>> 1,\n            e = this.__digit(t),\n            n = 1 & _ ? 32767 & e | i << 15 : 1073709056 & e | 32767 & i;\n\n        this.__setDigit(t, n);\n      }\n    }], [{\n      key: \"BigInt\",\n      value: function BigInt(i) {\n        var _ = Number.isFinite;\n\n        if (\"number\" == typeof i) {\n          if (0 === i) return o.__zero();\n          if (o.__isOneDigitInt(i)) return 0 > i ? o.__oneDigit(-i, !0) : o.__oneDigit(i, !1);\n          if (!_(i) || g(i) !== i) throw new RangeError(\"The number \" + i + \" cannot be converted to BigInt because it is not an integer\");\n          return o.__fromDouble(i);\n        }\n\n        if (\"string\" == typeof i) {\n          var _5 = o.__fromString(i);\n\n          if (null === _5) throw new SyntaxError(\"Cannot convert \" + i + \" to a BigInt\");\n          return _5;\n        }\n\n        if (\"boolean\" == typeof i) return !0 === i ? o.__oneDigit(1, !1) : o.__zero();\n\n        if (\"object\" == typeof i) {\n          if (i.constructor === o) return i;\n\n          var _6 = o.__toPrimitive(i);\n\n          return o.BigInt(_6);\n        }\n\n        throw new TypeError(\"Cannot convert \" + i + \" to a BigInt\");\n      }\n    }, {\n      key: \"toNumber\",\n      value: function toNumber(i) {\n        var _ = i.length;\n        if (0 === _) return 0;\n\n        if (1 === _) {\n          var _7 = i.__unsignedDigit(0);\n\n          return i.sign ? -_7 : _7;\n        }\n\n        var t = i.__digit(_ - 1),\n            e = o.__clz30(t),\n            n = 30 * _ - e;\n\n        if (1024 < n) return i.sign ? -Infinity : 1 / 0;\n        var g = n - 1,\n            s = t,\n            l = _ - 1;\n        var r = e + 3;\n        var a = 32 === r ? 0 : s << r;\n        a >>>= 12;\n        var u = r - 12;\n        var d = 12 <= r ? 0 : s << 20 + r,\n            h = 20 + r;\n\n        for (0 < u && 0 < l && (l--, s = i.__digit(l), a |= s >>> 30 - u, d = s << u + 2, h = u + 2); 0 < h && 0 < l;) {\n          l--, s = i.__digit(l), d |= 30 <= h ? s << h - 30 : s >>> 30 - h, h -= 30;\n        }\n\n        var m = o.__decideRounding(i, h, l, s);\n\n        if ((1 === m || 0 === m && 1 == (1 & d)) && (d = d + 1 >>> 0, 0 === d && (a++, 0 != a >>> 20 && (a = 0, g++, 1023 < g)))) return i.sign ? -Infinity : 1 / 0;\n        var b = i.sign ? -2147483648 : 0;\n        return g = g + 1023 << 20, o.__kBitConversionInts[1] = b | g | a, o.__kBitConversionInts[0] = d, o.__kBitConversionDouble[0];\n      }\n    }, {\n      key: \"unaryMinus\",\n      value: function unaryMinus(i) {\n        if (0 === i.length) return i;\n\n        var _ = i.__copy();\n\n        return _.sign = !i.sign, _;\n      }\n    }, {\n      key: \"bitwiseNot\",\n      value: function bitwiseNot(i) {\n        return i.sign ? o.__absoluteSubOne(i).__trim() : o.__absoluteAddOne(i, !0);\n      }\n    }, {\n      key: \"exponentiate\",\n      value: function exponentiate(i, _) {\n        if (_.sign) throw new RangeError(\"Exponent must be positive\");\n        if (0 === _.length) return o.__oneDigit(1, !1);\n        if (0 === i.length) return i;\n        if (1 === i.length && 1 === i.__digit(0)) return i.sign && 0 == (1 & _.__digit(0)) ? o.unaryMinus(i) : i;\n        if (1 < _.length) throw new RangeError(\"BigInt too big\");\n\n        var t = _.__unsignedDigit(0);\n\n        if (1 === t) return i;\n        if (t >= o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n\n        if (1 === i.length && 2 === i.__digit(0)) {\n          var _8 = 1 + (0 | t / 30),\n              _e3 = i.sign && 0 != (1 & t),\n              _n = new o(_8, _e3);\n\n          _n.__initializeDigits();\n\n          var _g4 = 1 << t % 30;\n\n          return _n.__setDigit(_8 - 1, _g4), _n;\n        }\n\n        var e = null,\n            n = i;\n\n        for (0 != (1 & t) && (e = i), t >>= 1; 0 !== t; t >>= 1) {\n          n = o.multiply(n, n), 0 != (1 & t) && (null === e ? e = n : e = o.multiply(e, n));\n        }\n\n        return e;\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(_, t) {\n        if (0 === _.length) return _;\n        if (0 === t.length) return t;\n        var i = _.length + t.length;\n        30 <= _.__clzmsd() + t.__clzmsd() && i--;\n        var e = new o(i, _.sign !== t.sign);\n\n        e.__initializeDigits();\n\n        for (var n = 0; n < _.length; n++) {\n          o.__multiplyAccumulate(t, _.__digit(n), e, n);\n        }\n\n        return e.__trim();\n      }\n    }, {\n      key: \"divide\",\n      value: function divide(i, _) {\n        if (0 === _.length) throw new RangeError(\"Division by zero\");\n        if (0 > o.__absoluteCompare(i, _)) return o.__zero();\n\n        var t = i.sign !== _.sign,\n            e = _.__unsignedDigit(0);\n\n        var n;\n\n        if (1 === _.length && 32767 >= e) {\n          if (1 === e) return t === i.sign ? i : o.unaryMinus(i);\n          n = o.__absoluteDivSmall(i, e, null);\n        } else n = o.__absoluteDivLarge(i, _, !0, !1);\n\n        return n.sign = t, n.__trim();\n      }\n    }, {\n      key: \"remainder\",\n      value: function remainder(i, _) {\n        if (0 === _.length) throw new RangeError(\"Division by zero\");\n        if (0 > o.__absoluteCompare(i, _)) return i;\n\n        var t = _.__unsignedDigit(0);\n\n        if (1 === _.length && 32767 >= t) {\n          if (1 === t) return o.__zero();\n\n          var _9 = o.__absoluteModSmall(i, t);\n\n          return 0 === _9 ? o.__zero() : o.__oneDigit(_9, i.sign);\n        }\n\n        var e = o.__absoluteDivLarge(i, _, !1, !0);\n\n        return e.sign = i.sign, e.__trim();\n      }\n    }, {\n      key: \"add\",\n      value: function add(i, _) {\n        var t = i.sign;\n        return t === _.sign ? o.__absoluteAdd(i, _, t) : 0 <= o.__absoluteCompare(i, _) ? o.__absoluteSub(i, _, t) : o.__absoluteSub(_, i, !t);\n      }\n    }, {\n      key: \"subtract\",\n      value: function subtract(i, _) {\n        var t = i.sign;\n        return t === _.sign ? 0 <= o.__absoluteCompare(i, _) ? o.__absoluteSub(i, _, t) : o.__absoluteSub(_, i, !t) : o.__absoluteAdd(i, _, t);\n      }\n    }, {\n      key: \"leftShift\",\n      value: function leftShift(i, _) {\n        return 0 === _.length || 0 === i.length ? i : _.sign ? o.__rightShiftByAbsolute(i, _) : o.__leftShiftByAbsolute(i, _);\n      }\n    }, {\n      key: \"signedRightShift\",\n      value: function signedRightShift(i, _) {\n        return 0 === _.length || 0 === i.length ? i : _.sign ? o.__leftShiftByAbsolute(i, _) : o.__rightShiftByAbsolute(i, _);\n      }\n    }, {\n      key: \"unsignedRightShift\",\n      value: function unsignedRightShift() {\n        throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n      }\n    }, {\n      key: \"lessThan\",\n      value: function lessThan(i, _) {\n        return 0 > o.__compareToBigInt(i, _);\n      }\n    }, {\n      key: \"lessThanOrEqual\",\n      value: function lessThanOrEqual(i, _) {\n        return 0 >= o.__compareToBigInt(i, _);\n      }\n    }, {\n      key: \"greaterThan\",\n      value: function greaterThan(i, _) {\n        return 0 < o.__compareToBigInt(i, _);\n      }\n    }, {\n      key: \"greaterThanOrEqual\",\n      value: function greaterThanOrEqual(i, _) {\n        return 0 <= o.__compareToBigInt(i, _);\n      }\n    }, {\n      key: \"equal\",\n      value: function equal(_, t) {\n        if (_.sign !== t.sign) return !1;\n        if (_.length !== t.length) return !1;\n\n        for (var _e4 = 0; _e4 < _.length; _e4++) {\n          if (_.__digit(_e4) !== t.__digit(_e4)) return !1;\n        }\n\n        return !0;\n      }\n    }, {\n      key: \"notEqual\",\n      value: function notEqual(i, _) {\n        return !o.equal(i, _);\n      }\n    }, {\n      key: \"bitwiseAnd\",\n      value: function bitwiseAnd(i, _) {\n        var _ref;\n\n        if (!i.sign && !_.sign) return o.__absoluteAnd(i, _).__trim();\n\n        if (i.sign && _.sign) {\n          var _t3 = e(i.length, _.length) + 1;\n\n          var n = o.__absoluteSubOne(i, _t3);\n\n          var _g5 = o.__absoluteSubOne(_);\n\n          return n = o.__absoluteOr(n, _g5, n), o.__absoluteAddOne(n, !0, n).__trim();\n        }\n\n        return i.sign && (_ref = [_, i], i = _ref[0], _ = _ref[1], _ref), o.__absoluteAndNot(i, o.__absoluteSubOne(_)).__trim();\n      }\n    }, {\n      key: \"bitwiseXor\",\n      value: function bitwiseXor(i, _) {\n        var _ref2;\n\n        if (!i.sign && !_.sign) return o.__absoluteXor(i, _).__trim();\n\n        if (i.sign && _.sign) {\n          var _t4 = e(i.length, _.length),\n              _n2 = o.__absoluteSubOne(i, _t4),\n              _g6 = o.__absoluteSubOne(_);\n\n          return o.__absoluteXor(_n2, _g6, _n2).__trim();\n        }\n\n        var t = e(i.length, _.length) + 1;\n        i.sign && (_ref2 = [_, i], i = _ref2[0], _ = _ref2[1], _ref2);\n\n        var n = o.__absoluteSubOne(_, t);\n\n        return n = o.__absoluteXor(n, i, n), o.__absoluteAddOne(n, !0, n).__trim();\n      }\n    }, {\n      key: \"bitwiseOr\",\n      value: function bitwiseOr(i, _) {\n        var _ref3;\n\n        var t = e(i.length, _.length);\n        if (!i.sign && !_.sign) return o.__absoluteOr(i, _).__trim();\n\n        if (i.sign && _.sign) {\n          var _e5 = o.__absoluteSubOne(i, t);\n\n          var _n3 = o.__absoluteSubOne(_);\n\n          return _e5 = o.__absoluteAnd(_e5, _n3, _e5), o.__absoluteAddOne(_e5, !0, _e5).__trim();\n        }\n\n        i.sign && (_ref3 = [_, i], i = _ref3[0], _ = _ref3[1], _ref3);\n\n        var n = o.__absoluteSubOne(_, t);\n\n        return n = o.__absoluteAndNot(n, i, n), o.__absoluteAddOne(n, !0, n).__trim();\n      }\n    }, {\n      key: \"asIntN\",\n      value: function asIntN(_, t) {\n        if (0 === t.length) return t;\n        if (_ = g(_), 0 > _) throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n        if (0 === _) return o.__zero();\n        if (_ >= o.__kMaxLengthBits) return t;\n        var e = 0 | (_ + 29) / 30;\n        if (t.length < e) return t;\n\n        var s = t.__unsignedDigit(e - 1),\n            l = 1 << (_ - 1) % 30;\n\n        if (t.length === e && s < l) return t;\n        if (!((s & l) === l)) return o.__truncateToNBits(_, t);\n        if (!t.sign) return o.__truncateAndSubFromPowerOfTwo(_, t, !0);\n\n        if (0 == (s & l - 1)) {\n          for (var n = e - 2; 0 <= n; n--) {\n            if (0 !== t.__digit(n)) return o.__truncateAndSubFromPowerOfTwo(_, t, !1);\n          }\n\n          return t.length === e && s === l ? t : o.__truncateToNBits(_, t);\n        }\n\n        return o.__truncateAndSubFromPowerOfTwo(_, t, !1);\n      }\n    }, {\n      key: \"asUintN\",\n      value: function asUintN(i, _) {\n        if (0 === _.length) return _;\n        if (i = g(i), 0 > i) throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");\n        if (0 === i) return o.__zero();\n\n        if (_.sign) {\n          if (i > o.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n          return o.__truncateAndSubFromPowerOfTwo(i, _, !1);\n        }\n\n        if (i >= o.__kMaxLengthBits) return _;\n        var t = 0 | (i + 29) / 30;\n        if (_.length < t) return _;\n        var e = i % 30;\n\n        if (_.length == t) {\n          if (0 === e) return _;\n\n          var _i8 = _.__digit(t - 1);\n\n          if (0 == _i8 >>> e) return _;\n        }\n\n        return o.__truncateToNBits(i, _);\n      }\n    }, {\n      key: \"ADD\",\n      value: function ADD(i, _) {\n        if (i = o.__toPrimitive(i), _ = o.__toPrimitive(_), \"string\" == typeof i) return \"string\" != typeof _ && (_ = _.toString()), i + _;\n        if (\"string\" == typeof _) return i.toString() + _;\n        if (i = o.__toNumeric(i), _ = o.__toNumeric(_), o.__isBigInt(i) && o.__isBigInt(_)) return o.add(i, _);\n        if (\"number\" == typeof i && \"number\" == typeof _) return i + _;\n        throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n      }\n    }, {\n      key: \"LT\",\n      value: function LT(i, _) {\n        return o.__compare(i, _, 0);\n      }\n    }, {\n      key: \"LE\",\n      value: function LE(i, _) {\n        return o.__compare(i, _, 1);\n      }\n    }, {\n      key: \"GT\",\n      value: function GT(i, _) {\n        return o.__compare(i, _, 2);\n      }\n    }, {\n      key: \"GE\",\n      value: function GE(i, _) {\n        return o.__compare(i, _, 3);\n      }\n    }, {\n      key: \"EQ\",\n      value: function EQ(i, _) {\n        for (;;) {\n          if (o.__isBigInt(i)) return o.__isBigInt(_) ? o.equal(i, _) : o.EQ(_, i);\n\n          if (\"number\" == typeof i) {\n            if (o.__isBigInt(_)) return o.__equalToNumber(_, i);\n            if (\"object\" != typeof _) return i == _;\n            _ = o.__toPrimitive(_);\n          } else if (\"string\" == typeof i) {\n            if (o.__isBigInt(_)) return i = o.__fromString(i), null !== i && o.equal(i, _);\n            if (\"object\" != typeof _) return i == _;\n            _ = o.__toPrimitive(_);\n          } else if (\"boolean\" == typeof i) {\n            if (o.__isBigInt(_)) return o.__equalToNumber(_, +i);\n            if (\"object\" != typeof _) return i == _;\n            _ = o.__toPrimitive(_);\n          } else if (\"symbol\" == typeof i) {\n            if (o.__isBigInt(_)) return !1;\n            if (\"object\" != typeof _) return i == _;\n            _ = o.__toPrimitive(_);\n          } else if (\"object\" == typeof i) {\n            if (\"object\" == typeof _ && _.constructor !== o) return i == _;\n            i = o.__toPrimitive(i);\n          } else return i == _;\n        }\n      }\n    }, {\n      key: \"NE\",\n      value: function NE(i, _) {\n        return !o.EQ(i, _);\n      }\n    }, {\n      key: \"__zero\",\n      value: function __zero() {\n        return new o(0, !1);\n      }\n    }, {\n      key: \"__oneDigit\",\n      value: function __oneDigit(i, _) {\n        var t = new o(1, _);\n        return t.__setDigit(0, i), t;\n      }\n    }, {\n      key: \"__decideRounding\",\n      value: function __decideRounding(i, _, t, e) {\n        if (0 < _) return -1;\n        var n;\n        if (0 > _) n = -_ - 1;else {\n          if (0 === t) return -1;\n          t--, e = i.__digit(t), n = 29;\n        }\n        var g = 1 << n;\n        if (0 == (e & g)) return -1;\n        if (g -= 1, 0 != (e & g)) return 1;\n\n        for (; 0 < t;) {\n          if (t--, 0 !== i.__digit(t)) return 1;\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"__fromDouble\",\n      value: function __fromDouble(i) {\n        o.__kBitConversionDouble[0] = i;\n\n        var _ = 2047 & o.__kBitConversionInts[1] >>> 20,\n            t = _ - 1023,\n            e = (0 | t / 30) + 1,\n            n = new o(e, 0 > i);\n\n        var g = 1048575 & o.__kBitConversionInts[1] | 1048576,\n            s = o.__kBitConversionInts[0];\n        var l = 20,\n            r = t % 30;\n        var a,\n            u = 0;\n\n        if (20 > r) {\n          var _i9 = l - r;\n\n          u = _i9 + 32, a = g >>> _i9, g = g << 32 - _i9 | s >>> _i9, s <<= 32 - _i9;\n        } else if (20 === r) u = 32, a = g, g = s, s = 0;else {\n          var _i10 = r - l;\n\n          u = 32 - _i10, a = g << _i10 | s >>> 32 - _i10, g = s << _i10, s = 0;\n        }\n\n        n.__setDigit(e - 1, a);\n\n        for (var _10 = e - 2; 0 <= _10; _10--) {\n          0 < u ? (u -= 30, a = g >>> 2, g = g << 30 | s >>> 2, s <<= 30) : a = 0, n.__setDigit(_10, a);\n        }\n\n        return n.__trim();\n      }\n    }, {\n      key: \"__isWhitespace\",\n      value: function __isWhitespace(i) {\n        return !!(13 >= i && 9 <= i) || (159 >= i ? 32 == i : 131071 >= i ? 160 == i || 5760 == i : 196607 >= i ? (i &= 131071, 10 >= i || 40 == i || 41 == i || 47 == i || 95 == i || 4096 == i) : 65279 == i);\n      }\n    }, {\n      key: \"__fromString\",\n      value: function __fromString(i) {\n        var _ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        var t = 0;\n        var e = i.length;\n        var n = 0;\n        if (n === e) return o.__zero();\n        var g = i.charCodeAt(n);\n\n        for (; o.__isWhitespace(g);) {\n          if (++n === e) return o.__zero();\n          g = i.charCodeAt(n);\n        }\n\n        if (43 === g) {\n          if (++n === e) return null;\n          g = i.charCodeAt(n), t = 1;\n        } else if (45 === g) {\n          if (++n === e) return null;\n          g = i.charCodeAt(n), t = -1;\n        }\n\n        if (0 === _) {\n          if (_ = 10, 48 === g) {\n            if (++n === e) return o.__zero();\n\n            if (g = i.charCodeAt(n), 88 === g || 120 === g) {\n              if (_ = 16, ++n === e) return null;\n              g = i.charCodeAt(n);\n            } else if (79 === g || 111 === g) {\n              if (_ = 8, ++n === e) return null;\n              g = i.charCodeAt(n);\n            } else if (66 === g || 98 === g) {\n              if (_ = 2, ++n === e) return null;\n              g = i.charCodeAt(n);\n            }\n          }\n        } else if (16 === _ && 48 === g) {\n          if (++n === e) return o.__zero();\n\n          if (g = i.charCodeAt(n), 88 === g || 120 === g) {\n            if (++n === e) return null;\n            g = i.charCodeAt(n);\n          }\n        }\n\n        if (0 != t && 10 !== _) return null;\n\n        for (; 48 === g;) {\n          if (++n === e) return o.__zero();\n          g = i.charCodeAt(n);\n        }\n\n        var s = e - n;\n        var l = o.__kMaxBitsPerChar[_],\n            r = o.__kBitsPerCharTableMultiplier - 1;\n        if (s > 1073741824 / l) return null;\n        var a = l * s + r >>> o.__kBitsPerCharTableShift,\n            u = new o(0 | (a + 29) / 30, !1),\n            h = 10 > _ ? _ : 10,\n            b = 10 < _ ? _ - 10 : 0;\n\n        if (0 == (_ & _ - 1)) {\n          l >>= o.__kBitsPerCharTableShift;\n          var _11 = [],\n              _t5 = [];\n\n          var _s3 = !1;\n\n          do {\n            var _o14 = 0,\n                _r = 0;\n\n            for (;;) {\n              var _12 = void 0;\n\n              if (g - 48 >>> 0 < h) _12 = g - 48;else if ((32 | g) - 97 >>> 0 < b) _12 = (32 | g) - 87;else {\n                _s3 = !0;\n                break;\n              }\n\n              if (_r += l, _o14 = _o14 << l | _12, ++n === e) {\n                _s3 = !0;\n                break;\n              }\n\n              if (g = i.charCodeAt(n), 30 < _r + l) break;\n            }\n\n            _11.push(_o14), _t5.push(_r);\n          } while (!_s3);\n\n          o.__fillFromParts(u, _11, _t5);\n        } else {\n          u.__initializeDigits();\n\n          var _t6 = !1,\n              _s4 = 0;\n\n          do {\n            var _a = 0,\n                D = 1;\n\n            for (;;) {\n              var _o15 = void 0;\n\n              if (g - 48 >>> 0 < h) _o15 = g - 48;else if ((32 | g) - 97 >>> 0 < b) _o15 = (32 | g) - 87;else {\n                _t6 = !0;\n                break;\n              }\n\n              var _l2 = D * _;\n\n              if (1073741823 < _l2) break;\n\n              if (D = _l2, _a = _a * _ + _o15, _s4++, ++n === e) {\n                _t6 = !0;\n                break;\n              }\n\n              g = i.charCodeAt(n);\n            }\n\n            r = 30 * o.__kBitsPerCharTableMultiplier - 1;\n            var c = 0 | (l * _s4 + r >>> o.__kBitsPerCharTableShift) / 30;\n\n            u.__inplaceMultiplyAdd(D, _a, c);\n          } while (!_t6);\n        }\n\n        if (n !== e) {\n          if (!o.__isWhitespace(g)) return null;\n\n          for (n++; n < e; n++) {\n            if (g = i.charCodeAt(n), !o.__isWhitespace(g)) return null;\n          }\n        }\n\n        return u.sign = -1 == t, u.__trim();\n      }\n    }, {\n      key: \"__fillFromParts\",\n      value: function __fillFromParts(_, t, e) {\n        var n = 0,\n            g = 0,\n            _o3 = 0;\n\n        for (var s = t.length - 1; 0 <= s; s--) {\n          var _i11 = t[s],\n              l = e[s];\n          g |= _i11 << _o3, _o3 += l, 30 === _o3 ? (_.__setDigit(n++, g), _o3 = 0, g = 0) : 30 < _o3 && (_.__setDigit(n++, 1073741823 & g), _o3 -= 30, g = _i11 >>> l - _o3);\n        }\n\n        if (0 !== g) {\n          if (n >= _.length) throw new Error(\"implementation bug\");\n\n          _.__setDigit(n++, g);\n        }\n\n        for (; n < _.length; n++) {\n          _.__setDigit(n, 0);\n        }\n      }\n    }, {\n      key: \"__toStringBasePowerOfTwo\",\n      value: function __toStringBasePowerOfTwo(_, i) {\n        var t = _.length;\n        var e = i - 1;\n        e = (85 & e >>> 1) + (85 & e), e = (51 & e >>> 2) + (51 & e), e = (15 & e >>> 4) + (15 & e);\n\n        var n = e,\n            g = i - 1,\n            s = _.__digit(t - 1),\n            l = o.__clz30(s);\n\n        var r = 0 | (30 * t - l + n - 1) / n;\n        if (_.sign && r++, 268435456 < r) throw new Error(\"string too long\");\n        var a = Array(r);\n        var u = r - 1,\n            d = 0,\n            h = 0;\n\n        for (var _e6 = 0; _e6 < t - 1; _e6++) {\n          var _i12 = _.__digit(_e6),\n              _t7 = (d | _i12 << h) & g;\n\n          a[u--] = o.__kConversionChars[_t7];\n\n          var _s5 = n - h;\n\n          for (d = _i12 >>> _s5, h = 30 - _s5; h >= n;) {\n            a[u--] = o.__kConversionChars[d & g], d >>>= n, h -= n;\n          }\n        }\n\n        var m = (d | s << h) & g;\n\n        for (a[u--] = o.__kConversionChars[m], d = s >>> n - h; 0 !== d;) {\n          a[u--] = o.__kConversionChars[d & g], d >>>= n;\n        }\n\n        if (_.sign && (a[u--] = \"-\"), -1 != u) throw new Error(\"implementation bug\");\n        return a.join(\"\");\n      }\n    }, {\n      key: \"__toStringGeneric\",\n      value: function __toStringGeneric(_, i, t) {\n        var e = _.length;\n        if (0 === e) return \"\";\n\n        if (1 === e) {\n          var _e7 = _.__unsignedDigit(0).toString(i);\n\n          return !1 === t && _.sign && (_e7 = \"-\" + _e7), _e7;\n        }\n\n        var n = 30 * e - o.__clz30(_.__digit(e - 1)),\n            g = o.__kMaxBitsPerChar[i],\n            s = g - 1;\n\n        var l = n * o.__kBitsPerCharTableMultiplier;\n        l += s - 1, l = 0 | l / s;\n        var r = l + 1 >> 1,\n            a = o.exponentiate(o.__oneDigit(i, !1), o.__oneDigit(r, !1));\n        var u, d;\n\n        var h = a.__unsignedDigit(0);\n\n        if (1 === a.length && 32767 >= h) {\n          u = new o(_.length, !1), u.__initializeDigits();\n          var _t8 = 0;\n\n          for (var _e8 = 2 * _.length - 1; 0 <= _e8; _e8--) {\n            var _i13 = _t8 << 15 | _.__halfDigit(_e8);\n\n            u.__setHalfDigit(_e8, 0 | _i13 / h), _t8 = 0 | _i13 % h;\n          }\n\n          d = _t8.toString(i);\n        } else {\n          var _t9 = o.__absoluteDivLarge(_, a, !0, !0);\n\n          u = _t9.quotient;\n\n          var _e9 = _t9.remainder.__trim();\n\n          d = o.__toStringGeneric(_e9, i, !0);\n        }\n\n        u.__trim();\n\n        var m = o.__toStringGeneric(u, i, !0);\n\n        for (; d.length < r;) {\n          d = \"0\" + d;\n        }\n\n        return !1 === t && _.sign && (m = \"-\" + m), m + d;\n      }\n    }, {\n      key: \"__unequalSign\",\n      value: function __unequalSign(i) {\n        return i ? -1 : 1;\n      }\n    }, {\n      key: \"__absoluteGreater\",\n      value: function __absoluteGreater(i) {\n        return i ? -1 : 1;\n      }\n    }, {\n      key: \"__absoluteLess\",\n      value: function __absoluteLess(i) {\n        return i ? 1 : -1;\n      }\n    }, {\n      key: \"__compareToBigInt\",\n      value: function __compareToBigInt(i, _) {\n        var t = i.sign;\n        if (t !== _.sign) return o.__unequalSign(t);\n\n        var e = o.__absoluteCompare(i, _);\n\n        return 0 < e ? o.__absoluteGreater(t) : 0 > e ? o.__absoluteLess(t) : 0;\n      }\n    }, {\n      key: \"__compareToNumber\",\n      value: function __compareToNumber(i, _) {\n        if (o.__isOneDigitInt(_)) {\n          var _e10 = i.sign,\n              n = 0 > _;\n          if (_e10 !== n) return o.__unequalSign(_e10);\n\n          if (0 === i.length) {\n            if (n) throw new Error(\"implementation bug\");\n            return 0 === _ ? 0 : -1;\n          }\n\n          if (1 < i.length) return o.__absoluteGreater(_e10);\n\n          var _g7 = t(_),\n              s = i.__unsignedDigit(0);\n\n          return s > _g7 ? o.__absoluteGreater(_e10) : s < _g7 ? o.__absoluteLess(_e10) : 0;\n        }\n\n        return o.__compareToDouble(i, _);\n      }\n    }, {\n      key: \"__compareToDouble\",\n      value: function __compareToDouble(i, _) {\n        if (_ !== _) return _;\n        if (_ === 1 / 0) return -1;\n        if (_ === -Infinity) return 1;\n        var t = i.sign;\n        if (t !== 0 > _) return o.__unequalSign(t);\n        if (0 === _) throw new Error(\"implementation bug: should be handled elsewhere\");\n        if (0 === i.length) return -1;\n        o.__kBitConversionDouble[0] = _;\n        var e = 2047 & o.__kBitConversionInts[1] >>> 20;\n        if (2047 == e) throw new Error(\"implementation bug: handled elsewhere\");\n        var n = e - 1023;\n        if (0 > n) return o.__absoluteGreater(t);\n        var g = i.length;\n\n        var s = i.__digit(g - 1);\n\n        var l = o.__clz30(s),\n            r = 30 * g - l,\n            a = n + 1;\n\n        if (r < a) return o.__absoluteLess(t);\n        if (r > a) return o.__absoluteGreater(t);\n        var u = 1048576 | 1048575 & o.__kBitConversionInts[1],\n            d = o.__kBitConversionInts[0];\n        var h = 20,\n            m = 29 - l;\n        if (m !== (0 | (r - 1) % 30)) throw new Error(\"implementation bug\");\n        var b,\n            D = 0;\n\n        if (20 > m) {\n          var _i14 = h - m;\n\n          D = _i14 + 32, b = u >>> _i14, u = u << 32 - _i14 | d >>> _i14, d <<= 32 - _i14;\n        } else if (20 === m) D = 32, b = u, u = d, d = 0;else {\n          var _i15 = m - h;\n\n          D = 32 - _i15, b = u << _i15 | d >>> 32 - _i15, u = d << _i15, d = 0;\n        }\n\n        if (s >>>= 0, b >>>= 0, s > b) return o.__absoluteGreater(t);\n        if (s < b) return o.__absoluteLess(t);\n\n        for (var _e11 = g - 2; 0 <= _e11; _e11--) {\n          0 < D ? (D -= 30, b = u >>> 2, u = u << 30 | d >>> 2, d <<= 30) : b = 0;\n\n          var _13 = i.__unsignedDigit(_e11);\n\n          if (_13 > b) return o.__absoluteGreater(t);\n          if (_13 < b) return o.__absoluteLess(t);\n        }\n\n        if (0 !== u || 0 !== d) {\n          if (0 === D) throw new Error(\"implementation bug\");\n          return o.__absoluteLess(t);\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"__equalToNumber\",\n      value: function __equalToNumber(i, _) {\n        return o.__isOneDigitInt(_) ? 0 === _ ? 0 === i.length : 1 === i.length && i.sign === 0 > _ && i.__unsignedDigit(0) === t(_) : 0 === o.__compareToDouble(i, _);\n      }\n    }, {\n      key: \"__comparisonResultToBool\",\n      value: function __comparisonResultToBool(i, _) {\n        return 0 === _ ? 0 > i : 1 === _ ? 0 >= i : 2 === _ ? 0 < i : 3 === _ ? 0 <= i : void 0;\n      }\n    }, {\n      key: \"__compare\",\n      value: function __compare(i, _, t) {\n        if (i = o.__toPrimitive(i), _ = o.__toPrimitive(_), \"string\" == typeof i && \"string\" == typeof _) switch (t) {\n          case 0:\n            return i < _;\n\n          case 1:\n            return i <= _;\n\n          case 2:\n            return i > _;\n\n          case 3:\n            return i >= _;\n        }\n        if (o.__isBigInt(i) && \"string\" == typeof _) return _ = o.__fromString(_), null !== _ && o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n        if (\"string\" == typeof i && o.__isBigInt(_)) return i = o.__fromString(i), null !== i && o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n\n        if (i = o.__toNumeric(i), _ = o.__toNumeric(_), o.__isBigInt(i)) {\n          if (o.__isBigInt(_)) return o.__comparisonResultToBool(o.__compareToBigInt(i, _), t);\n          if (\"number\" != typeof _) throw new Error(\"implementation bug\");\n          return o.__comparisonResultToBool(o.__compareToNumber(i, _), t);\n        }\n\n        if (\"number\" != typeof i) throw new Error(\"implementation bug\");\n        if (o.__isBigInt(_)) return o.__comparisonResultToBool(o.__compareToNumber(_, i), 2 ^ t);\n        if (\"number\" != typeof _) throw new Error(\"implementation bug\");\n        return 0 === t ? i < _ : 1 === t ? i <= _ : 2 === t ? i > _ : 3 === t ? i >= _ : void 0;\n      }\n    }, {\n      key: \"__absoluteAdd\",\n      value: function __absoluteAdd(_, t, e) {\n        if (_.length < t.length) return o.__absoluteAdd(t, _, e);\n        if (0 === _.length) return _;\n        if (0 === t.length) return _.sign === e ? _ : o.unaryMinus(_);\n        var n = _.length;\n        (0 === _.__clzmsd() || t.length === _.length && 0 === t.__clzmsd()) && n++;\n        var g = new o(n, e);\n        var s = 0,\n            l = 0;\n\n        for (; l < t.length; l++) {\n          var _i16 = _.__digit(l) + t.__digit(l) + s;\n\n          s = _i16 >>> 30, g.__setDigit(l, 1073741823 & _i16);\n        }\n\n        for (; l < _.length; l++) {\n          var _i17 = _.__digit(l) + s;\n\n          s = _i17 >>> 30, g.__setDigit(l, 1073741823 & _i17);\n        }\n\n        return l < g.length && g.__setDigit(l, s), g.__trim();\n      }\n    }, {\n      key: \"__absoluteSub\",\n      value: function __absoluteSub(_, t, e) {\n        if (0 === _.length) return _;\n        if (0 === t.length) return _.sign === e ? _ : o.unaryMinus(_);\n        var n = new o(_.length, e);\n        var g = 0,\n            s = 0;\n\n        for (; s < t.length; s++) {\n          var _i18 = _.__digit(s) - t.__digit(s) - g;\n\n          g = 1 & _i18 >>> 30, n.__setDigit(s, 1073741823 & _i18);\n        }\n\n        for (; s < _.length; s++) {\n          var _i19 = _.__digit(s) - g;\n\n          g = 1 & _i19 >>> 30, n.__setDigit(s, 1073741823 & _i19);\n        }\n\n        return n.__trim();\n      }\n    }, {\n      key: \"__absoluteAddOne\",\n      value: function __absoluteAddOne(_, i) {\n        var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var e = _.length;\n        null === t ? t = new o(e, i) : t.sign = i;\n        var n = 1;\n\n        for (var _g8 = 0; _g8 < e; _g8++) {\n          var _i20 = _.__digit(_g8) + n;\n\n          n = _i20 >>> 30, t.__setDigit(_g8, 1073741823 & _i20);\n        }\n\n        return 0 != n && t.__setDigitGrow(e, 1), t;\n      }\n    }, {\n      key: \"__absoluteSubOne\",\n      value: function __absoluteSubOne(_, t) {\n        var e = _.length;\n        t = t || e;\n        var n = new o(t, !1);\n        var g = 1;\n\n        for (var _o16 = 0; _o16 < e; _o16++) {\n          var _i21 = _.__digit(_o16) - g;\n\n          g = 1 & _i21 >>> 30, n.__setDigit(_o16, 1073741823 & _i21);\n        }\n\n        if (0 != g) throw new Error(\"implementation bug\");\n\n        for (var _g9 = e; _g9 < t; _g9++) {\n          n.__setDigit(_g9, 0);\n        }\n\n        return n;\n      }\n    }, {\n      key: \"__absoluteAnd\",\n      value: function __absoluteAnd(_, t) {\n        var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var n = _.length,\n            g = t.length,\n            s = g;\n\n        if (n < g) {\n          s = n;\n          var _i22 = _,\n              _e12 = n;\n          _ = t, n = g, t = _i22, g = _e12;\n        }\n\n        var l = s;\n        null === e ? e = new o(l, !1) : l = e.length;\n        var r = 0;\n\n        for (; r < s; r++) {\n          e.__setDigit(r, _.__digit(r) & t.__digit(r));\n        }\n\n        for (; r < l; r++) {\n          e.__setDigit(r, 0);\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__absoluteAndNot\",\n      value: function __absoluteAndNot(_, t) {\n        var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var n = _.length,\n            g = t.length;\n        var s = g;\n        n < g && (s = n);\n        var l = n;\n        null === e ? e = new o(l, !1) : l = e.length;\n        var r = 0;\n\n        for (; r < s; r++) {\n          e.__setDigit(r, _.__digit(r) & ~t.__digit(r));\n        }\n\n        for (; r < n; r++) {\n          e.__setDigit(r, _.__digit(r));\n        }\n\n        for (; r < l; r++) {\n          e.__setDigit(r, 0);\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__absoluteOr\",\n      value: function __absoluteOr(_, t) {\n        var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var n = _.length,\n            g = t.length,\n            s = g;\n\n        if (n < g) {\n          s = n;\n          var _i23 = _,\n              _e13 = n;\n          _ = t, n = g, t = _i23, g = _e13;\n        }\n\n        var l = n;\n        null === e ? e = new o(l, !1) : l = e.length;\n        var r = 0;\n\n        for (; r < s; r++) {\n          e.__setDigit(r, _.__digit(r) | t.__digit(r));\n        }\n\n        for (; r < n; r++) {\n          e.__setDigit(r, _.__digit(r));\n        }\n\n        for (; r < l; r++) {\n          e.__setDigit(r, 0);\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__absoluteXor\",\n      value: function __absoluteXor(_, t) {\n        var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var n = _.length,\n            g = t.length,\n            s = g;\n\n        if (n < g) {\n          s = n;\n          var _i24 = _,\n              _e14 = n;\n          _ = t, n = g, t = _i24, g = _e14;\n        }\n\n        var l = n;\n        null === e ? e = new o(l, !1) : l = e.length;\n        var r = 0;\n\n        for (; r < s; r++) {\n          e.__setDigit(r, _.__digit(r) ^ t.__digit(r));\n        }\n\n        for (; r < n; r++) {\n          e.__setDigit(r, _.__digit(r));\n        }\n\n        for (; r < l; r++) {\n          e.__setDigit(r, 0);\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__absoluteCompare\",\n      value: function __absoluteCompare(_, t) {\n        var e = _.length - t.length;\n        if (0 != e) return e;\n        var n = _.length - 1;\n\n        for (; 0 <= n && _.__digit(n) === t.__digit(n);) {\n          n--;\n        }\n\n        return 0 > n ? 0 : _.__unsignedDigit(n) > t.__unsignedDigit(n) ? 1 : -1;\n      }\n    }, {\n      key: \"__multiplyAccumulate\",\n      value: function __multiplyAccumulate(_, t, e, n) {\n        if (0 === t) return;\n        var g = 32767 & t,\n            s = t >>> 15;\n        var l = 0,\n            r = 0;\n\n        for (var a, u = 0; u < _.length; u++, n++) {\n          a = e.__digit(n);\n\n          var _i25 = _.__digit(u),\n              _t10 = 32767 & _i25,\n              d = _i25 >>> 15,\n              h = o.__imul(_t10, g),\n              m = o.__imul(_t10, s),\n              b = o.__imul(d, g),\n              D = o.__imul(d, s);\n\n          a += r + h + l, l = a >>> 30, a &= 1073741823, a += ((32767 & m) << 15) + ((32767 & b) << 15), l += a >>> 30, r = D + (m >>> 15) + (b >>> 15), e.__setDigit(n, 1073741823 & a);\n        }\n\n        for (; 0 != l || 0 !== r; n++) {\n          var _i26 = e.__digit(n);\n\n          _i26 += l + r, r = 0, l = _i26 >>> 30, e.__setDigit(n, 1073741823 & _i26);\n        }\n      }\n    }, {\n      key: \"__internalMultiplyAdd\",\n      value: function __internalMultiplyAdd(_, t, e, g, s) {\n        var l = e,\n            a = 0;\n\n        for (var n = 0; n < g; n++) {\n          var _i27 = _.__digit(n),\n              _e15 = o.__imul(32767 & _i27, t),\n              _g10 = o.__imul(_i27 >>> 15, t),\n              u = _e15 + ((32767 & _g10) << 15) + a + l;\n\n          l = u >>> 30, a = _g10 >>> 15, s.__setDigit(n, 1073741823 & u);\n        }\n\n        if (s.length > g) for (s.__setDigit(g++, l + a); g < s.length;) {\n          s.__setDigit(g++, 0);\n        } else if (0 !== l + a) throw new Error(\"implementation bug\");\n      }\n    }, {\n      key: \"__absoluteDivSmall\",\n      value: function __absoluteDivSmall(_, t) {\n        var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        null === e && (e = new o(_.length, !1));\n        var n = 0;\n\n        for (var _g11, _o17 = 2 * _.length - 1; 0 <= _o17; _o17 -= 2) {\n          _g11 = (n << 15 | _.__halfDigit(_o17)) >>> 0;\n\n          var _i28 = 0 | _g11 / t;\n\n          n = 0 | _g11 % t, _g11 = (n << 15 | _.__halfDigit(_o17 - 1)) >>> 0;\n          var s = 0 | _g11 / t;\n          n = 0 | _g11 % t, e.__setDigit(_o17 >>> 1, _i28 << 15 | s);\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__absoluteModSmall\",\n      value: function __absoluteModSmall(_, t) {\n        var e = 0;\n\n        for (var n = 2 * _.length - 1; 0 <= n; n--) {\n          var _i29 = (e << 15 | _.__halfDigit(n)) >>> 0;\n\n          e = 0 | _i29 % t;\n        }\n\n        return e;\n      }\n    }, {\n      key: \"__absoluteDivLarge\",\n      value: function __absoluteDivLarge(i, _, t, e) {\n        var g = _.__halfDigitLength(),\n            n = _.length,\n            s = i.__halfDigitLength() - g;\n\n        var l = null;\n        t && (l = new o(s + 2 >>> 1, !1), l.__initializeDigits());\n        var r = new o(g + 2 >>> 1, !1);\n\n        r.__initializeDigits();\n\n        var a = o.__clz15(_.__halfDigit(g - 1));\n\n        0 < a && (_ = o.__specialLeftShift(_, a, 0));\n\n        var d = o.__specialLeftShift(i, a, 1),\n            u = _.__halfDigit(g - 1);\n\n        var h = 0;\n\n        for (var _a2, m = s; 0 <= m; m--) {\n          _a2 = 32767;\n\n          var _i30 = d.__halfDigit(m + g);\n\n          if (_i30 !== u) {\n            var _t11 = (_i30 << 15 | d.__halfDigit(m + g - 1)) >>> 0;\n\n            _a2 = 0 | _t11 / u;\n\n            var _e17 = 0 | _t11 % u;\n\n            var _n4 = _.__halfDigit(g - 2),\n                _s6 = d.__halfDigit(m + g - 2);\n\n            for (; o.__imul(_a2, _n4) >>> 0 > (_e17 << 16 | _s6) >>> 0 && (_a2--, _e17 += u, !(32767 < _e17));) {\n              ;\n            }\n          }\n\n          o.__internalMultiplyAdd(_, _a2, 0, n, r);\n\n          var _e16 = d.__inplaceSub(r, m, g + 1);\n\n          0 !== _e16 && (_e16 = d.__inplaceAdd(_, m, g), d.__setHalfDigit(m + g, 32767 & d.__halfDigit(m + g) + _e16), _a2--), t && (1 & m ? h = _a2 << 15 : l.__setDigit(m >>> 1, h | _a2));\n        }\n\n        if (e) return d.__inplaceRightShift(a), t ? {\n          quotient: l,\n          remainder: d\n        } : d;\n        if (t) return l;\n        throw new Error(\"unreachable\");\n      }\n    }, {\n      key: \"__clz15\",\n      value: function __clz15(i) {\n        return o.__clz30(i) - 15;\n      }\n    }, {\n      key: \"__specialLeftShift\",\n      value: function __specialLeftShift(_, t, e) {\n        var g = _.length,\n            n = new o(g + e, !1);\n\n        if (0 === t) {\n          for (var _t12 = 0; _t12 < g; _t12++) {\n            n.__setDigit(_t12, _.__digit(_t12));\n          }\n\n          return 0 < e && n.__setDigit(g, 0), n;\n        }\n\n        var s = 0;\n\n        for (var _o18 = 0; _o18 < g; _o18++) {\n          var _i31 = _.__digit(_o18);\n\n          n.__setDigit(_o18, 1073741823 & _i31 << t | s), s = _i31 >>> 30 - t;\n        }\n\n        return 0 < e && n.__setDigit(g, s), n;\n      }\n    }, {\n      key: \"__leftShiftByAbsolute\",\n      value: function __leftShiftByAbsolute(_, i) {\n        var t = o.__toShiftAmount(i);\n\n        if (0 > t) throw new RangeError(\"BigInt too big\");\n        var e = 0 | t / 30,\n            n = t % 30,\n            g = _.length,\n            s = 0 !== n && 0 != _.__digit(g - 1) >>> 30 - n,\n            l = g + e + (s ? 1 : 0),\n            r = new o(l, _.sign);\n\n        if (0 === n) {\n          var _t13 = 0;\n\n          for (; _t13 < e; _t13++) {\n            r.__setDigit(_t13, 0);\n          }\n\n          for (; _t13 < l; _t13++) {\n            r.__setDigit(_t13, _.__digit(_t13 - e));\n          }\n        } else {\n          var _t14 = 0;\n\n          for (var _14 = 0; _14 < e; _14++) {\n            r.__setDigit(_14, 0);\n          }\n\n          for (var _o19 = 0; _o19 < g; _o19++) {\n            var _i32 = _.__digit(_o19);\n\n            r.__setDigit(_o19 + e, 1073741823 & _i32 << n | _t14), _t14 = _i32 >>> 30 - n;\n          }\n\n          if (s) r.__setDigit(g + e, _t14);else if (0 !== _t14) throw new Error(\"implementation bug\");\n        }\n\n        return r.__trim();\n      }\n    }, {\n      key: \"__rightShiftByAbsolute\",\n      value: function __rightShiftByAbsolute(_, i) {\n        var t = _.length,\n            e = _.sign,\n            n = o.__toShiftAmount(i);\n\n        if (0 > n) return o.__rightShiftByMaximum(e);\n        var g = 0 | n / 30,\n            s = n % 30;\n        var l = t - g;\n        if (0 >= l) return o.__rightShiftByMaximum(e);\n        var r = !1;\n\n        if (e) {\n          if (0 != (_.__digit(g) & (1 << s) - 1)) r = !0;else for (var _t15 = 0; _t15 < g; _t15++) {\n            if (0 !== _.__digit(_t15)) {\n              r = !0;\n              break;\n            }\n          }\n        }\n\n        if (r && 0 === s) {\n          var _i33 = _.__digit(t - 1);\n\n          0 == ~_i33 && l++;\n        }\n\n        var a = new o(l, e);\n\n        if (0 === s) {\n          a.__setDigit(l - 1, 0);\n\n          for (var _e18 = g; _e18 < t; _e18++) {\n            a.__setDigit(_e18 - g, _.__digit(_e18));\n          }\n        } else {\n          var _e19 = _.__digit(g) >>> s;\n\n          var _n5 = t - g - 1;\n\n          for (var _t16 = 0; _t16 < _n5; _t16++) {\n            var _i34 = _.__digit(_t16 + g + 1);\n\n            a.__setDigit(_t16, 1073741823 & _i34 << 30 - s | _e19), _e19 = _i34 >>> s;\n          }\n\n          a.__setDigit(_n5, _e19);\n        }\n\n        return r && (a = o.__absoluteAddOne(a, !0, a)), a.__trim();\n      }\n    }, {\n      key: \"__rightShiftByMaximum\",\n      value: function __rightShiftByMaximum(i) {\n        return i ? o.__oneDigit(1, !0) : o.__zero();\n      }\n    }, {\n      key: \"__toShiftAmount\",\n      value: function __toShiftAmount(i) {\n        if (1 < i.length) return -1;\n\n        var _ = i.__unsignedDigit(0);\n\n        return _ > o.__kMaxLengthBits ? -1 : _;\n      }\n    }, {\n      key: \"__toPrimitive\",\n      value: function __toPrimitive(i) {\n        var _ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"default\";\n\n        if (\"object\" != typeof i) return i;\n        if (i.constructor === o) return i;\n\n        if (\"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol.toPrimitive) {\n          var _t17 = i[Symbol.toPrimitive];\n\n          if (_t17) {\n            var _i35 = _t17(_);\n\n            if (\"object\" != typeof _i35) return _i35;\n            throw new TypeError(\"Cannot convert object to primitive value\");\n          }\n        }\n\n        var t = i.valueOf;\n\n        if (t) {\n          var _15 = t.call(i);\n\n          if (\"object\" != typeof _15) return _15;\n        }\n\n        var e = i.toString;\n\n        if (e) {\n          var _16 = e.call(i);\n\n          if (\"object\" != typeof _16) return _16;\n        }\n\n        throw new TypeError(\"Cannot convert object to primitive value\");\n      }\n    }, {\n      key: \"__toNumeric\",\n      value: function __toNumeric(i) {\n        return o.__isBigInt(i) ? i : +i;\n      }\n    }, {\n      key: \"__isBigInt\",\n      value: function __isBigInt(i) {\n        return \"object\" == typeof i && null !== i && i.constructor === o;\n      }\n    }, {\n      key: \"__truncateToNBits\",\n      value: function __truncateToNBits(i, _) {\n        var t = 0 | (i + 29) / 30,\n            e = new o(t, _.sign),\n            n = t - 1;\n\n        for (var _t18 = 0; _t18 < n; _t18++) {\n          e.__setDigit(_t18, _.__digit(_t18));\n        }\n\n        var g = _.__digit(n);\n\n        if (0 != i % 30) {\n          var _17 = 32 - i % 30;\n\n          g = g << _17 >>> _17;\n        }\n\n        return e.__setDigit(n, g), e.__trim();\n      }\n    }, {\n      key: \"__truncateAndSubFromPowerOfTwo\",\n      value: function __truncateAndSubFromPowerOfTwo(_, t, e) {\n        var n = Math.min;\n        var g = 0 | (_ + 29) / 30,\n            s = new o(g, e);\n        var l = 0;\n        var r = g - 1;\n        var a = 0;\n\n        for (var _i36 = n(r, t.length); l < _i36; l++) {\n          var _i37 = 0 - t.__digit(l) - a;\n\n          a = 1 & _i37 >>> 30, s.__setDigit(l, 1073741823 & _i37);\n        }\n\n        for (; l < r; l++) {\n          s.__setDigit(l, 0 | 1073741823 & -a);\n        }\n\n        var u = r < t.length ? t.__digit(r) : 0;\n        var d = _ % 30;\n        var h;\n        if (0 == d) h = 0 - u - a, h &= 1073741823;else {\n          var _i38 = 32 - d;\n\n          u = u << _i38 >>> _i38;\n\n          var _18 = 1 << 32 - _i38;\n\n          h = _18 - u - a, h &= _18 - 1;\n        }\n        return s.__setDigit(r, h), s.__trim();\n      }\n    }, {\n      key: \"__digitPow\",\n      value: function __digitPow(i, _) {\n        var t = 1;\n\n        for (; 0 < _;) {\n          1 & _ && (t *= i), _ >>>= 1, i *= i;\n        }\n\n        return t;\n      }\n    }, {\n      key: \"__isOneDigitInt\",\n      value: function __isOneDigitInt(i) {\n        return (1073741823 & i) === i;\n      }\n    }]);\n\n    return o;\n  }( /*#__PURE__*/_wrapNativeSuper(Array));\n\n  return o.__kMaxLength = 33554432, o.__kMaxLengthBits = o.__kMaxLength << 5, o.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], o.__kBitsPerCharTableShift = 5, o.__kBitsPerCharTableMultiplier = 1 << o.__kBitsPerCharTableShift, o.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], o.__kBitConversionBuffer = new ArrayBuffer(8), o.__kBitConversionDouble = new Float64Array(o.__kBitConversionBuffer), o.__kBitConversionInts = new Int32Array(o.__kBitConversionBuffer), o.__clz30 = _ ? function (i) {\n    return _(i) - 2;\n  } : function (i) {\n    var _ = Math.LN2,\n        t = Math.log;\n    return 0 === i ? 30 : 0 | 29 - (0 | t(i >>> 0) / _);\n  }, o.__imul = i || function (i, _) {\n    return 0 | i * _;\n  }, o;\n});","map":null,"metadata":{},"sourceType":"script"}