{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\n\nexport default function useDebouncedChangeHandler(value, onChange) {\n  _s();\n\n  var debouncedMs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\n  var _useState = useState(function () {\n    return value;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inner = _useState2[0],\n      setInner = _useState2[1];\n\n  var timer = useRef();\n  var onChangeInner = useCallback(function (newValue) {\n    setInner(newValue);\n\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    timer.current = setTimeout(function () {\n      onChange(newValue);\n      timer.current = undefined;\n    }, debouncedMs);\n  }, [debouncedMs, onChange]);\n  useEffect(function () {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = undefined;\n    }\n\n    setInner(value);\n  }, [value]);\n  return [inner, onChangeInner];\n}\n\n_s(useDebouncedChangeHandler, \"hMxW3E4LWgKh3jKpAjrpeYPhb3U=\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useDebouncedChangeHandler","value","onChange","debouncedMs","inner","setInner","timer","onChangeInner","newValue","current","clearTimeout","setTimeout","undefined"],"sources":["/Applications/XAMPP/voxel-interface/src/utils/useDebouncedChangeHandler.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100,\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange],\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,yBAAT,CACbC,KADa,EAEbC,QAFa,EAIY;EAAA;;EAAA,IADzBC,WACyB,uEADX,GACW;;EACzB,gBAA0BJ,QAAQ,CAAI;IAAA,OAAME,KAAN;EAAA,CAAJ,CAAlC;EAAA;EAAA,IAAOG,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,KAAK,GAAGR,MAAM,EAApB;EAEA,IAAMS,aAAa,GAAGX,WAAW,CAC/B,UAACY,QAAD,EAAiB;IACfH,QAAQ,CAACG,QAAD,CAAR;;IACA,IAAIF,KAAK,CAACG,OAAV,EAAmB;MACjBC,YAAY,CAACJ,KAAK,CAACG,OAAP,CAAZ;IACD;;IACDH,KAAK,CAACG,OAAN,GAAgBE,UAAU,CAAC,YAAM;MAC/BT,QAAQ,CAACM,QAAD,CAAR;MACAF,KAAK,CAACG,OAAN,GAAgBG,SAAhB;IACD,CAHyB,EAGvBT,WAHuB,CAA1B;EAID,CAV8B,EAW/B,CAACA,WAAD,EAAcD,QAAd,CAX+B,CAAjC;EAcAL,SAAS,CAAC,YAAM;IACd,IAAIS,KAAK,CAACG,OAAV,EAAmB;MACjBC,YAAY,CAACJ,KAAK,CAACG,OAAP,CAAZ;MACAH,KAAK,CAACG,OAAN,GAAgBG,SAAhB;IACD;;IACDP,QAAQ,CAACJ,KAAD,CAAR;EACD,CANQ,EAMN,CAACA,KAAD,CANM,CAAT;EAQA,OAAO,CAACG,KAAD,EAAQG,aAAR,CAAP;AACD;;GA/BuBP,yB"},"metadata":{},"sourceType":"module"}