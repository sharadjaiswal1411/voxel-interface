{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { namehash } from 'ethers/lib/utils';\nimport { useMemo } from 'react';\nimport { useSingleCallResult } from '../state/multicall/hooks';\nimport { isAddress } from '../utils';\nimport isZero from '../utils/isZero';\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\nimport useDebounce from './useDebounce';\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\n\nexport default function useENSName(address) {\n  _s();\n\n  var _resolverAddress$resu, _name$result$, _name$result;\n\n  var debouncedAddress = useDebounce(address, 200);\n  var ensNodeArgument = useMemo(function () {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined];\n\n    try {\n      return debouncedAddress ? [namehash(\"\".concat(debouncedAddress.toLowerCase().substr(2), \".addr.reverse\"))] : [undefined];\n    } catch (error) {\n      return [undefined];\n    }\n  }, [debouncedAddress]);\n  var registrarContract = useENSRegistrarContract(false);\n  var resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\n  var resolverAddressResult = (_resolverAddress$resu = resolverAddress.result) === null || _resolverAddress$resu === void 0 ? void 0 : _resolverAddress$resu[0];\n  var resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\n  var name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\n  var changed = debouncedAddress !== address;\n  return {\n    ENSName: changed ? null : (_name$result$ = (_name$result = name.result) === null || _name$result === void 0 ? void 0 : _name$result[0]) !== null && _name$result$ !== void 0 ? _name$result$ : null,\n    loading: changed || resolverAddress.loading || name.loading\n  };\n}\n\n_s(useENSName, \"8g3MyTb9JnGx6yiMJXxKZlnslKc=\", false, function () {\n  return [useDebounce, useENSRegistrarContract, useSingleCallResult, useENSResolverContract, useSingleCallResult];\n});","map":{"version":3,"names":["namehash","useMemo","useSingleCallResult","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSName","address","debouncedAddress","ensNodeArgument","undefined","toLowerCase","substr","error","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","name","changed","ENSName","loading"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useENSName.ts"],"sourcesContent":["import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\n\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,uBAAT,EAAkCC,sBAAlC,QAAgE,eAAhE;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,CAAoBC,OAApB,EAAoF;EAAA;;EAAA;;EACjG,IAAMC,gBAAgB,GAAGH,WAAW,CAACE,OAAD,EAAU,GAAV,CAApC;EACA,IAAME,eAAe,GAAGV,OAAO,CAAC,YAAM;IACpC,IAAI,CAACS,gBAAD,IAAqB,CAACP,SAAS,CAACO,gBAAD,CAAnC,EAAuD,OAAO,CAACE,SAAD,CAAP;;IACvD,IAAI;MACF,OAAOF,gBAAgB,GAAG,CAACV,QAAQ,WAAIU,gBAAgB,CAACG,WAAjB,GAA+BC,MAA/B,CAAsC,CAAtC,CAAJ,mBAAT,CAAH,GAA4E,CAACF,SAAD,CAAnG;IACD,CAFD,CAEE,OAAOG,KAAP,EAAc;MACd,OAAO,CAACH,SAAD,CAAP;IACD;EACF,CAP8B,EAO5B,CAACF,gBAAD,CAP4B,CAA/B;EAQA,IAAMM,iBAAiB,GAAGX,uBAAuB,CAAC,KAAD,CAAjD;EACA,IAAMY,eAAe,GAAGf,mBAAmB,CAACc,iBAAD,EAAoB,UAApB,EAAgCL,eAAhC,CAA3C;EACA,IAAMO,qBAAqB,4BAAGD,eAAe,CAACE,MAAnB,0DAAG,sBAAyB,CAAzB,CAA9B;EACA,IAAMC,gBAAgB,GAAGd,sBAAsB,CAC7CY,qBAAqB,IAAI,CAACd,MAAM,CAACc,qBAAD,CAAhC,GAA0DA,qBAA1D,GAAkFN,SADrC,EAE7C,KAF6C,CAA/C;EAIA,IAAMS,IAAI,GAAGnB,mBAAmB,CAACkB,gBAAD,EAAmB,MAAnB,EAA2BT,eAA3B,CAAhC;EAEA,IAAMW,OAAO,GAAGZ,gBAAgB,KAAKD,OAArC;EACA,OAAO;IACLc,OAAO,EAAED,OAAO,GAAG,IAAH,oCAAUD,IAAI,CAACF,MAAf,iDAAU,aAAc,CAAd,CAAV,yDAA8B,IADzC;IAELK,OAAO,EAAEF,OAAO,IAAIL,eAAe,CAACO,OAA3B,IAAsCH,IAAI,CAACG;EAF/C,CAAP;AAID;;GAxBuBhB,U;UACGD,W,EASCF,uB,EACFH,mB,EAECI,sB,EAIZJ,mB"},"metadata":{},"sourceType":"module"}