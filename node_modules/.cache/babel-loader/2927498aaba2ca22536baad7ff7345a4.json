{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { VersionUpgrade, getVersionUpgrade } from '@uniswap/token-lists';\nimport { deleteUnique, pushUnique } from 'utils';\nimport { DEFAULT_ACTIVE_LIST_URLS, DEFAULT_LIST_OF_LISTS, UNSUPPORTED_LIST_URLS } from '../../constants/lists';\nimport { updateVersion } from '../global/actions';\nimport { acceptListUpdate, addList, disableList, enableList, fetchTokenList, removeList } from './actions';\nvar NEW_LIST_STATE = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null\n};\nvar initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: _objectSpread({}, DEFAULT_LIST_OF_LISTS.concat(UNSUPPORTED_LIST_URLS).reduce(function (memo, listUrl) {\n    memo[listUrl] = NEW_LIST_STATE;\n    return memo;\n  }, {})),\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(fetchTokenList.pending, function (state, _ref) {\n    var _ref$payload = _ref.payload,\n        requestId = _ref$payload.requestId,\n        url = _ref$payload.url;\n    state.byUrl[url] = {\n      current: null,\n      pendingUpdate: null,\n      loadingRequestId: requestId,\n      error: null\n    };\n  }).addCase(fetchTokenList.fulfilled, function (state, _ref2) {\n    var _state$byUrl$url, _state$byUrl$url2;\n\n    var _ref2$payload = _ref2.payload,\n        requestId = _ref2$payload.requestId,\n        tokenList = _ref2$payload.tokenList,\n        url = _ref2$payload.url;\n    var current = (_state$byUrl$url = state.byUrl[url]) === null || _state$byUrl$url === void 0 ? void 0 : _state$byUrl$url.current;\n    var loadingRequestId = (_state$byUrl$url2 = state.byUrl[url]) === null || _state$byUrl$url2 === void 0 ? void 0 : _state$byUrl$url2.loadingRequestId; // no-op if update does nothing\n\n    if (current) {\n      var upgradeType = getVersionUpgrade(current.version, tokenList.version);\n      if (upgradeType === VersionUpgrade.NONE) return;\n\n      if (loadingRequestId === null || loadingRequestId === requestId) {\n        state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n          loadingRequestId: null,\n          error: null,\n          current: current,\n          pendingUpdate: tokenList\n        });\n      }\n    } else {\n      // activate if on default active\n      if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n        state.activeListUrls = pushUnique(state.activeListUrls, url);\n      }\n\n      state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n        loadingRequestId: null,\n        error: null,\n        current: tokenList,\n        pendingUpdate: null\n      });\n    }\n  }).addCase(fetchTokenList.rejected, function (state, _ref3) {\n    var _state$byUrl$url3;\n\n    var _ref3$payload = _ref3.payload,\n        url = _ref3$payload.url,\n        requestId = _ref3$payload.requestId,\n        errorMessage = _ref3$payload.errorMessage;\n\n    if (((_state$byUrl$url3 = state.byUrl[url]) === null || _state$byUrl$url3 === void 0 ? void 0 : _state$byUrl$url3.loadingRequestId) !== requestId) {\n      // no-op since it's not the latest request\n      return;\n    }\n\n    state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n      loadingRequestId: null,\n      error: errorMessage,\n      current: null,\n      pendingUpdate: null\n    });\n  }).addCase(addList, function (state, _ref4) {\n    var url = _ref4.payload;\n\n    if (!state.byUrl[url]) {\n      state.byUrl[url] = NEW_LIST_STATE;\n    }\n  }).addCase(removeList, function (state, _ref5) {\n    var url = _ref5.payload;\n\n    if (state.byUrl[url]) {\n      delete state.byUrl[url];\n    } // remove list from active urls if needed\n\n\n    state.activeListUrls = deleteUnique(state.activeListUrls, url);\n  }).addCase(enableList, function (state, _ref6) {\n    var url = _ref6.payload;\n\n    if (!state.byUrl[url]) {\n      state.byUrl[url] = NEW_LIST_STATE;\n    }\n\n    state.activeListUrls = pushUnique(state.activeListUrls, url);\n  }).addCase(disableList, function (state, _ref7) {\n    var url = _ref7.payload;\n    state.activeListUrls = deleteUnique(state.activeListUrls, url);\n  }).addCase(acceptListUpdate, function (state, _ref8) {\n    var _state$byUrl$url4;\n\n    var url = _ref8.payload;\n\n    if (!((_state$byUrl$url4 = state.byUrl[url]) !== null && _state$byUrl$url4 !== void 0 && _state$byUrl$url4.pendingUpdate)) {\n      throw new Error('accept list update called without pending update');\n    }\n\n    state.byUrl[url] = _objectSpread(_objectSpread({}, state.byUrl[url]), {}, {\n      pendingUpdate: null,\n      current: state.byUrl[url].pendingUpdate\n    });\n  }).addCase(updateVersion, function (state) {\n    // state loaded from localStorage, but new lists have never been initialized\n    if (!state.lastInitializedDefaultListOfLists) {\n      state.byUrl = initialState.byUrl;\n      state.activeListUrls = initialState.activeListUrls;\n    } else if (state.lastInitializedDefaultListOfLists) {\n      var lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce(function (s, l) {\n        return s.add(l);\n      }, new Set());\n      var newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce(function (s, l) {\n        return s.add(l);\n      }, new Set());\n      DEFAULT_LIST_OF_LISTS.forEach(function (listUrl) {\n        if (!lastInitializedSet.has(listUrl)) {\n          state.byUrl[listUrl] = NEW_LIST_STATE;\n        }\n      });\n      state.lastInitializedDefaultListOfLists.forEach(function (listUrl) {\n        if (!newListOfListsSet.has(listUrl)) {\n          delete state.byUrl[listUrl];\n        }\n      });\n    }\n\n    state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS; // if no active lists, activate defaults\n\n    if (!state.activeListUrls) {\n      state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS; // for each list on default list, initialize if needed\n\n      DEFAULT_ACTIVE_LIST_URLS.map(function (listUrl) {\n        if (!state.byUrl[listUrl]) {\n          state.byUrl[listUrl] = NEW_LIST_STATE;\n        }\n\n        return true;\n      });\n    }\n  });\n});","map":{"version":3,"names":["createReducer","VersionUpgrade","getVersionUpgrade","deleteUnique","pushUnique","DEFAULT_ACTIVE_LIST_URLS","DEFAULT_LIST_OF_LISTS","UNSUPPORTED_LIST_URLS","updateVersion","acceptListUpdate","addList","disableList","enableList","fetchTokenList","removeList","NEW_LIST_STATE","error","current","loadingRequestId","pendingUpdate","initialState","lastInitializedDefaultListOfLists","byUrl","concat","reduce","memo","listUrl","activeListUrls","builder","addCase","pending","state","payload","requestId","url","fulfilled","tokenList","upgradeType","version","NONE","includes","rejected","errorMessage","Error","lastInitializedSet","s","l","add","Set","newListOfListsSet","forEach","has","map"],"sources":["/Applications/XAMPP/voxel-interface/src/state/lists/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { VersionUpgrade, getVersionUpgrade } from '@uniswap/token-lists'\nimport { TokenList } from '@uniswap/token-lists/dist/types'\n\nimport { deleteUnique, pushUnique } from 'utils'\n\nimport { DEFAULT_ACTIVE_LIST_URLS, DEFAULT_LIST_OF_LISTS, UNSUPPORTED_LIST_URLS } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, disableList, enableList, fetchTokenList, removeList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[]\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current: current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls = pushUnique(state.activeListUrls, url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      state.activeListUrls = deleteUnique(state.activeListUrls, url)\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n      state.activeListUrls = pushUnique(state.activeListUrls, url)\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      state.activeListUrls = deleteUnique(state.activeListUrls, url)\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, state => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach(listUrl => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach(listUrl => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}