{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ChainId } from '@kyberswap/ks-sdk-core';\nimport { useWeb3React } from '@web3-react/core';\nimport { formatUnits, isAddress } from 'ethers/lib/utils';\nimport mixpanel from 'mixpanel-browser';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { usePrevious } from 'react-use'; //import { Trade } from '@kyberswap/ks-sdk-elastic'\n\nimport { GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS, GET_POOL_VALUES_AFTER_BURNS_SUCCESS, GET_POOL_VALUES_AFTER_MINTS_SUCCESS } from 'apollo/queries';\nimport { PROMM_GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS, PROMM_GET_POOL_VALUES_AFTER_BURNS_SUCCESS, PROMM_GET_POOL_VALUES_AFTER_MINTS_SUCCESS } from 'apollo/queries/promm';\nimport { ELASTIC_BASE_FEE_UNIT } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { useETHPrice } from 'state/application/hooks';\nimport { Field } from 'state/swap/actions';\nimport { useSwapState } from 'state/swap/hooks';\nimport { checkedSubgraph } from 'state/transactions/actions';\nimport { useUserSlippageTolerance } from 'state/user/hooks'; //import { Aggregator } from 'utils/aggregator'\n\nexport var MIXPANEL_TYPE;\n\n(function (MIXPANEL_TYPE) {\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"PAGE_VIEWED\"] = 0] = \"PAGE_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"WALLET_CONNECTED\"] = 1] = \"WALLET_CONNECTED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"SWAP_INITIATED\"] = 2] = \"SWAP_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"SWAP_COMPLETED\"] = 3] = \"SWAP_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ADVANCED_MODE_ON\"] = 4] = \"ADVANCED_MODE_ON\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ADD_RECIPIENT_CLICKED\"] = 5] = \"ADD_RECIPIENT_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"SLIPPAGE_CHANGED\"] = 6] = \"SLIPPAGE_CHANGED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"LIVE_CHART_ON_OFF\"] = 7] = \"LIVE_CHART_ON_OFF\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TRADING_ROUTE_ON_OFF\"] = 8] = \"TRADING_ROUTE_ON_OFF\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"LIVE_CHART_ON_MOBILE\"] = 9] = \"LIVE_CHART_ON_MOBILE\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"PRO_CHART_CLICKED\"] = 10] = \"PRO_CHART_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"BASIC_CHART_CLICKED\"] = 11] = \"BASIC_CHART_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TRADING_ROUTE_ON_MOBILE\"] = 12] = \"TRADING_ROUTE_ON_MOBILE\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TOKEN_INFO_CHECKED\"] = 13] = \"TOKEN_INFO_CHECKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TOKEN_SWAP_LINK_SHARED\"] = 14] = \"TOKEN_SWAP_LINK_SHARED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CHAIN_SWITCHED\"] = 15] = \"CHAIN_SWITCHED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CREATE_POOL_INITITATED\"] = 16] = \"CREATE_POOL_INITITATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CREATE_POOL_COMPLETED\"] = 17] = \"CREATE_POOL_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CREATE_POOL_LINK_SHARED\"] = 18] = \"CREATE_POOL_LINK_SHARED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ADD_LIQUIDITY_INITIATED\"] = 19] = \"ADD_LIQUIDITY_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ADD_LIQUIDITY_COMPLETED\"] = 20] = \"ADD_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"REMOVE_LIQUIDITY_COMPLETED\"] = 21] = \"REMOVE_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"REMOVE_LIQUIDITY_INITIATED\"] = 22] = \"REMOVE_LIQUIDITY_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"MIGRATE_LIQUIDITY_INITIATED\"] = 23] = \"MIGRATE_LIQUIDITY_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CLAIM_REWARDS_INITIATED\"] = 24] = \"CLAIM_REWARDS_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"IMPORT_POOL_INITIATED\"] = 25] = \"IMPORT_POOL_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"MYPOOLS_STAKED_VIEWED\"] = 26] = \"MYPOOLS_STAKED_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"MYPOOLS_POOLS_VIEWED\"] = 27] = \"MYPOOLS_POOLS_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FARMS_ACTIVE_VIEWED\"] = 28] = \"FARMS_ACTIVE_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FARMS_ENDING_VIEWED\"] = 29] = \"FARMS_ENDING_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FARMS_UPCOMING_VIEWED\"] = 30] = \"FARMS_UPCOMING_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FARMS_MYVESTING_VIEWED\"] = 31] = \"FARMS_MYVESTING_VIEWED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"INDIVIDUAL_REWARD_HARVESTED\"] = 32] = \"INDIVIDUAL_REWARD_HARVESTED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ALL_REWARDS_HARVESTED\"] = 33] = \"ALL_REWARDS_HARVESTED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"SINGLE_REWARD_CLAIMED\"] = 34] = \"SINGLE_REWARD_CLAIMED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ALL_REWARDS_CLAIMED\"] = 35] = \"ALL_REWARDS_CLAIMED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ABOUT_SWAP_CLICKED\"] = 36] = \"ABOUT_SWAP_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ABOUT_START_EARNING_CLICKED\"] = 37] = \"ABOUT_START_EARNING_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ABOUT_VIEW_FARMS_CLICKED\"] = 38] = \"ABOUT_VIEW_FARMS_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ABOUT_CREATE_NEW_POOL_CLICKED\"] = 39] = \"ABOUT_CREATE_NEW_POOL_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ANALYTICS_MENU_CLICKED\"] = 40] = \"ANALYTICS_MENU_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CREATE_REFERRAL_CLICKED\"] = 41] = \"CREATE_REFERRAL_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_TRENDING_SOON_CLICKED\"] = 42] = \"DISCOVER_TRENDING_SOON_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_TRENDING_CLICKED\"] = 43] = \"DISCOVER_TRENDING_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SWAP_INITIATED\"] = 44] = \"DISCOVER_SWAP_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SWAP_DISCOVER_MORE_CLICKED\"] = 45] = \"DISCOVER_SWAP_DISCOVER_MORE_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SWAP_SEE_HERE_CLICKED\"] = 46] = \"DISCOVER_SWAP_SEE_HERE_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SWAP_BUY_NOW_CLICKED\"] = 47] = \"DISCOVER_SWAP_BUY_NOW_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SWAP_MORE_INFO_CLICKED\"] = 48] = \"DISCOVER_SWAP_MORE_INFO_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SWAP_BUY_NOW_POPUP_CLICKED\"] = 49] = \"DISCOVER_SWAP_BUY_NOW_POPUP_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_CREATE_POOL_INITIATED\"] = 50] = \"ELASTIC_CREATE_POOL_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_CREATE_POOL_COMPLETED\"] = 51] = \"ELASTIC_CREATE_POOL_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED\"] = 52] = \"ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_POOLS_ELASTIC_POOLS_CLICKED\"] = 53] = \"ELASTIC_POOLS_ELASTIC_POOLS_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_ADD_LIQUIDITY_INITIATED\"] = 54] = \"ELASTIC_ADD_LIQUIDITY_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_ADD_LIQUIDITY_IN_LIST_INITIATED\"] = 55] = \"ELASTIC_ADD_LIQUIDITY_IN_LIST_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_ADD_LIQUIDITY_COMPLETED\"] = 56] = \"ELASTIC_ADD_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_REMOVE_LIQUIDITY_INITIATED\"] = 57] = \"ELASTIC_REMOVE_LIQUIDITY_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_REMOVE_LIQUIDITY_COMPLETED\"] = 58] = \"ELASTIC_REMOVE_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_INCREASE_LIQUIDITY_INITIATED\"] = 59] = \"ELASTIC_INCREASE_LIQUIDITY_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_INCREASE_LIQUIDITY_COMPLETED\"] = 60] = \"ELASTIC_INCREASE_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_COLLECT_FEES_INITIATED\"] = 61] = \"ELASTIC_COLLECT_FEES_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_COLLECT_FEES_COMPLETED\"] = 62] = \"ELASTIC_COLLECT_FEES_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED\"] = 63] = \"ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED\"] = 64] = \"ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_STAKE_LIQUIDITY_COMPLETED\"] = 65] = \"ELASTIC_STAKE_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED\"] = 66] = \"ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_INDIVIDUAL_REWARD_HARVESTED\"] = 67] = \"ELASTIC_INDIVIDUAL_REWARD_HARVESTED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_ALLS_REWARD_HARVESTED\"] = 68] = \"ELASTIC_ALLS_REWARD_HARVESTED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"ELASTIC_ALL_REWARD_CLAIMED\"] = 69] = \"ELASTIC_ALL_REWARD_CLAIMED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FAUCET_MENU_CLICKED\"] = 70] = \"FAUCET_MENU_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FAUCET_REQUEST_INITIATED\"] = 71] = \"FAUCET_REQUEST_INITIATED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FAUCET_REQUEST_COMPLETED\"] = 72] = \"FAUCET_REQUEST_COMPLETED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_CLICK_SUBSCRIBE_TRENDING_SOON\"] = 73] = \"DISCOVER_CLICK_SUBSCRIBE_TRENDING_SOON\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_CLICK_UNSUBSCRIBE_TRENDING_SOON\"] = 74] = \"DISCOVER_CLICK_UNSUBSCRIBE_TRENDING_SOON\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_SUBSCRIBE_TRENDING_SOON_SUCCESS\"] = 75] = \"DISCOVER_SUBSCRIBE_TRENDING_SOON_SUCCESS\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"DISCOVER_UNSUBSCRIBE_TRENDING_SOON_SUCCESS\"] = 76] = \"DISCOVER_UNSUBSCRIBE_TRENDING_SOON_SUCCESS\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CAMPAIGN_SWAP_NOW_CLICKED\"] = 77] = \"CAMPAIGN_SWAP_NOW_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CAMPAIGN_SHARE_TRADING_CONTEST_CLICKED\"] = 78] = \"CAMPAIGN_SHARE_TRADING_CONTEST_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CAMPAIGN_CLAIM_REWARDS_CLICKED\"] = 79] = \"CAMPAIGN_CLAIM_REWARDS_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CAMPAIGN_WALLET_CONNECTED\"] = 80] = \"CAMPAIGN_WALLET_CONNECTED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TRANSAK_BUY_CRYPTO_CLICKED\"] = 81] = \"TRANSAK_BUY_CRYPTO_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TRANSAK_DOWNLOAD_WALLET_CLICKED\"] = 82] = \"TRANSAK_DOWNLOAD_WALLET_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TRANSAK_SWAP_NOW_CLICKED\"] = 83] = \"TRANSAK_SWAP_NOW_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"SWAP_BUY_CRYPTO_CLICKED\"] = 84] = \"SWAP_BUY_CRYPTO_CLICKED\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TUTORIAL_CLICK_START\"] = 85] = \"TUTORIAL_CLICK_START\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TUTORIAL_CLICK_DONE\"] = 86] = \"TUTORIAL_CLICK_DONE\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TUTORIAL_CLICK_DENY\"] = 87] = \"TUTORIAL_CLICK_DENY\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TUTORIAL_VIEW_VIDEO_SWAP\"] = 88] = \"TUTORIAL_VIEW_VIDEO_SWAP\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TAS_TYPING_KEYWORD\"] = 89] = \"TAS_TYPING_KEYWORD\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TAS_SELECT_PAIR\"] = 90] = \"TAS_SELECT_PAIR\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TAS_LIKE_PAIR\"] = 91] = \"TAS_LIKE_PAIR\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TAS_DISLIKE_PAIR\"] = 92] = \"TAS_DISLIKE_PAIR\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"TAS_PRESS_CTRL_K\"] = 93] = \"TAS_PRESS_CTRL_K\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"MANAGE_TOKEN_LISTS_CLICK\"] = 94] = \"MANAGE_TOKEN_LISTS_CLICK\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"MANAGE_TOKEN_LISTS_TAB_CLICK\"] = 95] = \"MANAGE_TOKEN_LISTS_TAB_CLICK\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"MANAGE_TOKEN_LISTS_ON_OFF_TOGGLE\"] = 96] = \"MANAGE_TOKEN_LISTS_ON_OFF_TOGGLE\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"BANNER_CLICK\"] = 97] = \"BANNER_CLICK\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"CLOSE_BANNER_CLICK\"] = 98] = \"CLOSE_BANNER_CLICK\";\n  MIXPANEL_TYPE[MIXPANEL_TYPE[\"FARM_UNDER_EARN_TAB_CLICK\"] = 99] = \"FARM_UNDER_EARN_TAB_CLICK\";\n})(MIXPANEL_TYPE || (MIXPANEL_TYPE = {}));\n\nexport var NEED_CHECK_SUBGRAPH_TRANSACTION_TYPES = ['Add liquidity', 'Elastic Add liquidity', 'Remove liquidity', 'Elastic Remove liquidity', 'Create pool', 'Elastic Create pool'];\nexport default function useMixpanel(trade, currencies) {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      chainId = _useWeb3React.chainId,\n      account = _useWeb3React.account;\n\n  var _useSwapState = useSwapState(),\n      saveGas = _useSwapState.saveGas;\n\n  var network = chainId && NETWORKS_INFO[chainId].name;\n  var inputCurrency = currencies && currencies[Field.INPUT];\n  var outputCurrency = currencies && currencies[Field.OUTPUT];\n  var inputSymbol = inputCurrency && inputCurrency.isNative ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeToken.name : inputCurrency === null || inputCurrency === void 0 ? void 0 : inputCurrency.symbol;\n  var outputSymbol = outputCurrency && outputCurrency.isNative ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeToken.name : outputCurrency === null || outputCurrency === void 0 ? void 0 : outputCurrency.symbol;\n  var ethPrice = useETHPrice();\n  var dispatch = useDispatch();\n  var apolloClient = NETWORKS_INFO[chainId || ChainId.MAINNET].classicClient;\n  var selectedCampaign = useSelector(function (state) {\n    return state.campaigns.selectedCampaign;\n  });\n\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n      _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n      allowedSlippage = _useUserSlippageToler2[0];\n\n  var mixpanelHandler = useCallback(function (type, payload) {\n    if (!account) {\n      return;\n    }\n\n    switch (type) {\n      case MIXPANEL_TYPE.PAGE_VIEWED:\n        {\n          var page = payload.page;\n          page && mixpanel.track(page + ' Page Viewed');\n          break;\n        }\n\n      case MIXPANEL_TYPE.WALLET_CONNECTED:\n        mixpanel.register({\n          wallet_address: account,\n          platform: isMobile ? 'Mobile' : 'Web',\n          network: network\n        });\n        mixpanel.track('Wallet Connected');\n        break;\n\n      case MIXPANEL_TYPE.SWAP_INITIATED:\n        {\n          mixpanel.track('Swap Initiated', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n            max_return_or_low_gas: saveGas ? 'Lowest Gas' : 'Maximum Return',\n            trade_qty: trade === null || trade === void 0 ? void 0 : trade.inputAmount.toExact(),\n            slippage_setting: allowedSlippage ? allowedSlippage / 100 : 0,\n            price_impact: trade && (trade === null || trade === void 0 ? void 0 : trade.priceImpact) > 0.01 ? trade === null || trade === void 0 ? void 0 : trade.priceImpact.toFixed(2) : '<0.01'\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.SWAP_COMPLETED:\n        {\n          var arbitrary = payload.arbitrary,\n              actual_gas = payload.actual_gas,\n              gas_price = payload.gas_price,\n              tx_hash = payload.tx_hash;\n          mixpanel.track('Swap Completed', {\n            input_token: arbitrary.inputSymbol,\n            output_token: arbitrary.outputSymbol,\n            actual_gas: ethPrice && ethPrice.currentPrice && (actual_gas.toNumber() * parseFloat(formatUnits(gas_price, 18)) * parseFloat(ethPrice.currentPrice)).toFixed(4),\n            tx_hash: tx_hash,\n            max_return_or_low_gas: arbitrary.saveGas ? 'Lowest Gas' : 'Maximum Return',\n            trade_qty: arbitrary.inputAmount,\n            slippage_setting: arbitrary.slippageSetting,\n            price_impact: arbitrary.priceImpact,\n            gas_price: formatUnits(gas_price, 18),\n            eth_price: ethPrice === null || ethPrice === void 0 ? void 0 : ethPrice.currentPrice,\n            actual_gas_native: actual_gas === null || actual_gas === void 0 ? void 0 : actual_gas.toNumber()\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ADVANCED_MODE_ON:\n        {\n          mixpanel.track('Advanced Mode Switched On', {\n            input_token: inputSymbol,\n            output_token: outputSymbol\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ADD_RECIPIENT_CLICKED:\n        {\n          mixpanel.track('Add Recipient Clicked', {\n            input_token: inputSymbol,\n            output_token: outputSymbol\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.SLIPPAGE_CHANGED:\n        {\n          var new_slippage = payload.new_slippage;\n          mixpanel.track('Slippage Changed', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n            new_slippage: new_slippage\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.LIVE_CHART_ON_OFF:\n        {\n          var live_chart_on_or_off = payload.live_chart_on_or_off;\n          mixpanel.track('Live Chart Turned On/Off (Desktop)', {\n            live_chart_on_or_off: live_chart_on_or_off ? 'On' : 'Off'\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.TRADING_ROUTE_ON_OFF:\n        {\n          var trading_route_on_or_off = payload.trading_route_on_or_off;\n          mixpanel.track('Trading Route Turned On/Off (Desktop)', {\n            trading_route_on_or_off: trading_route_on_or_off ? 'On' : 'Off'\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.LIVE_CHART_ON_MOBILE:\n        {\n          mixpanel.track('Live Chart Turned On (Mobile)');\n          break;\n        }\n\n      case MIXPANEL_TYPE.PRO_CHART_CLICKED:\n        {\n          mixpanel.track('Swap - Pro Live Chart - Pro button clicked on Swap Page');\n          break;\n        }\n\n      case MIXPANEL_TYPE.BASIC_CHART_CLICKED:\n        {\n          mixpanel.track('Swap - Pro Live Chart - Basic button clicked on Swap Page');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TRADING_ROUTE_ON_MOBILE:\n        {\n          mixpanel.track('Trading Route Turned On (Mobile)');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TOKEN_INFO_CHECKED:\n        {\n          mixpanel.track('Token information viewed in Info tab (Swap Page)', {\n            input_token: inputSymbol,\n            output_token: outputSymbol\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.TOKEN_SWAP_LINK_SHARED:\n        {\n          mixpanel.track('Token Swap Link Shared', {\n            input_token: inputSymbol,\n            output_token: outputSymbol\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.CHAIN_SWITCHED:\n        {\n          var old_network = payload.old_network,\n              new_network = payload.new_network;\n          mixpanel.track('Chain Switched', {\n            old_network: old_network,\n            new_network: new_network\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.CREATE_POOL_INITITATED:\n        {\n          mixpanel.track('Create New Pool Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.CREATE_POOL_COMPLETED:\n        {\n          var token_1 = payload.token_1,\n              token_2 = payload.token_2,\n              amp = payload.amp;\n          mixpanel.track('Create New Pool Completed', {\n            token_1: token_1,\n            token_2: token_2,\n            amp: amp\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.CREATE_POOL_LINK_SHARED:\n        {\n          var _token_ = payload.token_1,\n              _token_2 = payload.token_2;\n          mixpanel.track('Create New Pool Link Shared', {\n            token_1: _token_,\n            token_2: _token_2\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ADD_LIQUIDITY_INITIATED:\n        {\n          var _token_3 = payload.token_1,\n              _token_4 = payload.token_2,\n              _amp = payload.amp;\n          mixpanel.track('Add Liquidity Initiated', {\n            token_1: _token_3,\n            token_2: _token_4,\n            amp: _amp\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ADD_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Add Liquidity Completed', _objectSpread(_objectSpread({}, payload), {}, {\n            tx_hash: payload.tx_hash\n          }));\n          break;\n        }\n\n      case MIXPANEL_TYPE.REMOVE_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Remove Liquidity Completed', _objectSpread(_objectSpread({}, payload), {}, {\n            tx_hash: payload.tx_hash\n          }));\n          break;\n        }\n\n      case MIXPANEL_TYPE.REMOVE_LIQUIDITY_INITIATED:\n        {\n          var _token_5 = payload.token_1,\n              _token_6 = payload.token_2,\n              _amp2 = payload.amp;\n          mixpanel.track('Remove Liquidity Initiated', {\n            token_1: _token_5,\n            token_2: _token_6,\n            amp: _amp2\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.MIGRATE_LIQUIDITY_INITIATED:\n        {\n          mixpanel.track('Migrate Liquidity Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.CLAIM_REWARDS_INITIATED:\n        {\n          mixpanel.track('Claim Rewards Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.IMPORT_POOL_INITIATED:\n        {\n          mixpanel.track('Import Pool Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.MYPOOLS_STAKED_VIEWED:\n        {\n          mixpanel.track(\"My Pools - 'Staked Pools' Tab Viewed\", {});\n          break;\n        }\n\n      case MIXPANEL_TYPE.MYPOOLS_POOLS_VIEWED:\n        {\n          mixpanel.track(\"My Pools - 'Pools' Tab Viewed\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.FARMS_ACTIVE_VIEWED:\n        {\n          mixpanel.track(\"Farms - 'Active' Tab Viewed\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.FARMS_ENDING_VIEWED:\n        {\n          mixpanel.track(\"Farms - 'Ending' Tab Viewed\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.FARMS_UPCOMING_VIEWED:\n        {\n          mixpanel.track(\"Farms - 'Upcoming' Tab Viewed\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.FARMS_MYVESTING_VIEWED:\n        {\n          mixpanel.track(\"Farms - 'My Vesting' Tab Viewed\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.INDIVIDUAL_REWARD_HARVESTED:\n        {\n          var reward_tokens_and_amounts = payload.reward_tokens_and_amounts;\n          mixpanel.track('Individual Reward Harvested', {\n            reward_tokens_and_qty: reward_tokens_and_amounts\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ALL_REWARDS_HARVESTED:\n        {\n          var _reward_tokens_and_amounts = payload.reward_tokens_and_amounts;\n          mixpanel.track('All Rewards Harvested', {\n            reward_tokens_and_qty: _reward_tokens_and_amounts\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.SINGLE_REWARD_CLAIMED:\n        {\n          var reward_token = payload.reward_token,\n              reward_amount = payload.reward_amount;\n          mixpanel.track('Single Reward Claimed', {\n            reward_token: reward_token,\n            reward_qty: reward_amount\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ALL_REWARDS_CLAIMED:\n        {\n          var _reward_tokens_and_amounts2 = payload.reward_tokens_and_amounts;\n          mixpanel.track('All Rewards Claimed', {\n            reward_tokens_and_qty: _reward_tokens_and_amounts2\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ABOUT_SWAP_CLICKED:\n        {\n          mixpanel.track('About - Swap Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ABOUT_START_EARNING_CLICKED:\n        {\n          mixpanel.track('About - Start Earning Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ABOUT_VIEW_FARMS_CLICKED:\n        {\n          mixpanel.track('About - View Farms Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ABOUT_CREATE_NEW_POOL_CLICKED:\n        {\n          mixpanel.track('About - Create New Pool Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ANALYTICS_MENU_CLICKED:\n        {\n          mixpanel.track('Analytics Page Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.CREATE_REFERRAL_CLICKED:\n        {\n          var referral_commission = payload.referral_commission,\n              input_token = payload.input_token,\n              output_token = payload.output_token;\n          mixpanel.track('Create Referral Link Clicked', {\n            referral_commission: referral_commission,\n            input_token: input_token,\n            output_token: output_token,\n            chain: network\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_TRENDING_SOON_CLICKED:\n        {\n          mixpanel.track('Discover - Trending Soon Tab Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_TRENDING_CLICKED:\n        {\n          mixpanel.track('Discover - Trending Tab Clicked');\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_CLICK_SUBSCRIBE_TRENDING_SOON:\n        {\n          mixpanel.track(\"Discover - 'Subscribe' clicked on Trending Soon\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_CLICK_UNSUBSCRIBE_TRENDING_SOON:\n        {\n          mixpanel.track(\"Discover - 'Unsubscribe' clicked on Trending Soon\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SUBSCRIBE_TRENDING_SOON_SUCCESS:\n        {\n          mixpanel.track(\"Discover - 'Subscribed' Trending Soon successfully\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_UNSUBSCRIBE_TRENDING_SOON_SUCCESS:\n        {\n          mixpanel.track(\"Discover - 'Unsubscribed' Trending Soon successfully\");\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SWAP_INITIATED:\n        {\n          var token_name = payload.token_name,\n              trending_or_trending_soon = payload.trending_or_trending_soon,\n              token_on_chain = payload.token_on_chain,\n              token_contract_address = payload.token_contract_address;\n          mixpanel.track('Discover - Swap Initiated', {\n            token_name: token_name,\n            trending_or_trending_soon: trending_or_trending_soon,\n            token_on_chain: token_on_chain,\n            token_contract_address: token_contract_address\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SWAP_DISCOVER_MORE_CLICKED:\n        {\n          mixpanel.track('Discover - \"Discover more\" clicked from Swap Page');\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SWAP_SEE_HERE_CLICKED:\n        {\n          var trending_token = payload.trending_token;\n          mixpanel.track('Discover - \"See here\" clicked from Swap page', {\n            trending_token: trending_token\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SWAP_BUY_NOW_CLICKED:\n        {\n          var _trending_token = payload.trending_token;\n          mixpanel.track('Discover - \"Buy Now\" clicked on Swap Page', {\n            trending_token: _trending_token\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SWAP_MORE_INFO_CLICKED:\n        {\n          var _trending_token2 = payload.trending_token;\n          mixpanel.track('Discover - \"More info\" clicked on Swap Page', {\n            trending_token: _trending_token2\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.DISCOVER_SWAP_BUY_NOW_POPUP_CLICKED:\n        {\n          var _trending_token3 = payload.trending_token;\n          mixpanel.track('Discover - \"Buy Now\" clicked in pop-up after \\'More Info\\' on Swap page', {\n            trending_token: _trending_token3\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_CREATE_POOL_INITIATED:\n        {\n          mixpanel.track('Elastic Pools - Create New Pool Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_CREATE_POOL_COMPLETED:\n        {\n          mixpanel.track('Elastic Pools - Create New Pool Completed', _objectSpread(_objectSpread({}, payload), {}, {\n            tx_hash: payload.tx_hash\n          }));\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED:\n        {\n          mixpanel.track('Elastic Pools - My pools - Click on Elastic Pool');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_POOLS_ELASTIC_POOLS_CLICKED:\n        {\n          mixpanel.track('Elastic Pools - Click on Elastic Pool');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_INITIATED:\n        {\n          mixpanel.track('Elastic Pools - Add Liquidity Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_IN_LIST_INITIATED:\n        {\n          mixpanel.track('Elastic Pools - Add Liquidity Initiated in Token Pair List', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Pools - Add Liquidity Completed', _objectSpread(_objectSpread({}, payload), {}, {\n            tx_hash: payload.tx_hash\n          }));\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_INITIATED:\n        {\n          mixpanel.track('Elastic Pools - My Pools - Remove Liquidity Initiated', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Pools - My Pools - Remove Liquidity Completed', _objectSpread(_objectSpread({}, payload), {}, {\n            tx_hash: payload.tx_hash\n          }));\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_INCREASE_LIQUIDITY_INITIATED:\n        {\n          mixpanel.track('Elastic Pools - My Pools - Increase Liquidity Initiated', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_INCREASE_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Pools - My Pools - Increase Liquidity Completed', _objectSpread(_objectSpread({}, payload), {}, {\n            tx_hash: payload.tx_hash\n          }));\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_COLLECT_FEES_INITIATED:\n        {\n          mixpanel.track('Elastic Pools - My Pools - Collect Fees Initiated', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_COLLECT_FEES_COMPLETED:\n        {\n          mixpanel.track('Elastic Pools - My Pools - Collect Fees Completed', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Farms - Deposit Liquidity Completed', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Farms - Withdraw Liquidity Completed', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_STAKE_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Farms - Stake Liquidity Completed', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED:\n        {\n          mixpanel.track('Elastic Farms - Unstake Liquidity Completed', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_INDIVIDUAL_REWARD_HARVESTED:\n        {\n          mixpanel.track('Elastic Farms - Individual Reward Harvested', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_ALLS_REWARD_HARVESTED:\n        {\n          mixpanel.track('Elastic Farms - All Rewards Harvested', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.ELASTIC_ALL_REWARD_CLAIMED:\n        {\n          mixpanel.track('Elastic Farms - Reward Claimed', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.FAUCET_MENU_CLICKED:\n        {\n          mixpanel.track('Faucet feature - Faucet button clicked on Menu');\n          break;\n        }\n\n      case MIXPANEL_TYPE.FAUCET_REQUEST_INITIATED:\n        {\n          mixpanel.track('Faucet feature - Request faucet Initiated');\n          break;\n        }\n\n      case MIXPANEL_TYPE.FAUCET_REQUEST_COMPLETED:\n        {\n          mixpanel.track('Faucet feature - Request faucet Completed');\n          break;\n        }\n\n      case MIXPANEL_TYPE.CAMPAIGN_SWAP_NOW_CLICKED:\n        {\n          mixpanel.track('Campaign - Enter Trading Contest \"Swap Now\"', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.CAMPAIGN_SHARE_TRADING_CONTEST_CLICKED:\n        {\n          mixpanel.track('Campaign - Share Trading Contest share button', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.CAMPAIGN_CLAIM_REWARDS_CLICKED:\n        {\n          mixpanel.track('Campaign - Claim Rewards Trading Contest \"Claim Rewards\"');\n          break;\n        }\n\n      case MIXPANEL_TYPE.CAMPAIGN_WALLET_CONNECTED:\n        {\n          setTimeout(function () {\n            mixpanel === null || mixpanel === void 0 ? void 0 : mixpanel.track('Campaign - Wallet Connected', {\n              campaign_name: selectedCampaign === null || selectedCampaign === void 0 ? void 0 : selectedCampaign.name\n            });\n          }, 500);\n          break;\n        }\n\n      case MIXPANEL_TYPE.TRANSAK_DOWNLOAD_WALLET_CLICKED:\n        {\n          mixpanel.track('Buy Crypto - Download a wallet \"Download Wallet”');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TRANSAK_BUY_CRYPTO_CLICKED:\n        {\n          mixpanel.track('Buy Crypto - To purchase crypto on Transak \"Buy Now”');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TRANSAK_SWAP_NOW_CLICKED:\n        {\n          mixpanel.track('Buy Crypto - Swap token on KyberSwap \"Swap\" button');\n          break;\n        }\n\n      case MIXPANEL_TYPE.SWAP_BUY_CRYPTO_CLICKED:\n        {\n          mixpanel.track('Buy Crypto - Click on Buy Crypto on KyberSwap');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TUTORIAL_CLICK_START:\n        {\n          mixpanel.track('On-Screen Guide - User click on \"View\" in Setting to view guide');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TUTORIAL_CLICK_DENY:\n        {\n          mixpanel.track('On-Screen Guide - User click on \"Dismiss\" button', {\n            step: payload\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.TUTORIAL_CLICK_DONE:\n        {\n          mixpanel.track('On-Screen Guide - User click on \"Done\" button at Step 8');\n          break;\n        }\n\n      case MIXPANEL_TYPE.TUTORIAL_VIEW_VIDEO_SWAP:\n        {\n          mixpanel.track('On-Screen Guide - User click on Step 3 Embedded video');\n          break;\n        }\n      // type and swap\n\n      case MIXPANEL_TYPE.TAS_TYPING_KEYWORD:\n        {\n          mixpanel.track('Type and Swap - Typed on the text box', {\n            text: payload\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.TAS_SELECT_PAIR:\n        {\n          mixpanel.track('Type and Swap - Selected an option', {\n            option: payload\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.TAS_LIKE_PAIR:\n        {\n          mixpanel.track('Type and Swap - Favorite a token pair', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.TAS_DISLIKE_PAIR:\n        {\n          mixpanel.track('Type and Swap -  Un-favorite a token pair', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.TAS_PRESS_CTRL_K:\n        {\n          mixpanel.track('Type and Swap - User click Ctrl + K (or Cmd + K) or Clicked on the text box', {\n            navigation: payload\n          });\n          break;\n        }\n\n      case MIXPANEL_TYPE.MANAGE_TOKEN_LISTS_CLICK:\n        {\n          mixpanel.track('Manage Token Lists - User click on \"Manage Token Lists\" button');\n          break;\n        }\n\n      case MIXPANEL_TYPE.MANAGE_TOKEN_LISTS_TAB_CLICK:\n        {\n          mixpanel.track('Manage Token Lists - User click on \"List\" or \"Token\" toggle', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.MANAGE_TOKEN_LISTS_ON_OFF_TOGGLE:\n        {\n          mixpanel.track('Manage Token Lists - User clicked On/Off toggle from Token Lists', payload);\n          break;\n        }\n\n      case MIXPANEL_TYPE.BANNER_CLICK:\n        {\n          mixpanel.track('User click on \"Banner\" at swap page');\n          break;\n        }\n\n      case MIXPANEL_TYPE.CLOSE_BANNER_CLICK:\n        {\n          mixpanel.track('User click close \"Banner\" at swap page');\n          break;\n        }\n\n      case MIXPANEL_TYPE.FARM_UNDER_EARN_TAB_CLICK:\n        {\n          mixpanel.track('Farms Page Viewed - under Earn tab');\n          break;\n        }\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [currencies, network, saveGas, account, trade, mixpanel.hasOwnProperty('get_distinct_id'), ethPrice === null || ethPrice === void 0 ? void 0 : ethPrice.currentPrice]);\n  var subgraphMixpanelHandler = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(transaction) {\n      var apolloProMMClient, hash, res, _res$data, _res$data$pool, _res$data$pool2, reserve0, reserve1, reserveUSD, mint, _res, _res$data2, _res$data2$pool, _res$data$pool3, totalValueLockedToken0, totalValueLockedToken1, totalValueLockedUSD, feeTier, _mint, _res2, _res2$data, _res2$data$pool, _res2$data$pool2, _reserve, _reserve2, _reserveUSD, burn, _res3, _res3$data, _res3$data$pool, _res3$data$pool2, _totalValueLockedToken, _totalValueLockedToken2, _totalValueLockedUSD, _feeTier, _burn, _res4, _res4$data, _res4$data$transactio, _res4$data$transactio2, amount0, amount1, amountUSD, _res5, _res5$data, _res5$data$transactio, _res5$data$transactio2, _amount, _amount2, _amountUSD;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              apolloProMMClient = NETWORKS_INFO[chainId || ChainId.MAINNET].elasticClient;\n              hash = transaction.hash;\n\n              if (chainId) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.t0 = transaction.type;\n              _context.next = _context.t0 === 'Add liquidity' ? 7 : _context.t0 === 'Elastic Add liquidity' ? 18 : _context.t0 === 'Remove liquidity' ? 29 : _context.t0 === 'Elastic Remove liquidity' ? 40 : _context.t0 === 'Create pool' ? 51 : _context.t0 === 'Elastic Create pool' ? 60 : 69;\n              break;\n\n            case 7:\n              _context.next = 9;\n              return apolloClient.query({\n                query: GET_POOL_VALUES_AFTER_MINTS_SUCCESS,\n                variables: {\n                  poolAddress: transaction.arbitrary.poolAddress.toLowerCase()\n                },\n                fetchPolicy: 'network-only'\n              });\n\n            case 9:\n              res = _context.sent;\n\n              if (!(transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000)) {\n                _context.next = 13;\n                break;\n              }\n\n              if (!(!((_res$data = res.data) !== null && _res$data !== void 0 && (_res$data$pool = _res$data.pool) !== null && _res$data$pool !== void 0 && _res$data$pool.mints) || res.data.pool.mints.every(function (mint) {\n                return !mint.id.startsWith(transaction.hash);\n              }))) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 70);\n\n            case 13:\n              _res$data$pool2 = res.data.pool, reserve0 = _res$data$pool2.reserve0, reserve1 = _res$data$pool2.reserve1, reserveUSD = _res$data$pool2.reserveUSD;\n              mint = res.data.pool.mints.find(function (mint) {\n                return mint.id.startsWith(transaction.hash);\n              });\n              mixpanelHandler(MIXPANEL_TYPE.ADD_LIQUIDITY_COMPLETED, {\n                token_1_pool_qty: reserve0,\n                token_2_pool_qty: reserve1,\n                liquidity_USD: reserveUSD,\n                token_1: transaction.arbitrary.token_1,\n                token_2: transaction.arbitrary.token_2,\n                token_1_qty: mint === null || mint === void 0 ? void 0 : mint.amount0,\n                token_2_qty: mint === null || mint === void 0 ? void 0 : mint.amount1,\n                tx_liquidity_USD: mint === null || mint === void 0 ? void 0 : mint.amountUSD,\n                add_liquidity_method: transaction.arbitrary.add_liquidity_method,\n                amp: transaction.arbitrary.amp,\n                tx_hash: hash\n              });\n              dispatch(checkedSubgraph({\n                chainId: chainId,\n                hash: hash\n              }));\n              return _context.abrupt(\"break\", 70);\n\n            case 18:\n              _context.next = 20;\n              return apolloProMMClient.query({\n                query: PROMM_GET_POOL_VALUES_AFTER_MINTS_SUCCESS,\n                variables: {\n                  poolAddress: transaction.arbitrary.poolAddress.toLowerCase()\n                },\n                fetchPolicy: 'network-only'\n              });\n\n            case 20:\n              _res = _context.sent;\n\n              if (!(transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000)) {\n                _context.next = 24;\n                break;\n              }\n\n              if (!(!((_res$data2 = _res.data) !== null && _res$data2 !== void 0 && (_res$data2$pool = _res$data2.pool) !== null && _res$data2$pool !== void 0 && _res$data2$pool.mints) || _res.data.pool.mints.every(function (mint) {\n                return !mint.id.startsWith(transaction.hash);\n              }))) {\n                _context.next = 24;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 70);\n\n            case 24:\n              _res$data$pool3 = _res.data.pool, totalValueLockedToken0 = _res$data$pool3.totalValueLockedToken0, totalValueLockedToken1 = _res$data$pool3.totalValueLockedToken1, totalValueLockedUSD = _res$data$pool3.totalValueLockedUSD, feeTier = _res$data$pool3.feeTier;\n              _mint = _res.data.pool.mints.find(function (mint) {\n                return mint.id.startsWith(transaction.hash);\n              });\n              mixpanelHandler(MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_COMPLETED, {\n                token_1_pool_qty: totalValueLockedToken0,\n                token_2_pool_qty: totalValueLockedToken1,\n                liquidity_USD: totalValueLockedUSD,\n                token_1: transaction.arbitrary.token_1,\n                token_2: transaction.arbitrary.token_2,\n                token_1_qty: _mint === null || _mint === void 0 ? void 0 : _mint.amount0,\n                token_2_qty: _mint === null || _mint === void 0 ? void 0 : _mint.amount1,\n                tx_liquidity_USD: _mint === null || _mint === void 0 ? void 0 : _mint.amountUSD,\n                fee_tier: feeTier / ELASTIC_BASE_FEE_UNIT,\n                tx_hash: hash\n              });\n              dispatch(checkedSubgraph({\n                chainId: chainId,\n                hash: hash\n              }));\n              return _context.abrupt(\"break\", 70);\n\n            case 29:\n              _context.next = 31;\n              return apolloClient.query({\n                query: GET_POOL_VALUES_AFTER_BURNS_SUCCESS,\n                variables: {\n                  poolAddress: transaction.arbitrary.poolAddress.toLowerCase()\n                },\n                fetchPolicy: 'network-only'\n              });\n\n            case 31:\n              _res2 = _context.sent;\n\n              if (!(transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000)) {\n                _context.next = 35;\n                break;\n              }\n\n              if (!(!((_res2$data = _res2.data) !== null && _res2$data !== void 0 && (_res2$data$pool = _res2$data.pool) !== null && _res2$data$pool !== void 0 && _res2$data$pool.burns) || _res2.data.pool.burns.every(function (burn) {\n                return !burn.id.startsWith(transaction.hash);\n              }))) {\n                _context.next = 35;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 70);\n\n            case 35:\n              _res2$data$pool2 = _res2.data.pool, _reserve = _res2$data$pool2.reserve0, _reserve2 = _res2$data$pool2.reserve1, _reserveUSD = _res2$data$pool2.reserveUSD;\n              burn = _res2.data.pool.burns.find(function (burn) {\n                return burn.id.startsWith(transaction.hash);\n              });\n              mixpanelHandler(MIXPANEL_TYPE.REMOVE_LIQUIDITY_COMPLETED, {\n                token_1_pool_qty: _reserve,\n                token_2_pool_qty: _reserve2,\n                liquidity_USD: _reserveUSD,\n                token_1: transaction.arbitrary.token_1,\n                token_2: transaction.arbitrary.token_2,\n                token_1_qty: burn === null || burn === void 0 ? void 0 : burn.amount0,\n                token_2_qty: burn === null || burn === void 0 ? void 0 : burn.amount1,\n                tx_liquidity_USD: burn === null || burn === void 0 ? void 0 : burn.amountUSD,\n                remove_liquidity_method: transaction.arbitrary.remove_liquidity_method,\n                amp: transaction.arbitrary.amp,\n                tx_hash: hash\n              });\n              dispatch(checkedSubgraph({\n                chainId: chainId,\n                hash: hash\n              }));\n              return _context.abrupt(\"break\", 70);\n\n            case 40:\n              _context.next = 42;\n              return apolloProMMClient.query({\n                query: PROMM_GET_POOL_VALUES_AFTER_BURNS_SUCCESS,\n                variables: {\n                  poolAddress: transaction.arbitrary.poolAddress.toLowerCase()\n                },\n                fetchPolicy: 'network-only'\n              });\n\n            case 42:\n              _res3 = _context.sent;\n\n              if (!(transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000)) {\n                _context.next = 46;\n                break;\n              }\n\n              if (!(!((_res3$data = _res3.data) !== null && _res3$data !== void 0 && (_res3$data$pool = _res3$data.pool) !== null && _res3$data$pool !== void 0 && _res3$data$pool.burns) || _res3.data.pool.burns.every(function (burn) {\n                return !burn.id.startsWith(transaction.hash);\n              }))) {\n                _context.next = 46;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 70);\n\n            case 46:\n              _res3$data$pool2 = _res3.data.pool, _totalValueLockedToken = _res3$data$pool2.totalValueLockedToken0, _totalValueLockedToken2 = _res3$data$pool2.totalValueLockedToken1, _totalValueLockedUSD = _res3$data$pool2.totalValueLockedUSD, _feeTier = _res3$data$pool2.feeTier;\n              _burn = _res3.data.pool.burns.find(function (burn) {\n                return burn.id.startsWith(transaction.hash);\n              });\n              mixpanelHandler(MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_COMPLETED, {\n                token_1_pool_qty: _totalValueLockedToken,\n                token_2_pool_qty: _totalValueLockedToken2,\n                liquidity_USD: _totalValueLockedUSD,\n                token_1: transaction.arbitrary.token_1,\n                token_2: transaction.arbitrary.token_2,\n                token_1_qty: _burn === null || _burn === void 0 ? void 0 : _burn.amount0,\n                token_2_qty: _burn === null || _burn === void 0 ? void 0 : _burn.amount1,\n                tx_liquidity_USD: _burn === null || _burn === void 0 ? void 0 : _burn.amountUSD,\n                fee_tier: _feeTier / ELASTIC_BASE_FEE_UNIT,\n                tx_hash: hash\n              });\n              dispatch(checkedSubgraph({\n                chainId: chainId,\n                hash: hash\n              }));\n              return _context.abrupt(\"break\", 70);\n\n            case 51:\n              _context.next = 53;\n              return apolloClient.query({\n                query: GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS,\n                variables: {\n                  transactionHash: hash\n                },\n                fetchPolicy: 'network-only'\n              });\n\n            case 53:\n              _res4 = _context.sent;\n\n              if (!(transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000)) {\n                _context.next = 57;\n                break;\n              }\n\n              if (!(!((_res4$data = _res4.data) !== null && _res4$data !== void 0 && (_res4$data$transactio = _res4$data.transaction) !== null && _res4$data$transactio !== void 0 && _res4$data$transactio.mints) || _res4.data.transaction.mints.length === 0)) {\n                _context.next = 57;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 70);\n\n            case 57:\n              _res4$data$transactio2 = _res4.data.transaction.mints[0], amount0 = _res4$data$transactio2.amount0, amount1 = _res4$data$transactio2.amount1, amountUSD = _res4$data$transactio2.amountUSD;\n              mixpanelHandler(MIXPANEL_TYPE.CREATE_POOL_COMPLETED, {\n                token_1: transaction.arbitrary.token_1,\n                token_2: transaction.arbitrary.token_2,\n                amp: transaction.arbitrary.amp,\n                tx_hash: hash,\n                token_1_qty: amount0,\n                token_2_qty: amount1,\n                tx_liquidity_USD: amountUSD\n              });\n              return _context.abrupt(\"break\", 70);\n\n            case 60:\n              _context.next = 62;\n              return apolloProMMClient.query({\n                query: PROMM_GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS,\n                variables: {\n                  transactionHash: hash\n                },\n                fetchPolicy: 'network-only'\n              });\n\n            case 62:\n              _res5 = _context.sent;\n\n              if (!(transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000)) {\n                _context.next = 66;\n                break;\n              }\n\n              if (!(!((_res5$data = _res5.data) !== null && _res5$data !== void 0 && (_res5$data$transactio = _res5$data.transaction) !== null && _res5$data$transactio !== void 0 && _res5$data$transactio.mints) || _res5.data.transaction.mints.length === 0)) {\n                _context.next = 66;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 70);\n\n            case 66:\n              _res5$data$transactio2 = _res5.data.transaction.mints[0], _amount = _res5$data$transactio2.amount0, _amount2 = _res5$data$transactio2.amount1, _amountUSD = _res5$data$transactio2.amountUSD;\n              mixpanelHandler(MIXPANEL_TYPE.ELASTIC_CREATE_POOL_COMPLETED, {\n                token_1: transaction.arbitrary.token_1,\n                token_2: transaction.arbitrary.token_2,\n                tx_hash: hash,\n                token_1_qty: _amount,\n                token_2_qty: _amount2,\n                tx_liquidity_USD: _amountUSD\n              });\n              return _context.abrupt(\"break\", 70);\n\n            case 69:\n              return _context.abrupt(\"break\", 70);\n\n            case 70:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [chainId, dispatch, apolloClient, mixpanelHandler]);\n  return {\n    mixpanelHandler: mixpanelHandler,\n    subgraphMixpanelHandler: subgraphMixpanelHandler\n  };\n}\n\n_s(useMixpanel, \"n8BmJDIgCjoKYO2mI+DYplXsm7I=\", false, function () {\n  return [useWeb3React, useSwapState, useETHPrice, useDispatch, useSelector, useUserSlippageTolerance];\n});\n\nexport var useGlobalMixpanelEvents = function useGlobalMixpanelEvents() {\n  _s2();\n\n  var _useWeb3React2 = useWeb3React(),\n      account = _useWeb3React2.account,\n      chainId = _useWeb3React2.chainId;\n\n  var _useMixpanel = useMixpanel(),\n      mixpanelHandler = _useMixpanel.mixpanelHandler;\n\n  var oldNetwork = usePrevious(chainId);\n  var location = useLocation();\n  var pathName = useMemo(function () {\n    if (location.pathname.split('/')[1] !== 'elastic') return location.pathname.split('/')[1];\n    return 'elastic/' + location.pathname.split('/')[2];\n  }, [location]);\n  useEffect(function () {\n    if (account && isAddress(account)) {\n      mixpanel.init(process.env.REACT_APP_MIXPANEL_PROJECT_TOKEN || '', {\n        debug: process.env.REACT_APP_MAINNET_ENV === 'staging'\n      });\n      mixpanel.identify(account);\n\n      var getQueryParam = function getQueryParam(url, param) {\n        // eslint-disable-next-line\n        param = param.replace(/\\[\\[\\]/, '[').replace(/[]]/, ']');\n        var regexS = '[?&]' + param + '=([^&#]*)',\n            regex = new RegExp(regexS),\n            results = regex.exec(url);\n\n        if (results === null || results && typeof results[1] !== 'string' && results[1].length) {\n          return '';\n        } else {\n          return decodeURIComponent(results[1]).replace(/\\W/gi, ' ');\n        }\n      };\n\n      var kw = '';\n      var campaign_keywords = 'utm_source utm_medium utm_campaign utm_content utm_term'.split(' '),\n          params = {},\n          first_params = {};\n      var index;\n\n      for (index = 0; index < campaign_keywords.length; ++index) {\n        kw = getQueryParam(document.URL, campaign_keywords[index]);\n\n        if (kw.length) {\n          params[campaign_keywords[index] + ' [last touch]'] = kw;\n        }\n      }\n\n      for (index = 0; index < campaign_keywords.length; ++index) {\n        kw = getQueryParam(document.URL, campaign_keywords[index]);\n\n        if (kw.length) {\n          first_params[campaign_keywords[index] + ' [first touch]'] = kw;\n        }\n      }\n\n      mixpanel.people.set(params);\n      mixpanel.people.set_once(first_params);\n      mixpanel.register_once(params);\n      mixpanelHandler(MIXPANEL_TYPE.WALLET_CONNECTED);\n    }\n\n    return function () {\n      if (mixpanel.hasOwnProperty('persistence')) {\n        mixpanel.reset();\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n  useEffect(function () {\n    if (oldNetwork) {\n      mixpanelHandler(MIXPANEL_TYPE.CHAIN_SWITCHED, {\n        new_network: chainId && NETWORKS_INFO[chainId].name,\n        old_network: oldNetwork && NETWORKS_INFO[oldNetwork].name\n      });\n      mixpanel.register({\n        network: chainId && NETWORKS_INFO[chainId].name\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [chainId]);\n  useEffect(function () {\n    if (pathName) {\n      var pageName = '';\n\n      switch (pathName) {\n        case 'swap':\n          pageName = 'Swap';\n          break;\n\n        case 'find':\n          pageName = 'Pool Finder';\n          break;\n\n        case 'pools':\n          pageName = 'Pools';\n          break;\n\n        case 'farms':\n          pageName = 'Farms';\n          break;\n\n        case 'myPools':\n          pageName = 'My Pools';\n          break;\n\n        case 'migration':\n          pageName = 'Migration';\n          break;\n\n        case 'create':\n          pageName = 'Create Pool';\n          break;\n\n        case 'add':\n          pageName = 'Add Liquidity';\n          break;\n\n        case 'remove':\n          pageName = 'Remove Liquidity';\n          break;\n\n        case 'about':\n          pageName = 'About';\n          break;\n\n        case 'referral':\n          pageName = 'Referral';\n          break;\n\n        case 'discover':\n          pageName = 'Discover';\n          break;\n\n        case 'campaigns':\n          pageName = 'Campaign';\n          break;\n\n        case 'elastic/remove':\n          pageName = 'Elastic - Remove Liquidity';\n          break;\n\n        case 'elastic/add':\n          pageName = 'Elastic - Add Liquidity';\n          break;\n\n        case 'elastic/increase':\n          pageName = 'Elastic - Increase Liquidity';\n          break;\n\n        case 'buy-crypto':\n          pageName = 'Buy Crypto';\n          break;\n\n        default:\n          break;\n      }\n\n      pageName && mixpanelHandler(MIXPANEL_TYPE.PAGE_VIEWED, {\n        page: pageName\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathName, account, chainId]);\n};\n\n_s2(useGlobalMixpanelEvents, \"4ZWh2GUnnk6kElBf+mWp9ts9rJE=\", false, function () {\n  return [useWeb3React, useMixpanel, usePrevious, useLocation];\n});","map":{"version":3,"names":["ChainId","useWeb3React","formatUnits","isAddress","mixpanel","useCallback","useEffect","useMemo","isMobile","useDispatch","useSelector","useLocation","usePrevious","GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS","GET_POOL_VALUES_AFTER_BURNS_SUCCESS","GET_POOL_VALUES_AFTER_MINTS_SUCCESS","PROMM_GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS","PROMM_GET_POOL_VALUES_AFTER_BURNS_SUCCESS","PROMM_GET_POOL_VALUES_AFTER_MINTS_SUCCESS","ELASTIC_BASE_FEE_UNIT","NETWORKS_INFO","useETHPrice","Field","useSwapState","checkedSubgraph","useUserSlippageTolerance","MIXPANEL_TYPE","NEED_CHECK_SUBGRAPH_TRANSACTION_TYPES","useMixpanel","trade","currencies","chainId","account","saveGas","network","name","inputCurrency","INPUT","outputCurrency","OUTPUT","inputSymbol","isNative","MAINNET","nativeToken","symbol","outputSymbol","ethPrice","dispatch","apolloClient","classicClient","selectedCampaign","state","campaigns","allowedSlippage","mixpanelHandler","type","payload","PAGE_VIEWED","page","track","WALLET_CONNECTED","register","wallet_address","platform","SWAP_INITIATED","input_token","output_token","max_return_or_low_gas","trade_qty","inputAmount","toExact","slippage_setting","price_impact","priceImpact","toFixed","SWAP_COMPLETED","arbitrary","actual_gas","gas_price","tx_hash","currentPrice","toNumber","parseFloat","slippageSetting","eth_price","actual_gas_native","ADVANCED_MODE_ON","ADD_RECIPIENT_CLICKED","SLIPPAGE_CHANGED","new_slippage","LIVE_CHART_ON_OFF","live_chart_on_or_off","TRADING_ROUTE_ON_OFF","trading_route_on_or_off","LIVE_CHART_ON_MOBILE","PRO_CHART_CLICKED","BASIC_CHART_CLICKED","TRADING_ROUTE_ON_MOBILE","TOKEN_INFO_CHECKED","TOKEN_SWAP_LINK_SHARED","CHAIN_SWITCHED","old_network","new_network","CREATE_POOL_INITITATED","CREATE_POOL_COMPLETED","token_1","token_2","amp","CREATE_POOL_LINK_SHARED","ADD_LIQUIDITY_INITIATED","ADD_LIQUIDITY_COMPLETED","REMOVE_LIQUIDITY_COMPLETED","REMOVE_LIQUIDITY_INITIATED","MIGRATE_LIQUIDITY_INITIATED","CLAIM_REWARDS_INITIATED","IMPORT_POOL_INITIATED","MYPOOLS_STAKED_VIEWED","MYPOOLS_POOLS_VIEWED","FARMS_ACTIVE_VIEWED","FARMS_ENDING_VIEWED","FARMS_UPCOMING_VIEWED","FARMS_MYVESTING_VIEWED","INDIVIDUAL_REWARD_HARVESTED","reward_tokens_and_amounts","reward_tokens_and_qty","ALL_REWARDS_HARVESTED","SINGLE_REWARD_CLAIMED","reward_token","reward_amount","reward_qty","ALL_REWARDS_CLAIMED","ABOUT_SWAP_CLICKED","ABOUT_START_EARNING_CLICKED","ABOUT_VIEW_FARMS_CLICKED","ABOUT_CREATE_NEW_POOL_CLICKED","ANALYTICS_MENU_CLICKED","CREATE_REFERRAL_CLICKED","referral_commission","chain","DISCOVER_TRENDING_SOON_CLICKED","DISCOVER_TRENDING_CLICKED","DISCOVER_CLICK_SUBSCRIBE_TRENDING_SOON","DISCOVER_CLICK_UNSUBSCRIBE_TRENDING_SOON","DISCOVER_SUBSCRIBE_TRENDING_SOON_SUCCESS","DISCOVER_UNSUBSCRIBE_TRENDING_SOON_SUCCESS","DISCOVER_SWAP_INITIATED","token_name","trending_or_trending_soon","token_on_chain","token_contract_address","DISCOVER_SWAP_DISCOVER_MORE_CLICKED","DISCOVER_SWAP_SEE_HERE_CLICKED","trending_token","DISCOVER_SWAP_BUY_NOW_CLICKED","DISCOVER_SWAP_MORE_INFO_CLICKED","DISCOVER_SWAP_BUY_NOW_POPUP_CLICKED","ELASTIC_CREATE_POOL_INITIATED","ELASTIC_CREATE_POOL_COMPLETED","ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED","ELASTIC_POOLS_ELASTIC_POOLS_CLICKED","ELASTIC_ADD_LIQUIDITY_INITIATED","ELASTIC_ADD_LIQUIDITY_IN_LIST_INITIATED","ELASTIC_ADD_LIQUIDITY_COMPLETED","ELASTIC_REMOVE_LIQUIDITY_INITIATED","ELASTIC_REMOVE_LIQUIDITY_COMPLETED","ELASTIC_INCREASE_LIQUIDITY_INITIATED","ELASTIC_INCREASE_LIQUIDITY_COMPLETED","ELASTIC_COLLECT_FEES_INITIATED","ELASTIC_COLLECT_FEES_COMPLETED","ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED","ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED","ELASTIC_STAKE_LIQUIDITY_COMPLETED","ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED","ELASTIC_INDIVIDUAL_REWARD_HARVESTED","ELASTIC_ALLS_REWARD_HARVESTED","ELASTIC_ALL_REWARD_CLAIMED","FAUCET_MENU_CLICKED","FAUCET_REQUEST_INITIATED","FAUCET_REQUEST_COMPLETED","CAMPAIGN_SWAP_NOW_CLICKED","CAMPAIGN_SHARE_TRADING_CONTEST_CLICKED","CAMPAIGN_CLAIM_REWARDS_CLICKED","CAMPAIGN_WALLET_CONNECTED","setTimeout","campaign_name","TRANSAK_DOWNLOAD_WALLET_CLICKED","TRANSAK_BUY_CRYPTO_CLICKED","TRANSAK_SWAP_NOW_CLICKED","SWAP_BUY_CRYPTO_CLICKED","TUTORIAL_CLICK_START","TUTORIAL_CLICK_DENY","step","TUTORIAL_CLICK_DONE","TUTORIAL_VIEW_VIDEO_SWAP","TAS_TYPING_KEYWORD","text","TAS_SELECT_PAIR","option","TAS_LIKE_PAIR","TAS_DISLIKE_PAIR","TAS_PRESS_CTRL_K","navigation","MANAGE_TOKEN_LISTS_CLICK","MANAGE_TOKEN_LISTS_TAB_CLICK","MANAGE_TOKEN_LISTS_ON_OFF_TOGGLE","BANNER_CLICK","CLOSE_BANNER_CLICK","FARM_UNDER_EARN_TAB_CLICK","hasOwnProperty","subgraphMixpanelHandler","transaction","apolloProMMClient","elasticClient","hash","query","variables","poolAddress","toLowerCase","fetchPolicy","res","confirmedTime","Date","getTime","data","pool","mints","every","mint","id","startsWith","reserve0","reserve1","reserveUSD","find","token_1_pool_qty","token_2_pool_qty","liquidity_USD","token_1_qty","amount0","token_2_qty","amount1","tx_liquidity_USD","amountUSD","add_liquidity_method","totalValueLockedToken0","totalValueLockedToken1","totalValueLockedUSD","feeTier","fee_tier","burns","burn","remove_liquidity_method","transactionHash","length","useGlobalMixpanelEvents","oldNetwork","location","pathName","pathname","split","init","process","env","REACT_APP_MIXPANEL_PROJECT_TOKEN","debug","REACT_APP_MAINNET_ENV","identify","getQueryParam","url","param","replace","regexS","regex","RegExp","results","exec","decodeURIComponent","kw","campaign_keywords","params","first_params","index","document","URL","people","set","set_once","register_once","reset","pageName"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useMixpanel.ts"],"sourcesContent":["import { ChainId, Currency } from '@kyberswap/ks-sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatUnits, isAddress } from 'ethers/lib/utils'\nimport mixpanel from 'mixpanel-browser'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport { usePrevious } from 'react-use'\n//import { Trade } from '@kyberswap/ks-sdk-elastic'\n\nimport {\n  GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS,\n  GET_POOL_VALUES_AFTER_BURNS_SUCCESS,\n  GET_POOL_VALUES_AFTER_MINTS_SUCCESS,\n} from 'apollo/queries'\nimport {\n  PROMM_GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS,\n  PROMM_GET_POOL_VALUES_AFTER_BURNS_SUCCESS,\n  PROMM_GET_POOL_VALUES_AFTER_MINTS_SUCCESS,\n} from 'apollo/queries/promm'\nimport { ELASTIC_BASE_FEE_UNIT } from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { AppDispatch, AppState } from 'state'\nimport { useETHPrice } from 'state/application/hooks'\nimport { Field } from 'state/swap/actions'\nimport { useSwapState } from 'state/swap/hooks'\nimport { checkedSubgraph } from 'state/transactions/actions'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\n//import { Aggregator } from 'utils/aggregator'\n\nexport enum MIXPANEL_TYPE {\n  PAGE_VIEWED,\n  WALLET_CONNECTED,\n  SWAP_INITIATED,\n  SWAP_COMPLETED,\n  ADVANCED_MODE_ON,\n  ADD_RECIPIENT_CLICKED,\n  SLIPPAGE_CHANGED,\n  LIVE_CHART_ON_OFF,\n  TRADING_ROUTE_ON_OFF,\n  LIVE_CHART_ON_MOBILE,\n  PRO_CHART_CLICKED,\n  BASIC_CHART_CLICKED,\n  TRADING_ROUTE_ON_MOBILE,\n  TOKEN_INFO_CHECKED,\n  TOKEN_SWAP_LINK_SHARED,\n  CHAIN_SWITCHED,\n  CREATE_POOL_INITITATED,\n  CREATE_POOL_COMPLETED,\n  CREATE_POOL_LINK_SHARED,\n  ADD_LIQUIDITY_INITIATED,\n  ADD_LIQUIDITY_COMPLETED,\n  REMOVE_LIQUIDITY_COMPLETED,\n  REMOVE_LIQUIDITY_INITIATED,\n  MIGRATE_LIQUIDITY_INITIATED,\n  CLAIM_REWARDS_INITIATED,\n  IMPORT_POOL_INITIATED,\n  MYPOOLS_STAKED_VIEWED,\n  MYPOOLS_POOLS_VIEWED,\n  FARMS_ACTIVE_VIEWED,\n  FARMS_ENDING_VIEWED,\n  FARMS_UPCOMING_VIEWED,\n  FARMS_MYVESTING_VIEWED,\n  INDIVIDUAL_REWARD_HARVESTED,\n  ALL_REWARDS_HARVESTED,\n  SINGLE_REWARD_CLAIMED,\n  ALL_REWARDS_CLAIMED,\n  ABOUT_SWAP_CLICKED,\n  ABOUT_START_EARNING_CLICKED,\n  ABOUT_VIEW_FARMS_CLICKED,\n  ABOUT_CREATE_NEW_POOL_CLICKED,\n  ANALYTICS_MENU_CLICKED,\n  CREATE_REFERRAL_CLICKED,\n  DISCOVER_TRENDING_SOON_CLICKED,\n  DISCOVER_TRENDING_CLICKED,\n  DISCOVER_SWAP_INITIATED,\n  DISCOVER_SWAP_DISCOVER_MORE_CLICKED,\n  DISCOVER_SWAP_SEE_HERE_CLICKED,\n  DISCOVER_SWAP_BUY_NOW_CLICKED,\n  DISCOVER_SWAP_MORE_INFO_CLICKED,\n  DISCOVER_SWAP_BUY_NOW_POPUP_CLICKED,\n  ELASTIC_CREATE_POOL_INITIATED,\n  ELASTIC_CREATE_POOL_COMPLETED,\n  ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED,\n  ELASTIC_POOLS_ELASTIC_POOLS_CLICKED,\n  ELASTIC_ADD_LIQUIDITY_INITIATED,\n  ELASTIC_ADD_LIQUIDITY_IN_LIST_INITIATED,\n  ELASTIC_ADD_LIQUIDITY_COMPLETED,\n  ELASTIC_REMOVE_LIQUIDITY_INITIATED,\n  ELASTIC_REMOVE_LIQUIDITY_COMPLETED,\n  ELASTIC_INCREASE_LIQUIDITY_INITIATED,\n  ELASTIC_INCREASE_LIQUIDITY_COMPLETED,\n  ELASTIC_COLLECT_FEES_INITIATED,\n  ELASTIC_COLLECT_FEES_COMPLETED,\n  ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED,\n  ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED,\n  ELASTIC_STAKE_LIQUIDITY_COMPLETED,\n  ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED,\n  ELASTIC_INDIVIDUAL_REWARD_HARVESTED,\n  ELASTIC_ALLS_REWARD_HARVESTED,\n  ELASTIC_ALL_REWARD_CLAIMED,\n  FAUCET_MENU_CLICKED,\n  FAUCET_REQUEST_INITIATED,\n  FAUCET_REQUEST_COMPLETED,\n  DISCOVER_CLICK_SUBSCRIBE_TRENDING_SOON,\n  DISCOVER_CLICK_UNSUBSCRIBE_TRENDING_SOON,\n  DISCOVER_SUBSCRIBE_TRENDING_SOON_SUCCESS,\n  DISCOVER_UNSUBSCRIBE_TRENDING_SOON_SUCCESS,\n  CAMPAIGN_SWAP_NOW_CLICKED,\n  CAMPAIGN_SHARE_TRADING_CONTEST_CLICKED,\n  CAMPAIGN_CLAIM_REWARDS_CLICKED,\n  CAMPAIGN_WALLET_CONNECTED,\n  TRANSAK_BUY_CRYPTO_CLICKED,\n  TRANSAK_DOWNLOAD_WALLET_CLICKED,\n  TRANSAK_SWAP_NOW_CLICKED,\n  SWAP_BUY_CRYPTO_CLICKED,\n\n  // for tutorial swap\n  TUTORIAL_CLICK_START,\n  TUTORIAL_CLICK_DONE,\n  TUTORIAL_CLICK_DENY,\n  TUTORIAL_VIEW_VIDEO_SWAP,\n\n  // type and swap\n  TAS_TYPING_KEYWORD,\n  TAS_SELECT_PAIR,\n  TAS_LIKE_PAIR,\n  TAS_DISLIKE_PAIR,\n  TAS_PRESS_CTRL_K,\n\n  MANAGE_TOKEN_LISTS_CLICK,\n  MANAGE_TOKEN_LISTS_TAB_CLICK,\n  MANAGE_TOKEN_LISTS_ON_OFF_TOGGLE,\n\n  BANNER_CLICK,\n  CLOSE_BANNER_CLICK,\n\n  FARM_UNDER_EARN_TAB_CLICK,\n}\n\nexport const NEED_CHECK_SUBGRAPH_TRANSACTION_TYPES = [\n  'Add liquidity',\n  'Elastic Add liquidity',\n  'Remove liquidity',\n  'Elastic Remove liquidity',\n  'Create pool',\n  'Elastic Create pool',\n]\n\nexport default function useMixpanel(trade?: any | undefined, currencies?: { [field in Field]?: Currency }) {\n  const { chainId, account } = useWeb3React()\n  const { saveGas } = useSwapState()\n  const network = chainId && NETWORKS_INFO[chainId as ChainId].name\n  const inputCurrency = currencies && currencies[Field.INPUT]\n  const outputCurrency = currencies && currencies[Field.OUTPUT]\n  const inputSymbol =\n    inputCurrency && inputCurrency.isNative\n      ? NETWORKS_INFO[(chainId as ChainId) || ChainId.MAINNET].nativeToken.name\n      : inputCurrency?.symbol\n  const outputSymbol =\n    outputCurrency && outputCurrency.isNative\n      ? NETWORKS_INFO[(chainId as ChainId) || ChainId.MAINNET].nativeToken.name\n      : outputCurrency?.symbol\n  const ethPrice = useETHPrice()\n  const dispatch = useDispatch<AppDispatch>()\n  const apolloClient = NETWORKS_INFO[(chainId as ChainId) || (ChainId.MAINNET as ChainId)].classicClient\n  const selectedCampaign = useSelector((state: AppState) => state.campaigns.selectedCampaign)\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const mixpanelHandler = useCallback(\n    (type: MIXPANEL_TYPE, payload?: any) => {\n      if (!account) {\n        return\n      }\n      switch (type) {\n        case MIXPANEL_TYPE.PAGE_VIEWED: {\n          const { page } = payload\n          page && mixpanel.track(page + ' Page Viewed')\n          break\n        }\n        case MIXPANEL_TYPE.WALLET_CONNECTED:\n          mixpanel.register({ wallet_address: account, platform: isMobile ? 'Mobile' : 'Web', network })\n          mixpanel.track('Wallet Connected')\n          break\n        case MIXPANEL_TYPE.SWAP_INITIATED: {\n          mixpanel.track('Swap Initiated', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n            max_return_or_low_gas: saveGas ? 'Lowest Gas' : 'Maximum Return',\n            trade_qty: trade?.inputAmount.toExact(),\n            slippage_setting: allowedSlippage ? allowedSlippage / 100 : 0,\n            price_impact: trade && trade?.priceImpact > 0.01 ? trade?.priceImpact.toFixed(2) : '<0.01',\n          })\n\n          break\n        }\n        case MIXPANEL_TYPE.SWAP_COMPLETED: {\n          const { arbitrary, actual_gas, gas_price, tx_hash } = payload\n          mixpanel.track('Swap Completed', {\n            input_token: arbitrary.inputSymbol,\n            output_token: arbitrary.outputSymbol,\n            actual_gas:\n              ethPrice &&\n              ethPrice.currentPrice &&\n              (\n                actual_gas.toNumber() *\n                parseFloat(formatUnits(gas_price, 18)) *\n                parseFloat(ethPrice.currentPrice)\n              ).toFixed(4),\n            tx_hash: tx_hash,\n            max_return_or_low_gas: arbitrary.saveGas ? 'Lowest Gas' : 'Maximum Return',\n            trade_qty: arbitrary.inputAmount,\n            slippage_setting: arbitrary.slippageSetting,\n            price_impact: arbitrary.priceImpact,\n            gas_price: formatUnits(gas_price, 18),\n            eth_price: ethPrice?.currentPrice,\n            actual_gas_native: actual_gas?.toNumber(),\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ADVANCED_MODE_ON: {\n          mixpanel.track('Advanced Mode Switched On', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ADD_RECIPIENT_CLICKED: {\n          mixpanel.track('Add Recipient Clicked', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.SLIPPAGE_CHANGED: {\n          const { new_slippage } = payload\n          mixpanel.track('Slippage Changed', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n            new_slippage,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.LIVE_CHART_ON_OFF: {\n          const { live_chart_on_or_off } = payload\n          mixpanel.track('Live Chart Turned On/Off (Desktop)', {\n            live_chart_on_or_off: live_chart_on_or_off ? 'On' : 'Off',\n          })\n          break\n        }\n        case MIXPANEL_TYPE.TRADING_ROUTE_ON_OFF: {\n          const { trading_route_on_or_off } = payload\n          mixpanel.track('Trading Route Turned On/Off (Desktop)', {\n            trading_route_on_or_off: trading_route_on_or_off ? 'On' : 'Off',\n          })\n          break\n        }\n        case MIXPANEL_TYPE.LIVE_CHART_ON_MOBILE: {\n          mixpanel.track('Live Chart Turned On (Mobile)')\n          break\n        }\n        case MIXPANEL_TYPE.PRO_CHART_CLICKED: {\n          mixpanel.track('Swap - Pro Live Chart - Pro button clicked on Swap Page')\n          break\n        }\n        case MIXPANEL_TYPE.BASIC_CHART_CLICKED: {\n          mixpanel.track('Swap - Pro Live Chart - Basic button clicked on Swap Page')\n          break\n        }\n        case MIXPANEL_TYPE.TRADING_ROUTE_ON_MOBILE: {\n          mixpanel.track('Trading Route Turned On (Mobile)')\n          break\n        }\n        case MIXPANEL_TYPE.TOKEN_INFO_CHECKED: {\n          mixpanel.track('Token information viewed in Info tab (Swap Page)', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.TOKEN_SWAP_LINK_SHARED: {\n          mixpanel.track('Token Swap Link Shared', {\n            input_token: inputSymbol,\n            output_token: outputSymbol,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.CHAIN_SWITCHED: {\n          const { old_network, new_network } = payload\n          mixpanel.track('Chain Switched', {\n            old_network,\n            new_network,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.CREATE_POOL_INITITATED: {\n          mixpanel.track('Create New Pool Initiated')\n          break\n        }\n        case MIXPANEL_TYPE.CREATE_POOL_COMPLETED: {\n          const { token_1, token_2, amp } = payload\n          mixpanel.track('Create New Pool Completed', {\n            token_1,\n            token_2,\n            amp,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.CREATE_POOL_LINK_SHARED: {\n          const { token_1, token_2 } = payload\n          mixpanel.track('Create New Pool Link Shared', {\n            token_1,\n            token_2,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ADD_LIQUIDITY_INITIATED: {\n          const { token_1, token_2, amp } = payload\n          mixpanel.track('Add Liquidity Initiated', {\n            token_1,\n            token_2,\n            amp,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ADD_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Add Liquidity Completed', { ...payload, tx_hash: payload.tx_hash })\n          break\n        }\n        case MIXPANEL_TYPE.REMOVE_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Remove Liquidity Completed', { ...payload, tx_hash: payload.tx_hash })\n          break\n        }\n        case MIXPANEL_TYPE.REMOVE_LIQUIDITY_INITIATED: {\n          const { token_1, token_2, amp } = payload\n          mixpanel.track('Remove Liquidity Initiated', {\n            token_1,\n            token_2,\n            amp,\n          })\n\n          break\n        }\n        case MIXPANEL_TYPE.MIGRATE_LIQUIDITY_INITIATED: {\n          mixpanel.track('Migrate Liquidity Initiated')\n          break\n        }\n        case MIXPANEL_TYPE.CLAIM_REWARDS_INITIATED: {\n          mixpanel.track('Claim Rewards Initiated')\n          break\n        }\n        case MIXPANEL_TYPE.IMPORT_POOL_INITIATED: {\n          mixpanel.track('Import Pool Initiated')\n\n          break\n        }\n        case MIXPANEL_TYPE.MYPOOLS_STAKED_VIEWED: {\n          mixpanel.track(`My Pools - 'Staked Pools' Tab Viewed`, {})\n\n          break\n        }\n        case MIXPANEL_TYPE.MYPOOLS_POOLS_VIEWED: {\n          mixpanel.track(`My Pools - 'Pools' Tab Viewed`)\n\n          break\n        }\n        case MIXPANEL_TYPE.FARMS_ACTIVE_VIEWED: {\n          mixpanel.track(`Farms - 'Active' Tab Viewed`)\n\n          break\n        }\n        case MIXPANEL_TYPE.FARMS_ENDING_VIEWED: {\n          mixpanel.track(`Farms - 'Ending' Tab Viewed`)\n\n          break\n        }\n        case MIXPANEL_TYPE.FARMS_UPCOMING_VIEWED: {\n          mixpanel.track(`Farms - 'Upcoming' Tab Viewed`)\n\n          break\n        }\n        case MIXPANEL_TYPE.FARMS_MYVESTING_VIEWED: {\n          mixpanel.track(`Farms - 'My Vesting' Tab Viewed`)\n\n          break\n        }\n        case MIXPANEL_TYPE.INDIVIDUAL_REWARD_HARVESTED: {\n          const { reward_tokens_and_amounts } = payload\n          mixpanel.track('Individual Reward Harvested', { reward_tokens_and_qty: reward_tokens_and_amounts })\n\n          break\n        }\n        case MIXPANEL_TYPE.ALL_REWARDS_HARVESTED: {\n          const { reward_tokens_and_amounts } = payload\n\n          mixpanel.track('All Rewards Harvested', { reward_tokens_and_qty: reward_tokens_and_amounts })\n\n          break\n        }\n        case MIXPANEL_TYPE.SINGLE_REWARD_CLAIMED: {\n          const { reward_token, reward_amount } = payload\n\n          mixpanel.track('Single Reward Claimed', { reward_token, reward_qty: reward_amount })\n\n          break\n        }\n        case MIXPANEL_TYPE.ALL_REWARDS_CLAIMED: {\n          const { reward_tokens_and_amounts } = payload\n\n          mixpanel.track('All Rewards Claimed', { reward_tokens_and_qty: reward_tokens_and_amounts })\n          break\n        }\n        case MIXPANEL_TYPE.ABOUT_SWAP_CLICKED: {\n          mixpanel.track('About - Swap Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.ABOUT_START_EARNING_CLICKED: {\n          mixpanel.track('About - Start Earning Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.ABOUT_VIEW_FARMS_CLICKED: {\n          mixpanel.track('About - View Farms Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.ABOUT_CREATE_NEW_POOL_CLICKED: {\n          mixpanel.track('About - Create New Pool Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.ANALYTICS_MENU_CLICKED: {\n          mixpanel.track('Analytics Page Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.CREATE_REFERRAL_CLICKED: {\n          const { referral_commission, input_token, output_token } = payload\n          mixpanel.track('Create Referral Link Clicked', {\n            referral_commission,\n            input_token,\n            output_token,\n            chain: network,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_TRENDING_SOON_CLICKED: {\n          mixpanel.track('Discover - Trending Soon Tab Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_TRENDING_CLICKED: {\n          mixpanel.track('Discover - Trending Tab Clicked')\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_CLICK_SUBSCRIBE_TRENDING_SOON: {\n          mixpanel.track(`Discover - 'Subscribe' clicked on Trending Soon`)\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_CLICK_UNSUBSCRIBE_TRENDING_SOON: {\n          mixpanel.track(`Discover - 'Unsubscribe' clicked on Trending Soon`)\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SUBSCRIBE_TRENDING_SOON_SUCCESS: {\n          mixpanel.track(`Discover - 'Subscribed' Trending Soon successfully`)\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_UNSUBSCRIBE_TRENDING_SOON_SUCCESS: {\n          mixpanel.track(`Discover - 'Unsubscribed' Trending Soon successfully`)\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SWAP_INITIATED: {\n          const { token_name, trending_or_trending_soon, token_on_chain, token_contract_address } = payload\n          mixpanel.track('Discover - Swap Initiated', {\n            token_name,\n            trending_or_trending_soon,\n            token_on_chain,\n            token_contract_address,\n          })\n\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SWAP_DISCOVER_MORE_CLICKED: {\n          mixpanel.track('Discover - \"Discover more\" clicked from Swap Page')\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SWAP_SEE_HERE_CLICKED: {\n          const { trending_token } = payload\n          mixpanel.track('Discover - \"See here\" clicked from Swap page', { trending_token })\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SWAP_BUY_NOW_CLICKED: {\n          const { trending_token } = payload\n          mixpanel.track('Discover - \"Buy Now\" clicked on Swap Page', { trending_token })\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SWAP_MORE_INFO_CLICKED: {\n          const { trending_token } = payload\n          mixpanel.track('Discover - \"More info\" clicked on Swap Page', { trending_token })\n          break\n        }\n        case MIXPANEL_TYPE.DISCOVER_SWAP_BUY_NOW_POPUP_CLICKED: {\n          const { trending_token } = payload\n          mixpanel.track('Discover - \"Buy Now\" clicked in pop-up after \\'More Info\\' on Swap page', {\n            trending_token,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_CREATE_POOL_INITIATED: {\n          mixpanel.track('Elastic Pools - Create New Pool Initiated')\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_CREATE_POOL_COMPLETED: {\n          mixpanel.track('Elastic Pools - Create New Pool Completed', {\n            ...payload,\n            tx_hash: payload.tx_hash,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_MYPOOLS_ELASTIC_POOLS_CLICKED: {\n          mixpanel.track('Elastic Pools - My pools - Click on Elastic Pool')\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_POOLS_ELASTIC_POOLS_CLICKED: {\n          mixpanel.track('Elastic Pools - Click on Elastic Pool')\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_INITIATED: {\n          mixpanel.track('Elastic Pools - Add Liquidity Initiated')\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_IN_LIST_INITIATED: {\n          mixpanel.track('Elastic Pools - Add Liquidity Initiated in Token Pair List', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Pools - Add Liquidity Completed', {\n            ...payload,\n            tx_hash: payload.tx_hash,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_INITIATED: {\n          mixpanel.track('Elastic Pools - My Pools - Remove Liquidity Initiated', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Pools - My Pools - Remove Liquidity Completed', {\n            ...payload,\n            tx_hash: payload.tx_hash,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_INCREASE_LIQUIDITY_INITIATED: {\n          mixpanel.track('Elastic Pools - My Pools - Increase Liquidity Initiated', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_INCREASE_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Pools - My Pools - Increase Liquidity Completed', {\n            ...payload,\n            tx_hash: payload.tx_hash,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_COLLECT_FEES_INITIATED: {\n          mixpanel.track('Elastic Pools - My Pools - Collect Fees Initiated', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_COLLECT_FEES_COMPLETED: {\n          mixpanel.track('Elastic Pools - My Pools - Collect Fees Completed', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_DEPOSIT_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Farms - Deposit Liquidity Completed', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_WITHDRAW_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Farms - Withdraw Liquidity Completed', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_STAKE_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Farms - Stake Liquidity Completed', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_UNSTAKE_LIQUIDITY_COMPLETED: {\n          mixpanel.track('Elastic Farms - Unstake Liquidity Completed', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_INDIVIDUAL_REWARD_HARVESTED: {\n          mixpanel.track('Elastic Farms - Individual Reward Harvested', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_ALLS_REWARD_HARVESTED: {\n          mixpanel.track('Elastic Farms - All Rewards Harvested', payload)\n          break\n        }\n        case MIXPANEL_TYPE.ELASTIC_ALL_REWARD_CLAIMED: {\n          mixpanel.track('Elastic Farms - Reward Claimed', payload)\n          break\n        }\n        case MIXPANEL_TYPE.FAUCET_MENU_CLICKED: {\n          mixpanel.track('Faucet feature - Faucet button clicked on Menu')\n          break\n        }\n        case MIXPANEL_TYPE.FAUCET_REQUEST_INITIATED: {\n          mixpanel.track('Faucet feature - Request faucet Initiated')\n          break\n        }\n        case MIXPANEL_TYPE.FAUCET_REQUEST_COMPLETED: {\n          mixpanel.track('Faucet feature - Request faucet Completed')\n          break\n        }\n        case MIXPANEL_TYPE.CAMPAIGN_SWAP_NOW_CLICKED: {\n          mixpanel.track('Campaign - Enter Trading Contest \"Swap Now\"', payload)\n          break\n        }\n        case MIXPANEL_TYPE.CAMPAIGN_SHARE_TRADING_CONTEST_CLICKED: {\n          mixpanel.track('Campaign - Share Trading Contest share button', payload)\n          break\n        }\n        case MIXPANEL_TYPE.CAMPAIGN_CLAIM_REWARDS_CLICKED: {\n          mixpanel.track('Campaign - Claim Rewards Trading Contest \"Claim Rewards\"')\n          break\n        }\n        case MIXPANEL_TYPE.CAMPAIGN_WALLET_CONNECTED: {\n          setTimeout(() => {\n            mixpanel?.track('Campaign - Wallet Connected', { campaign_name: selectedCampaign?.name })\n          }, 500)\n          break\n        }\n        case MIXPANEL_TYPE.TRANSAK_DOWNLOAD_WALLET_CLICKED: {\n          mixpanel.track('Buy Crypto - Download a wallet \"Download Wallet”')\n          break\n        }\n        case MIXPANEL_TYPE.TRANSAK_BUY_CRYPTO_CLICKED: {\n          mixpanel.track('Buy Crypto - To purchase crypto on Transak \"Buy Now”')\n          break\n        }\n        case MIXPANEL_TYPE.TRANSAK_SWAP_NOW_CLICKED: {\n          mixpanel.track('Buy Crypto - Swap token on KyberSwap \"Swap\" button')\n          break\n        }\n        case MIXPANEL_TYPE.SWAP_BUY_CRYPTO_CLICKED: {\n          mixpanel.track('Buy Crypto - Click on Buy Crypto on KyberSwap')\n          break\n        }\n        case MIXPANEL_TYPE.TUTORIAL_CLICK_START: {\n          mixpanel.track('On-Screen Guide - User click on \"View\" in Setting to view guide')\n          break\n        }\n        case MIXPANEL_TYPE.TUTORIAL_CLICK_DENY: {\n          mixpanel.track('On-Screen Guide - User click on \"Dismiss\" button', { step: payload })\n          break\n        }\n        case MIXPANEL_TYPE.TUTORIAL_CLICK_DONE: {\n          mixpanel.track('On-Screen Guide - User click on \"Done\" button at Step 8')\n          break\n        }\n        case MIXPANEL_TYPE.TUTORIAL_VIEW_VIDEO_SWAP: {\n          mixpanel.track('On-Screen Guide - User click on Step 3 Embedded video')\n          break\n        }\n\n        // type and swap\n        case MIXPANEL_TYPE.TAS_TYPING_KEYWORD: {\n          mixpanel.track('Type and Swap - Typed on the text box', { text: payload })\n          break\n        }\n        case MIXPANEL_TYPE.TAS_SELECT_PAIR: {\n          mixpanel.track('Type and Swap - Selected an option', { option: payload })\n          break\n        }\n        case MIXPANEL_TYPE.TAS_LIKE_PAIR: {\n          mixpanel.track('Type and Swap - Favorite a token pair', payload)\n          break\n        }\n        case MIXPANEL_TYPE.TAS_DISLIKE_PAIR: {\n          mixpanel.track('Type and Swap -  Un-favorite a token pair', payload)\n          break\n        }\n        case MIXPANEL_TYPE.TAS_PRESS_CTRL_K: {\n          mixpanel.track('Type and Swap - User click Ctrl + K (or Cmd + K) or Clicked on the text box', {\n            navigation: payload,\n          })\n          break\n        }\n        case MIXPANEL_TYPE.MANAGE_TOKEN_LISTS_CLICK: {\n          mixpanel.track('Manage Token Lists - User click on \"Manage Token Lists\" button')\n          break\n        }\n        case MIXPANEL_TYPE.MANAGE_TOKEN_LISTS_TAB_CLICK: {\n          mixpanel.track('Manage Token Lists - User click on \"List\" or \"Token\" toggle', payload)\n          break\n        }\n        case MIXPANEL_TYPE.MANAGE_TOKEN_LISTS_ON_OFF_TOGGLE: {\n          mixpanel.track('Manage Token Lists - User clicked On/Off toggle from Token Lists', payload)\n          break\n        }\n        case MIXPANEL_TYPE.BANNER_CLICK: {\n          mixpanel.track('User click on \"Banner\" at swap page')\n          break\n        }\n        case MIXPANEL_TYPE.CLOSE_BANNER_CLICK: {\n          mixpanel.track('User click close \"Banner\" at swap page')\n          break\n        }\n        case MIXPANEL_TYPE.FARM_UNDER_EARN_TAB_CLICK: {\n          mixpanel.track('Farms Page Viewed - under Earn tab')\n          break\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currencies, network, saveGas, account, trade, mixpanel.hasOwnProperty('get_distinct_id'), ethPrice?.currentPrice],\n  )\n  const subgraphMixpanelHandler = useCallback(\n    async (transaction: TransactionDetails) => {\n      const apolloProMMClient = NETWORKS_INFO[(chainId as ChainId) || (ChainId.MAINNET as ChainId)].elasticClient\n\n      const hash = transaction.hash\n      if (!chainId) return\n      switch (transaction.type) {\n        case 'Add liquidity': {\n          const res = await apolloClient.query({\n            query: GET_POOL_VALUES_AFTER_MINTS_SUCCESS,\n            variables: {\n              poolAddress: transaction.arbitrary.poolAddress.toLowerCase(),\n            },\n            fetchPolicy: 'network-only',\n          })\n          if (transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000) {\n            if (\n              !res.data?.pool?.mints ||\n              res.data.pool.mints.every((mint: { id: string }) => !mint.id.startsWith(transaction.hash))\n            )\n              break\n          }\n          const { reserve0, reserve1, reserveUSD } = res.data.pool\n          const mint = res.data.pool.mints.find((mint: { id: string }) => mint.id.startsWith(transaction.hash))\n          mixpanelHandler(MIXPANEL_TYPE.ADD_LIQUIDITY_COMPLETED, {\n            token_1_pool_qty: reserve0,\n            token_2_pool_qty: reserve1,\n            liquidity_USD: reserveUSD,\n            token_1: transaction.arbitrary.token_1,\n            token_2: transaction.arbitrary.token_2,\n            token_1_qty: mint?.amount0,\n            token_2_qty: mint?.amount1,\n            tx_liquidity_USD: mint?.amountUSD,\n            add_liquidity_method: transaction.arbitrary.add_liquidity_method,\n            amp: transaction.arbitrary.amp,\n            tx_hash: hash,\n          })\n          dispatch(checkedSubgraph({ chainId, hash }))\n          break\n        }\n        case 'Elastic Add liquidity': {\n          const res = await apolloProMMClient.query({\n            query: PROMM_GET_POOL_VALUES_AFTER_MINTS_SUCCESS,\n            variables: {\n              poolAddress: transaction.arbitrary.poolAddress.toLowerCase(),\n            },\n            fetchPolicy: 'network-only',\n          })\n          if (transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000) {\n            if (\n              !res.data?.pool?.mints ||\n              res.data.pool.mints.every((mint: { id: string }) => !mint.id.startsWith(transaction.hash))\n            )\n              break\n          }\n          const { totalValueLockedToken0, totalValueLockedToken1, totalValueLockedUSD, feeTier } = res.data.pool\n          const mint = res.data.pool.mints.find((mint: { id: string }) => mint.id.startsWith(transaction.hash))\n          mixpanelHandler(MIXPANEL_TYPE.ELASTIC_ADD_LIQUIDITY_COMPLETED, {\n            token_1_pool_qty: totalValueLockedToken0,\n            token_2_pool_qty: totalValueLockedToken1,\n            liquidity_USD: totalValueLockedUSD,\n            token_1: transaction.arbitrary.token_1,\n            token_2: transaction.arbitrary.token_2,\n            token_1_qty: mint?.amount0,\n            token_2_qty: mint?.amount1,\n            tx_liquidity_USD: mint?.amountUSD,\n            fee_tier: feeTier / ELASTIC_BASE_FEE_UNIT,\n            tx_hash: hash,\n          })\n          dispatch(checkedSubgraph({ chainId, hash }))\n          break\n        }\n        case 'Remove liquidity': {\n          const res = await apolloClient.query({\n            query: GET_POOL_VALUES_AFTER_BURNS_SUCCESS,\n            variables: {\n              poolAddress: transaction.arbitrary.poolAddress.toLowerCase(),\n            },\n            fetchPolicy: 'network-only',\n          })\n\n          if (transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000) {\n            if (\n              !res.data?.pool?.burns ||\n              res.data.pool.burns.every((burn: { id: string }) => !burn.id.startsWith(transaction.hash))\n            )\n              break\n          }\n          const { reserve0, reserve1, reserveUSD } = res.data.pool\n          const burn = res.data.pool.burns.find((burn: { id: string }) => burn.id.startsWith(transaction.hash))\n          mixpanelHandler(MIXPANEL_TYPE.REMOVE_LIQUIDITY_COMPLETED, {\n            token_1_pool_qty: reserve0,\n            token_2_pool_qty: reserve1,\n            liquidity_USD: reserveUSD,\n            token_1: transaction.arbitrary.token_1,\n            token_2: transaction.arbitrary.token_2,\n            token_1_qty: burn?.amount0,\n            token_2_qty: burn?.amount1,\n            tx_liquidity_USD: burn?.amountUSD,\n            remove_liquidity_method: transaction.arbitrary.remove_liquidity_method,\n            amp: transaction.arbitrary.amp,\n            tx_hash: hash,\n          })\n          dispatch(checkedSubgraph({ chainId, hash }))\n          break\n        }\n        case 'Elastic Remove liquidity': {\n          const res = await apolloProMMClient.query({\n            query: PROMM_GET_POOL_VALUES_AFTER_BURNS_SUCCESS,\n            variables: {\n              poolAddress: transaction.arbitrary.poolAddress.toLowerCase(),\n            },\n            fetchPolicy: 'network-only',\n          })\n          if (transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000) {\n            if (\n              !res.data?.pool?.burns ||\n              res.data.pool.burns.every((burn: { id: string }) => !burn.id.startsWith(transaction.hash))\n            )\n              break\n          }\n          const { totalValueLockedToken0, totalValueLockedToken1, totalValueLockedUSD, feeTier } = res.data.pool\n          const burn = res.data.pool.burns.find((burn: { id: string }) => burn.id.startsWith(transaction.hash))\n          mixpanelHandler(MIXPANEL_TYPE.ELASTIC_REMOVE_LIQUIDITY_COMPLETED, {\n            token_1_pool_qty: totalValueLockedToken0,\n            token_2_pool_qty: totalValueLockedToken1,\n            liquidity_USD: totalValueLockedUSD,\n            token_1: transaction.arbitrary.token_1,\n            token_2: transaction.arbitrary.token_2,\n            token_1_qty: burn?.amount0,\n            token_2_qty: burn?.amount1,\n            tx_liquidity_USD: burn?.amountUSD,\n            fee_tier: feeTier / ELASTIC_BASE_FEE_UNIT,\n            tx_hash: hash,\n          })\n          dispatch(checkedSubgraph({ chainId, hash }))\n          break\n        }\n        case 'Create pool': {\n          const res = await apolloClient.query({\n            query: GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS,\n            variables: {\n              transactionHash: hash,\n            },\n            fetchPolicy: 'network-only',\n          })\n          if (transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000) {\n            if (!res.data?.transaction?.mints || res.data.transaction.mints.length === 0) break\n          }\n          const { amount0, amount1, amountUSD } = res.data.transaction.mints[0]\n          mixpanelHandler(MIXPANEL_TYPE.CREATE_POOL_COMPLETED, {\n            token_1: transaction.arbitrary.token_1,\n            token_2: transaction.arbitrary.token_2,\n            amp: transaction.arbitrary.amp,\n            tx_hash: hash,\n            token_1_qty: amount0,\n            token_2_qty: amount1,\n            tx_liquidity_USD: amountUSD,\n          })\n          break\n        }\n        case 'Elastic Create pool': {\n          const res = await apolloProMMClient.query({\n            query: PROMM_GET_MINT_VALUES_AFTER_CREATE_POOL_SUCCESS,\n            variables: {\n              transactionHash: hash,\n            },\n            fetchPolicy: 'network-only',\n          })\n          if (transaction.confirmedTime && new Date().getTime() - transaction.confirmedTime < 3600000) {\n            if (!res.data?.transaction?.mints || res.data.transaction.mints.length === 0) break\n          }\n          const { amount0, amount1, amountUSD } = res.data.transaction.mints[0]\n          mixpanelHandler(MIXPANEL_TYPE.ELASTIC_CREATE_POOL_COMPLETED, {\n            token_1: transaction.arbitrary.token_1,\n            token_2: transaction.arbitrary.token_2,\n            tx_hash: hash,\n            token_1_qty: amount0,\n            token_2_qty: amount1,\n            tx_liquidity_USD: amountUSD,\n          })\n          break\n        }\n        default:\n          break\n      }\n    },\n    [chainId, dispatch, apolloClient, mixpanelHandler],\n  )\n  return { mixpanelHandler, subgraphMixpanelHandler }\n}\n\nexport const useGlobalMixpanelEvents = () => {\n  const { account, chainId } = useWeb3React()\n  const { mixpanelHandler } = useMixpanel()\n  const oldNetwork = usePrevious(chainId)\n  const location = useLocation()\n  const pathName = useMemo(() => {\n    if (location.pathname.split('/')[1] !== 'elastic') return location.pathname.split('/')[1]\n    return 'elastic/' + location.pathname.split('/')[2]\n  }, [location])\n\n  useEffect(() => {\n    if (account && isAddress(account)) {\n      mixpanel.init(process.env.REACT_APP_MIXPANEL_PROJECT_TOKEN || '', {\n        debug: process.env.REACT_APP_MAINNET_ENV === 'staging',\n      })\n      mixpanel.identify(account)\n\n      const getQueryParam = (url: string, param: string) => {\n        // eslint-disable-next-line\n        param = param.replace(/\\[\\[\\]/, '[').replace(/[]]/, ']')\n        const regexS = '[?&]' + param + '=([^&#]*)',\n          regex = new RegExp(regexS),\n          results: any = regex.exec(url)\n        if (results === null || (results && typeof results[1] !== 'string' && results[1].length)) {\n          return ''\n        } else {\n          return decodeURIComponent(results[1]).replace(/\\W/gi, ' ')\n        }\n      }\n      let kw = ''\n      const campaign_keywords = 'utm_source utm_medium utm_campaign utm_content utm_term'.split(' '),\n        params: { [key: string]: any } = {},\n        first_params: { [key: string]: any } = {}\n      let index\n      for (index = 0; index < campaign_keywords.length; ++index) {\n        kw = getQueryParam(document.URL, campaign_keywords[index])\n        if (kw.length) {\n          params[campaign_keywords[index] + ' [last touch]'] = kw\n        }\n      }\n      for (index = 0; index < campaign_keywords.length; ++index) {\n        kw = getQueryParam(document.URL, campaign_keywords[index])\n        if (kw.length) {\n          first_params[campaign_keywords[index] + ' [first touch]'] = kw\n        }\n      }\n      mixpanel.people.set(params)\n      mixpanel.people.set_once(first_params)\n      mixpanel.register_once(params)\n\n      mixpanelHandler(MIXPANEL_TYPE.WALLET_CONNECTED)\n    }\n    return () => {\n      if (mixpanel.hasOwnProperty('persistence')) {\n        mixpanel.reset()\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account])\n\n  useEffect(() => {\n    if (oldNetwork) {\n      mixpanelHandler(MIXPANEL_TYPE.CHAIN_SWITCHED, {\n        new_network: chainId && NETWORKS_INFO[chainId as ChainId].name,\n        old_network: oldNetwork && NETWORKS_INFO[oldNetwork as ChainId].name,\n      })\n      mixpanel.register({ network: chainId && NETWORKS_INFO[chainId as ChainId].name })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chainId])\n\n  useEffect(() => {\n    if (pathName) {\n      let pageName = ''\n      switch (pathName) {\n        case 'swap':\n          pageName = 'Swap'\n          break\n        case 'find':\n          pageName = 'Pool Finder'\n          break\n        case 'pools':\n          pageName = 'Pools'\n          break\n        case 'farms':\n          pageName = 'Farms'\n          break\n        case 'myPools':\n          pageName = 'My Pools'\n          break\n        case 'migration':\n          pageName = 'Migration'\n          break\n        case 'create':\n          pageName = 'Create Pool'\n          break\n        case 'add':\n          pageName = 'Add Liquidity'\n          break\n        case 'remove':\n          pageName = 'Remove Liquidity'\n          break\n        case 'about':\n          pageName = 'About'\n          break\n        case 'referral':\n          pageName = 'Referral'\n          break\n        case 'discover':\n          pageName = 'Discover'\n          break\n        case 'campaigns':\n          pageName = 'Campaign'\n          break\n        case 'elastic/remove':\n          pageName = 'Elastic - Remove Liquidity'\n          break\n        case 'elastic/add':\n          pageName = 'Elastic - Add Liquidity'\n          break\n        case 'elastic/increase':\n          pageName = 'Elastic - Increase Liquidity'\n          break\n        case 'buy-crypto':\n          pageName = 'Buy Crypto'\n          break\n        default:\n          break\n      }\n      pageName && mixpanelHandler(MIXPANEL_TYPE.PAGE_VIEWED, { page: pageName })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathName, account, chainId])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}