{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Interface } from '@ethersproject/abi';\nimport { ChainId } from '@kyberswap/ks-sdk-core';\nimport { Pool, computePoolAddress } from '@kyberswap/ks-sdk-elastic';\nimport { useMemo } from 'react';\nimport ProAmmPoolStateABI from 'constants/abis/v2/ProAmmPoolState.json';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { useActiveWeb3React } from 'hooks';\nimport { useMultipleContractSingleData } from 'state/multicall/hooks';\nexport var PoolState;\n\n(function (PoolState) {\n  PoolState[PoolState[\"LOADING\"] = 0] = \"LOADING\";\n  PoolState[PoolState[\"NOT_EXISTS\"] = 1] = \"NOT_EXISTS\";\n  PoolState[PoolState[\"EXISTS\"] = 2] = \"EXISTS\";\n  PoolState[PoolState[\"INVALID\"] = 3] = \"INVALID\";\n})(PoolState || (PoolState = {}));\n\nvar POOL_STATE_INTERFACE = new Interface(ProAmmPoolStateABI.abi);\nexport function usePools(poolKeys) {\n  _s();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId;\n\n  var transformed = useMemo(function () {\n    return poolKeys.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          currencyA = _ref2[0],\n          currencyB = _ref2[1],\n          feeAmount = _ref2[2];\n\n      if (!chainId || !currencyA || !currencyB || !feeAmount) return null;\n      var tokenA = currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped;\n      var tokenB = currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped;\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return null;\n\n      try {\n        var _ref3 = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA],\n            _ref4 = _slicedToArray(_ref3, 2),\n            token0 = _ref4[0],\n            token1 = _ref4[1];\n\n        return [token0, token1, feeAmount];\n      } catch (e) {\n        return [tokenA, tokenA, feeAmount];\n      }\n    });\n  }, [chainId, poolKeys]);\n  var poolAddresses = useMemo(function () {\n    var proAmmCoreFactoryAddress = chainId && NETWORKS_INFO[chainId].elastic.coreFactory;\n    return transformed.map(function (value) {\n      if (!proAmmCoreFactoryAddress || !value || value[0].equals(value[1])) return undefined;\n\n      try {\n        return computePoolAddress({\n          factoryAddress: proAmmCoreFactoryAddress,\n          tokenA: value[0],\n          tokenB: value[1],\n          fee: value[2],\n          initCodeHashManualOverride: NETWORKS_INFO[chainId || ChainId.MAINNET].elastic.initCodeHash\n        });\n      } catch (e) {\n        return undefined;\n      }\n    });\n  }, [chainId, transformed]);\n  var slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'getPoolState');\n  var liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'getLiquidityState');\n  return useMemo(function () {\n    return poolKeys.map(function (_key, index) {\n      var _transformed$index;\n\n      var _ref5 = (_transformed$index = transformed[index]) !== null && _transformed$index !== void 0 ? _transformed$index : [],\n          _ref6 = _slicedToArray(_ref5, 3),\n          token0 = _ref6[0],\n          token1 = _ref6[1],\n          fee = _ref6[2];\n\n      if (!token0 || !token1 || !fee) return [PoolState.INVALID, null];\n      var _slot0s$index = slot0s[index],\n          slot0 = _slot0s$index.result,\n          slot0Loading = _slot0s$index.loading,\n          slot0Valid = _slot0s$index.valid;\n      var _liquidities$index = liquidities[index],\n          liquidity = _liquidities$index.result,\n          liquidityLoading = _liquidities$index.loading,\n          liquidityValid = _liquidities$index.valid;\n      if (!slot0Valid || !liquidityValid) return [PoolState.INVALID, null];\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null];\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null];\n      if (!slot0.sqrtP || slot0.sqrtP.eq(0)) return [PoolState.NOT_EXISTS, null];\n\n      try {\n        var pool = new Pool(token0, token1, fee, slot0.sqrtP, liquidity.baseL, liquidity.reinvestL, slot0.currentTick);\n        return [PoolState.EXISTS, pool];\n      } catch (error) {\n        console.error('Error when constructing the pool', error);\n        return [PoolState.NOT_EXISTS, null];\n      }\n    });\n  }, [liquidities, poolKeys, slot0s, transformed]);\n}\n\n_s(usePools, \"xGtBE3Ms/zlqjzvlzUA3Oi/ykxg=\", false, function () {\n  return [useActiveWeb3React, useMultipleContractSingleData, useMultipleContractSingleData];\n});\n\nexport function usePool(currencyA, currencyB, feeAmount) {\n  _s2();\n\n  var poolKeys = useMemo(function () {\n    return [[currencyA, currencyB, feeAmount]];\n  }, [currencyA, currencyB, feeAmount]);\n  return usePools(poolKeys)[0];\n}\n\n_s2(usePool, \"SWZisyHR/2zCsVW9gOIswQWEVlM=\", false, function () {\n  return [usePools];\n});","map":{"version":3,"names":["Interface","ChainId","Pool","computePoolAddress","useMemo","ProAmmPoolStateABI","NETWORKS_INFO","useActiveWeb3React","useMultipleContractSingleData","PoolState","POOL_STATE_INTERFACE","abi","usePools","poolKeys","chainId","transformed","map","currencyA","currencyB","feeAmount","tokenA","wrapped","tokenB","equals","sortsBefore","token0","token1","e","poolAddresses","proAmmCoreFactoryAddress","elastic","coreFactory","value","undefined","factoryAddress","fee","initCodeHashManualOverride","MAINNET","initCodeHash","slot0s","liquidities","_key","index","INVALID","slot0","result","slot0Loading","loading","slot0Valid","valid","liquidity","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","sqrtP","eq","pool","baseL","reinvestL","currentTick","EXISTS","error","console","usePool"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/usePools.ts"],"sourcesContent":["import { Interface } from '@ethersproject/abi'\nimport { ChainId, Currency, Token } from '@kyberswap/ks-sdk-core'\nimport { FeeAmount, Pool, computePoolAddress } from '@kyberswap/ks-sdk-elastic'\nimport { useMemo } from 'react'\n\nimport ProAmmPoolStateABI from 'constants/abis/v2/ProAmmPoolState.json'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { useActiveWeb3React } from 'hooks'\nimport { useMultipleContractSingleData } from 'state/multicall/hooks'\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nconst POOL_STATE_INTERFACE = new Interface(ProAmmPoolStateABI.abi)\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][],\n): [PoolState, Pool | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const transformed: ([Token, Token, FeeAmount] | null)[] = useMemo(() => {\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (!chainId || !currencyA || !currencyB || !feeAmount) return null\n\n      const tokenA = currencyA?.wrapped\n      const tokenB = currencyB?.wrapped\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return null\n     try{\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [token0, token1, feeAmount]\n    } catch(e: any){\n       return [tokenA, tokenA, feeAmount]\n    }\n      \n     \n    })\n  }, [chainId, poolKeys])\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const proAmmCoreFactoryAddress = chainId && NETWORKS_INFO[chainId].elastic.coreFactory\n\n    return transformed.map(value => {\n      if (!proAmmCoreFactoryAddress || !value || value[0].equals(value[1])) return undefined\n     try{\n       return computePoolAddress({\n        factoryAddress: proAmmCoreFactoryAddress,\n        tokenA: value[0],\n        tokenB: value[1],\n        fee: value[2],\n        initCodeHashManualOverride: NETWORKS_INFO[chainId || ChainId.MAINNET].elastic.initCodeHash,\n      })\n     }catch(e : any){\n\n      return undefined;\n\n     }\n     \n\n    })\n  }, [chainId, transformed])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'getPoolState')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'getLiquidityState')\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const [token0, token1, fee] = transformed[index] ?? []\n      if (!token0 || !token1 || !fee) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n      if (!slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtP || slot0.sqrtP.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = new Pool(token0, token1, fee, slot0.sqrtP, liquidity.baseL, liquidity.reinvestL, slot0.currentTick)\n\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, transformed])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount],\n  )\n\n  return usePools(poolKeys)[0]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}