{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"value\", \"onUserInput\", \"placeholder\"];\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/NumericalInput/index.tsx\";\nimport { i18n } from \"@lingui/core\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { escapeRegExp } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledInput = styled.input.withConfig({\n  displayName: \"NumericalInput__StyledInput\",\n  componentId: \"sc-c9kik0-0\"\n})([\"color:\", \";width:0;position:relative;font-weight:500;outline:none;border:none;flex:1 1 auto;background-color:\", \";font-size:\", \";text-align:\", \";color:\", \";white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:0px;-webkit-appearance:textfield;\", \";::-webkit-search-decoration{-webkit-appearance:none;}[type='number']{-moz-appearance:textfield;}::-webkit-outer-spin-button,::-webkit-inner-spin-button{-webkit-appearance:none;}::placeholder{color:\", \";}\"], function (_ref) {\n  var error = _ref.error,\n      theme = _ref.theme;\n  return error ? theme.red1 : theme.text;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.buttonBlack;\n}, function (_ref3) {\n  var fontSize = _ref3.fontSize;\n  return fontSize !== null && fontSize !== void 0 ? fontSize : '24px';\n}, function (_ref4) {\n  var align = _ref4.align;\n  return align && align;\n}, function (_ref5) {\n  var disabled = _ref5.disabled,\n      theme = _ref5.theme;\n  return disabled ? theme.disableText : theme.text;\n}, function (_ref6) {\n  var disabled = _ref6.disabled,\n      theme = _ref6.theme;\n  return disabled && \"cursor: not-allowed; opacity: 1; -webkit-text-fill-color: \".concat(theme.border);\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.text4;\n});\n_c = StyledInput;\nvar inputRegex = RegExp(\"^\\\\d*(?:\\\\\\\\[.])?\\\\d*$\"); // match escaped \".\" characters via in a non-capturing group\n\nexport var Input = /*#__PURE__*/React.memo(_c2 = function InnerInput(_ref8) {\n  var value = _ref8.value,\n      onUserInput = _ref8.onUserInput,\n      placeholder = _ref8.placeholder,\n      rest = _objectWithoutProperties(_ref8, _excluded);\n\n  var enforcer = function enforcer(nextUserInput) {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread(_objectSpread({}, rest), {}, {\n    value: value,\n    onChange: function onChange(event) {\n      // replace commas with periods, because dmmexchange exclusively uses period as the decimal separator\n      enforcer(event.target.value.replace(/,/g, '.'));\n    } // universal input options\n    ,\n    inputMode: \"decimal\",\n    title:\n    /*i18n*/\n    i18n._(\"Token Amount\"),\n    autoComplete: \"off\",\n    autoCorrect: \"off\" // text-specific options\n    ,\n    type: \"text\",\n    pattern: \"^[0-9]*[.,]?[0-9]*$\",\n    placeholder: placeholder || '0.0',\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Input;\nexport default Input; // const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"Input$React.memo\");\n$RefreshReg$(_c3, \"Input\");","map":{"version":3,"names":["React","styled","escapeRegExp","StyledInput","input","error","theme","red1","text","buttonBlack","fontSize","align","disabled","disableText","border","text4","inputRegex","RegExp","Input","memo","InnerInput","value","onUserInput","placeholder","rest","enforcer","nextUserInput","test","event","target","replace"],"sources":["/Applications/XAMPP/voxel-interface/src/components/NumericalInput/index.tsx"],"sourcesContent":["import { t } from '@lingui/macro'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.buttonBlack};\n  font-size: ${({ fontSize }) => fontSize ?? '24px'};\n  text-align: ${({ align }) => align && align};\n  color: ${({ disabled, theme }) => (disabled ? theme.disableText : theme.text)};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ${({ disabled, theme }) => disabled && `cursor: not-allowed; opacity: 1; -webkit-text-fill-color: ${theme.border}`};\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because dmmexchange exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t`Token Amount`}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,IAAMC,WAAW,GAAGF,MAAM,CAACG,KAAV;EAAA;EAAA;AAAA,wdACN;EAAA,IAAGC,KAAH,QAAGA,KAAH;EAAA,IAAUC,KAAV,QAAUA,KAAV;EAAA,OAAuBD,KAAK,GAAGC,KAAK,CAACC,IAAT,GAAgBD,KAAK,CAACE,IAAlD;AAAA,CADM,EAQK;EAAA,IAAGF,KAAH,SAAGA,KAAH;EAAA,OAAeA,KAAK,CAACG,WAArB;AAAA,CARL,EASF;EAAA,IAAGC,QAAH,SAAGA,QAAH;EAAA,OAAkBA,QAAlB,aAAkBA,QAAlB,cAAkBA,QAAlB,GAA8B,MAA9B;AAAA,CATE,EAUD;EAAA,IAAGC,KAAH,SAAGA,KAAH;EAAA,OAAeA,KAAK,IAAIA,KAAxB;AAAA,CAVC,EAWN;EAAA,IAAGC,QAAH,SAAGA,QAAH;EAAA,IAAaN,KAAb,SAAaA,KAAb;EAAA,OAA0BM,QAAQ,GAAGN,KAAK,CAACO,WAAT,GAAuBP,KAAK,CAACE,IAA/D;AAAA,CAXM,EAkBb;EAAA,IAAGI,QAAH,SAAGA,QAAH;EAAA,IAAaN,KAAb,SAAaA,KAAb;EAAA,OAAyBM,QAAQ,wEAAiEN,KAAK,CAACQ,MAAvE,CAAjC;AAAA,CAlBa,EAkCJ;EAAA,IAAGR,KAAH,SAAGA,KAAH;EAAA,OAAeA,KAAK,CAACS,KAArB;AAAA,CAlCI,CAAjB;KAAMZ,W;AAsCN,IAAMa,UAAU,GAAGC,MAAM,0BAAzB,C,CAAoD;;AAEpD,OAAO,IAAMC,KAAK,gBAAGlB,KAAK,CAACmB,IAAN,OAAW,SAASC,UAAT,QAWwC;EAAA,IAVtEC,KAUsE,SAVtEA,KAUsE;EAAA,IATtEC,WASsE,SATtEA,WASsE;EAAA,IARtEC,WAQsE,SARtEA,WAQsE;EAAA,IAPnEC,IAOmE;;EACtE,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,aAAD,EAA2B;IAC1C,IAAIA,aAAa,KAAK,EAAlB,IAAwBV,UAAU,CAACW,IAAX,CAAgBzB,YAAY,CAACwB,aAAD,CAA5B,CAA5B,EAA0E;MACxEJ,WAAW,CAACI,aAAD,CAAX;IACD;EACF,CAJD;;EAMA,oBACE,QAAC,WAAD,kCACMF,IADN;IAEE,KAAK,EAAEH,KAFT;IAGE,QAAQ,EAAE,kBAAAO,KAAK,EAAI;MACjB;MACAH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaR,KAAb,CAAmBS,OAAnB,CAA2B,IAA3B,EAAiC,GAAjC,CAAD,CAAR;IACD,CANH,CAOE;IAPF;IAQE,SAAS,EAAC,SARZ;IASE,KAAK;IAAA;IAAE,sBATT;IAUE,YAAY,EAAC,KAVf;IAWE,WAAW,EAAC,KAXd,CAYE;IAZF;IAaE,IAAI,EAAC,MAbP;IAcE,OAAO,EAAC,qBAdV;IAeE,WAAW,EAAEP,WAAW,IAAI,KAf9B;IAgBE,SAAS,EAAE,CAhBb;IAiBE,SAAS,EAAE,EAjBb;IAkBE,UAAU,EAAC;EAlBb;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAxCoB,CAAd;MAAML,K;AA0Cb,eAAeA,KAAf,C,CAEA"},"metadata":{},"sourceType":"module"}