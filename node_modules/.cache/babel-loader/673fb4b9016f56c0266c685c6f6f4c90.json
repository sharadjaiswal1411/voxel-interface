{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/Vesting/ScheduleCard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { BigNumber } from 'ethers';\nimport React from 'react';\nimport { ZERO_ADDRESS } from 'constants/index';\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { calculateGasMargin } from 'utils';\nimport { fixedFormatting } from 'utils/formatBalance';\nimport VestingCard from './VestingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ScheduleCard = function ScheduleCard(_ref) {\n  _s();\n\n  var schedules = _ref.schedules;\n  var endTime = schedules.reduce(function (max, schedule) {\n    return max < schedule.endTime ? schedule.endTime : max;\n  }, 0);\n  var currentTimestamp = Math.floor(+new Date() / 1000);\n  var remainTime = endTime - currentTimestamp;\n\n  var _useMixpanel = useMixpanel(),\n      mixpanelHandler = _useMixpanel.mixpanelHandler;\n\n  var info = schedules.reduce(function (result, schedule, index) {\n    var address = schedule.token.isNative ? ZERO_ADDRESS : schedule.token.address;\n\n    if (!result[address]) {\n      result[address] = {\n        vestableIndexes: [],\n        vestableAmount: BigNumber.from(0),\n\n        /* fullyIndexes: [], */\n\n        /* fullyAmount: BigNumber.from(0), */\n        totalAmount: BigNumber.from(0),\n        unlockedAmount: BigNumber.from(0),\n        vestedAmount: BigNumber.from(0),\n        token: schedule.token,\n        tokenPrice: schedule.tokenPrice\n      };\n    }\n\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule.quantity));\n    result[address].vestedAmount = result[address].vestedAmount.add(BigNumber.from(schedule.vestedQuantity));\n    /**\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\n     */\n\n    var fullyVestedAlready = schedule.quantity.sub(schedule.vestedQuantity).isZero();\n    var isEnd = currentTimestamp > schedule.endTime;\n    var timePeriod = BigNumber.from(schedule.endTime - schedule.startTime);\n    var unlockedAmount = isEnd ? schedule.quantity : schedule.quantity.mul(BigNumber.from(currentTimestamp).sub(BigNumber.from(schedule.startTime))).div(timePeriod);\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount);\n    var vestableAmount = unlockedAmount.sub(BigNumber.from(schedule.vestedQuantity)); // vestableAmount = unlock - vestedQuanitty\n\n    result[address].vestableAmount = result[address].vestableAmount.add(vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount);\n\n    if (!fullyVestedAlready) {\n      result[address].vestableIndexes.push(schedule.index);\n    }\n    /* if (!fullyVestedAlready && isEnd) { */\n\n    /*   result[address].fullyIndexes.push(schedule.index) */\n\n    /*   result[address].fullyAmount = result[address].fullyAmount.add(schedule.quantity) */\n\n    /* } */\n\n\n    return result;\n  }, {});\n  var addTransactionWithType = useTransactionAdder();\n\n  var handleClaimAll = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var contract, tokens, indices, estimateGas, tx;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              contract = schedules === null || schedules === void 0 ? void 0 : schedules[0].contract;\n\n              if (contract) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              tokens = Object.keys(info);\n              indices = tokens.map(function (key) {\n                return info[key].vestableIndexes;\n              });\n              tokens = tokens.filter(function (_token, index) {\n                return !!indices[index].length;\n              });\n              indices = indices.filter(function (ind) {\n                return !!ind.length;\n              });\n              _context.next = 9;\n              return contract.estimateGas.vestScheduleForMultipleTokensAtIndices(tokens, indices);\n\n            case 9:\n              estimateGas = _context.sent;\n              _context.next = 12;\n              return contract.vestScheduleForMultipleTokensAtIndices(tokens, indices, {\n                gasLimit: calculateGasMargin(estimateGas)\n              });\n\n            case 12:\n              tx = _context.sent;\n\n              if (tx) {\n                addTransactionWithType(tx, {\n                  type: 'Claim',\n                  summary: 'all rewards'\n                });\n                mixpanelHandler(MIXPANEL_TYPE.ELASTIC_ALL_REWARD_CLAIMED, {\n                  reward_tokens_and_qty: Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(info).map(function (k) {\n                    return _defineProperty({}, k, fixedFormatting(info[k].vestableAmount, info[k].token.decimals));\n                  }))))\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClaimAll() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(VestingCard, {\n    info: info,\n    endTime: endTime,\n    remainTime: remainTime,\n    onClaimAll: handleClaimAll\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(ScheduleCard, \"qFxaaNy/AmMHJH2cp2n5MS0KBcc=\", false, function () {\n  return [useMixpanel, useTransactionAdder];\n});\n\n_c = ScheduleCard;\nexport default ScheduleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScheduleCard\");","map":{"version":3,"names":["BigNumber","React","ZERO_ADDRESS","useMixpanel","MIXPANEL_TYPE","useTransactionAdder","calculateGasMargin","fixedFormatting","VestingCard","ScheduleCard","schedules","endTime","reduce","max","schedule","currentTimestamp","Math","floor","Date","remainTime","mixpanelHandler","info","result","index","address","token","isNative","vestableIndexes","vestableAmount","from","totalAmount","unlockedAmount","vestedAmount","tokenPrice","add","quantity","vestedQuantity","fullyVestedAlready","sub","isZero","isEnd","timePeriod","startTime","mul","div","isNegative","push","addTransactionWithType","handleClaimAll","contract","tokens","Object","keys","indices","map","key","filter","_token","length","ind","estimateGas","vestScheduleForMultipleTokensAtIndices","gasLimit","tx","type","summary","ELASTIC_ALL_REWARD_CLAIMED","reward_tokens_and_qty","assign","k","decimals"],"sources":["/Applications/XAMPP/voxel-interface/src/components/Vesting/ScheduleCard.tsx"],"sourcesContent":["import { Token } from '@kyberswap/ks-sdk-core'\nimport { BigNumber } from 'ethers'\nimport React from 'react'\n\nimport { ZERO_ADDRESS } from 'constants/index'\nimport useMixpanel, { MIXPANEL_TYPE } from 'hooks/useMixpanel'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { Schedule } from 'state/vesting/hooks'\nimport { calculateGasMargin } from 'utils'\nimport { fixedFormatting } from 'utils/formatBalance'\n\nimport VestingCard from './VestingCard'\n\nconst ScheduleCard = ({ schedules }: { schedules: Schedule[] }) => {\n  const endTime = schedules.reduce((max, schedule) => (max < schedule.endTime ? schedule.endTime : max), 0)\n  const currentTimestamp = Math.floor(+new Date() / 1000)\n  const remainTime = endTime - currentTimestamp\n  const { mixpanelHandler } = useMixpanel()\n\n  const info = schedules.reduce<{\n    [tokenAddress: string]: {\n      vestableIndexes: number[]\n      vestableAmount: BigNumber\n      /* fullyIndexes: number[] */\n      /* fullyAmount: BigNumber */\n      totalAmount: BigNumber\n      unlockedAmount: BigNumber\n      vestedAmount: BigNumber\n      token: Token\n      tokenPrice: number\n    }\n  }>((result, schedule, index) => {\n    const address = (schedule.token.isNative ? ZERO_ADDRESS : schedule.token.address) as string\n\n    if (!result[address]) {\n      result[address] = {\n        vestableIndexes: [],\n        vestableAmount: BigNumber.from(0),\n        /* fullyIndexes: [], */\n        /* fullyAmount: BigNumber.from(0), */\n        totalAmount: BigNumber.from(0),\n        unlockedAmount: BigNumber.from(0),\n        vestedAmount: BigNumber.from(0),\n        token: schedule.token,\n        tokenPrice: schedule.tokenPrice,\n      }\n    }\n\n    result[address].totalAmount = result[address].totalAmount.add(BigNumber.from(schedule.quantity))\n    result[address].vestedAmount = result[address].vestedAmount.add(BigNumber.from(schedule.vestedQuantity))\n    /**\n     * fullyVestedAlready = schedule.quantity - schedule.vestedQuantity\n     */\n    const fullyVestedAlready = schedule.quantity.sub(schedule.vestedQuantity).isZero()\n    const isEnd = currentTimestamp > schedule.endTime\n\n    const timePeriod = BigNumber.from(schedule.endTime - schedule.startTime)\n\n    const unlockedAmount = isEnd\n      ? schedule.quantity\n      : schedule.quantity.mul(BigNumber.from(currentTimestamp).sub(BigNumber.from(schedule.startTime))).div(timePeriod)\n\n    result[address].unlockedAmount = result[address].unlockedAmount.add(unlockedAmount)\n    const vestableAmount = unlockedAmount.sub(BigNumber.from(schedule.vestedQuantity)) // vestableAmount = unlock - vestedQuanitty\n\n    result[address].vestableAmount = result[address].vestableAmount.add(\n      vestableAmount.isNegative() ? BigNumber.from(0) : vestableAmount,\n    )\n\n    if (!fullyVestedAlready) {\n      result[address].vestableIndexes.push(schedule.index)\n    }\n\n    /* if (!fullyVestedAlready && isEnd) { */\n    /*   result[address].fullyIndexes.push(schedule.index) */\n    /*   result[address].fullyAmount = result[address].fullyAmount.add(schedule.quantity) */\n    /* } */\n\n    return result\n  }, {})\n\n  const addTransactionWithType = useTransactionAdder()\n\n  const handleClaimAll = async () => {\n    const contract = schedules?.[0].contract\n    if (!contract) return\n    let tokens = Object.keys(info)\n    let indices = tokens.map(key => info[key].vestableIndexes)\n\n    tokens = tokens.filter((_token, index) => !!indices[index].length)\n    indices = indices.filter(ind => !!ind.length)\n\n    const estimateGas = await contract.estimateGas.vestScheduleForMultipleTokensAtIndices(tokens, indices)\n    const tx = await contract.vestScheduleForMultipleTokensAtIndices(tokens, indices, {\n      gasLimit: calculateGasMargin(estimateGas),\n    })\n    if (tx) {\n      addTransactionWithType(tx, { type: 'Claim', summary: 'all rewards' })\n      mixpanelHandler(MIXPANEL_TYPE.ELASTIC_ALL_REWARD_CLAIMED, {\n        reward_tokens_and_qty: Object.assign(\n          {},\n          ...Object.keys(info).map(k => {\n            return { [k]: fixedFormatting(info[k].vestableAmount, info[k].token.decimals) }\n          }),\n        ),\n      })\n    }\n  }\n\n  return <VestingCard info={info} endTime={endTime} remainTime={remainTime} onClaimAll={handleClaimAll} />\n}\n\nexport default ScheduleCard\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}