{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar _ = require(\"lodash\");\n\nvar set_1 = require(\"../abstract_data_types/types/set\");\n\nvar constants_1 = require(\"../utils/constants\");\n\nvar tuple_1 = require(\"./tuple\");\n\nvar MethodDataType =\n/** @class */\nfunction (_super) {\n  __extends(MethodDataType, _super);\n\n  function MethodDataType(abi, dataTypeFactory) {\n    var _this = this;\n\n    var methodDataItem = {\n      type: 'method',\n      name: abi.name,\n      components: abi.inputs\n    };\n    _this = _super.call(this, methodDataItem, dataTypeFactory) || this;\n    _this._methodSignature = _this._computeSignature();\n    _this._methodSelector = _this._computeSelector();\n    var returnDataItem = {\n      type: 'tuple',\n      name: abi.name,\n      components: abi.outputs\n    };\n    _this._returnDataType = new tuple_1.TupleDataType(returnDataItem, _this.getFactory());\n    return _this;\n  }\n\n  MethodDataType.prototype.encode = function (value, rules) {\n    var calldata = _super.prototype.encode.call(this, value, rules, this._methodSelector);\n\n    return calldata;\n  };\n\n  MethodDataType.prototype.decode = function (calldata, rules) {\n    var value = _super.prototype.decode.call(this, calldata, rules, this._methodSelector);\n\n    return value;\n  };\n\n  MethodDataType.prototype.strictDecode = function (calldata, rules) {\n    var value = _super.prototype.decode.call(this, calldata, rules, this._methodSelector);\n\n    var valueAsArray = _.isObject(value) ? _.values(value) : [value];\n\n    switch (valueAsArray.length) {\n      case 0:\n        return undefined;\n\n      case 1:\n        return valueAsArray[0];\n\n      default:\n        return valueAsArray;\n    }\n  };\n\n  MethodDataType.prototype.encodeReturnValues = function (value, rules) {\n    var returnData = this._returnDataType.encode(value, rules);\n\n    return returnData;\n  };\n\n  MethodDataType.prototype.decodeReturnValues = function (returndata, rules) {\n    var returnValues = this._returnDataType.decode(returndata, rules);\n\n    return returnValues;\n  };\n\n  MethodDataType.prototype.strictDecodeReturnValue = function (returndata, rules) {\n    var returnValues = this._returnDataType.decode(returndata, rules);\n\n    var returnValuesAsArray = _.isObject(returnValues) ? _.values(returnValues) : [returnValues];\n\n    switch (returnValuesAsArray.length) {\n      case 0:\n        return undefined;\n\n      case 1:\n        return returnValuesAsArray[0];\n\n      default:\n        return returnValuesAsArray;\n    }\n  };\n\n  MethodDataType.prototype.getSignatureType = function () {\n    return this._methodSignature;\n  };\n\n  MethodDataType.prototype.getSelector = function () {\n    return this._methodSelector;\n  };\n\n  MethodDataType.prototype.getReturnValueDataItem = function () {\n    var returnValueDataItem = this._returnDataType.getDataItem();\n\n    return returnValueDataItem;\n  };\n\n  MethodDataType.prototype._computeSignature = function () {\n    var memberSignature = this._computeSignatureOfMembers();\n\n    var methodSignature = \"\" + this.getDataItem().name + memberSignature;\n    return methodSignature;\n  };\n\n  MethodDataType.prototype._computeSelector = function () {\n    var signature = this._computeSignature();\n\n    var selector = ethUtil.bufferToHex(ethUtil.toBuffer(ethUtil.sha3(signature).slice(constants_1.constants.HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA, constants_1.constants.HEX_SELECTOR_LENGTH_IN_BYTES)));\n    return selector;\n  };\n\n  return MethodDataType;\n}(set_1.AbstractSetDataType);\n\nexports.MethodDataType = MethodDataType;","map":null,"metadata":{},"sourceType":"script"}