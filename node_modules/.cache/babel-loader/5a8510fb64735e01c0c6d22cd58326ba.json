{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/swap/ConfirmSwapModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { i18n } from \"@lingui/core\";\nimport React, { useCallback, useMemo } from 'react';\nimport { useCurrencyConvertedToNative } from 'utils/dmm';\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from '../TransactionConfirmationModal';\nimport SwapModalFooter from './SwapModalFooter';\nimport SwapModalHeader from './SwapModalHeader';\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction tradeMeaningfullyDiffers(tradeA, tradeB) {\n  return tradeA.tradeType !== tradeB.tradeType || !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) || !tradeA.inputAmount.equalTo(tradeB.inputAmount) || !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency) || !tradeA.outputAmount.equalTo(tradeB.outputAmount);\n}\n\nexport default function ConfirmSwapModal(_ref) {\n  _s();\n\n  var _this = this,\n      _trade$inputAmount,\n      _trade$outputAmount,\n      _trade$inputAmount2,\n      _trade$outputAmount2;\n\n  var trade = _ref.trade,\n      originalTrade = _ref.originalTrade,\n      onAcceptChanges = _ref.onAcceptChanges,\n      allowedSlippage = _ref.allowedSlippage,\n      onConfirm = _ref.onConfirm,\n      onDismiss = _ref.onDismiss,\n      recipient = _ref.recipient,\n      swapErrorMessage = _ref.swapErrorMessage,\n      isOpen = _ref.isOpen,\n      attemptingTxn = _ref.attemptingTxn,\n      txHash = _ref.txHash,\n      tokenAddToMetaMask = _ref.tokenAddToMetaMask,\n      showTxBanner = _ref.showTxBanner;\n  var showAcceptChanges = useMemo(function () {\n    return Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade));\n  }, [originalTrade, trade]);\n  var modalHeader = useCallback(function () {\n    return trade ? /*#__PURE__*/_jsxDEV(SwapModalHeader, {\n      trade: trade,\n      allowedSlippage: allowedSlippage,\n      recipient: recipient,\n      showAcceptChanges: showAcceptChanges,\n      onAcceptChanges: onAcceptChanges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this) : null;\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade]);\n  var modalBottom = useCallback(function () {\n    return trade ? /*#__PURE__*/_jsxDEV(SwapModalFooter, {\n      onConfirm: onConfirm,\n      trade: trade,\n      disabledConfirm: showAcceptChanges,\n      swapErrorMessage: swapErrorMessage,\n      allowedSlippage: allowedSlippage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this) : null;\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade]);\n  var nativeInput = useCurrencyConvertedToNative(trade === null || trade === void 0 ? void 0 : (_trade$inputAmount = trade.inputAmount) === null || _trade$inputAmount === void 0 ? void 0 : _trade$inputAmount.currency);\n  var nativeOutput = useCurrencyConvertedToNative(trade === null || trade === void 0 ? void 0 : (_trade$outputAmount = trade.outputAmount) === null || _trade$outputAmount === void 0 ? void 0 : _trade$outputAmount.currency); // text to show while loading\n\n  var pendingText = \"Swapping \".concat(trade === null || trade === void 0 ? void 0 : (_trade$inputAmount2 = trade.inputAmount) === null || _trade$inputAmount2 === void 0 ? void 0 : _trade$inputAmount2.toSignificant(6), \" \").concat(nativeInput === null || nativeInput === void 0 ? void 0 : nativeInput.symbol, \" for \").concat(trade === null || trade === void 0 ? void 0 : (_trade$outputAmount2 = trade.outputAmount) === null || _trade$outputAmount2 === void 0 ? void 0 : _trade$outputAmount2.toSignificant(6), \" \").concat(nativeOutput === null || nativeOutput === void 0 ? void 0 : nativeOutput.symbol);\n  var confirmationContent = useCallback(function () {\n    return swapErrorMessage ? /*#__PURE__*/_jsxDEV(TransactionErrorContent, {\n      onDismiss: onDismiss,\n      message: swapErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n      title:\n      /*i18n*/\n      i18n._(\"Confirm Swap\"),\n      onDismiss: onDismiss,\n      topContent: modalHeader,\n      bottomContent: modalBottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, _this);\n  }, [onDismiss, modalBottom, modalHeader, swapErrorMessage]);\n  return /*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: confirmationContent,\n    pendingText: pendingText,\n    tokenAddToMetaMask: tokenAddToMetaMask,\n    showTxBanner: showTxBanner\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmSwapModal, \"IcP8YTUV2P3Yxkyr8XK+iNANLVU=\", false, function () {\n  return [useCurrencyConvertedToNative, useCurrencyConvertedToNative];\n});\n\n_c = ConfirmSwapModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmSwapModal\");","map":{"version":3,"names":["React","useCallback","useMemo","useCurrencyConvertedToNative","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","SwapModalFooter","SwapModalHeader","tradeMeaningfullyDiffers","tradeA","tradeB","tradeType","inputAmount","currency","equals","equalTo","outputAmount","ConfirmSwapModal","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","recipient","swapErrorMessage","isOpen","attemptingTxn","txHash","tokenAddToMetaMask","showTxBanner","showAcceptChanges","Boolean","modalHeader","modalBottom","nativeInput","nativeOutput","pendingText","toSignificant","symbol","confirmationContent"],"sources":["/Applications/XAMPP/voxel-interface/src/components/swap/ConfirmSwapModal.tsx"],"sourcesContent":["import { Currency } from '@kyberswap/ks-sdk-core'\nimport { t } from '@lingui/macro'\nimport React, { useCallback, useMemo } from 'react'\n\nimport { AnyTrade } from 'hooks/useSwapCallback'\nimport { useCurrencyConvertedToNative } from 'utils/dmm'\n\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: AnyTrade, tradeB: AnyTrade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !tradeA.outputAmount.currency.equals(tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  tokenAddToMetaMask,\n  showTxBanner,\n}: {\n  isOpen: boolean\n  trade: AnyTrade | undefined\n  originalTrade: AnyTrade | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: number\n  tokenAddToMetaMask?: Currency | undefined\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  onDismiss: () => void\n  showTxBanner?: boolean\n}) {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  const nativeInput = useCurrencyConvertedToNative(trade?.inputAmount?.currency)\n  const nativeOutput = useCurrencyConvertedToNative(trade?.outputAmount?.currency)\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\n    nativeInput?.symbol\n  } for ${trade?.outputAmount?.toSignificant(6)} ${nativeOutput?.symbol}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title={t`Confirm Swap`}\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      tokenAddToMetaMask={tokenAddToMetaMask}\n      showTxBanner={showTxBanner}\n    />\n  )\n}\n"],"mappings":";;;;AAEA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AAGA,SAASC,4BAAT,QAA6C,WAA7C;AAEA,OAAOC,4BAAP,IACEC,wBADF,EAEEC,uBAFF,QAGO,iCAHP;AAIA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,wBAAT,CAAkCC,MAAlC,EAAoDC,MAApD,EAA+E;EAC7E,OACED,MAAM,CAACE,SAAP,KAAqBD,MAAM,CAACC,SAA5B,IACA,CAACF,MAAM,CAACG,WAAP,CAAmBC,QAAnB,CAA4BC,MAA5B,CAAmCJ,MAAM,CAACE,WAAP,CAAmBC,QAAtD,CADD,IAEA,CAACJ,MAAM,CAACG,WAAP,CAAmBG,OAAnB,CAA2BL,MAAM,CAACE,WAAlC,CAFD,IAGA,CAACH,MAAM,CAACO,YAAP,CAAoBH,QAApB,CAA6BC,MAA7B,CAAoCJ,MAAM,CAACM,YAAP,CAAoBH,QAAxD,CAHD,IAIA,CAACJ,MAAM,CAACO,YAAP,CAAoBD,OAApB,CAA4BL,MAAM,CAACM,YAAnC,CALH;AAOD;;AAED,eAAe,SAASC,gBAAT,OA4BZ;EAAA;;EAAA;EAAA;EAAA;EAAA;EAAA;;EAAA,IA3BDC,KA2BC,QA3BDA,KA2BC;EAAA,IA1BDC,aA0BC,QA1BDA,aA0BC;EAAA,IAzBDC,eAyBC,QAzBDA,eAyBC;EAAA,IAxBDC,eAwBC,QAxBDA,eAwBC;EAAA,IAvBDC,SAuBC,QAvBDA,SAuBC;EAAA,IAtBDC,SAsBC,QAtBDA,SAsBC;EAAA,IArBDC,SAqBC,QArBDA,SAqBC;EAAA,IApBDC,gBAoBC,QApBDA,gBAoBC;EAAA,IAnBDC,MAmBC,QAnBDA,MAmBC;EAAA,IAlBDC,aAkBC,QAlBDA,aAkBC;EAAA,IAjBDC,MAiBC,QAjBDA,MAiBC;EAAA,IAhBDC,kBAgBC,QAhBDA,kBAgBC;EAAA,IAfDC,YAeC,QAfDA,YAeC;EACD,IAAMC,iBAAiB,GAAG9B,OAAO,CAC/B;IAAA,OAAM+B,OAAO,CAACd,KAAK,IAAIC,aAAT,IAA0BX,wBAAwB,CAACU,KAAD,EAAQC,aAAR,CAAnD,CAAb;EAAA,CAD+B,EAE/B,CAACA,aAAD,EAAgBD,KAAhB,CAF+B,CAAjC;EAKA,IAAMe,WAAW,GAAGjC,WAAW,CAAC,YAAM;IACpC,OAAOkB,KAAK,gBACV,QAAC,eAAD;MACE,KAAK,EAAEA,KADT;MAEE,eAAe,EAAEG,eAFnB;MAGE,SAAS,EAAEG,SAHb;MAIE,iBAAiB,EAAEO,iBAJrB;MAKE,eAAe,EAAEX;IALnB;MAAA;MAAA;MAAA;IAAA,SADU,GAQR,IARJ;EASD,CAV8B,EAU5B,CAACC,eAAD,EAAkBD,eAAlB,EAAmCI,SAAnC,EAA8CO,iBAA9C,EAAiEb,KAAjE,CAV4B,CAA/B;EAYA,IAAMgB,WAAW,GAAGlC,WAAW,CAAC,YAAM;IACpC,OAAOkB,KAAK,gBACV,QAAC,eAAD;MACE,SAAS,EAAEI,SADb;MAEE,KAAK,EAAEJ,KAFT;MAGE,eAAe,EAAEa,iBAHnB;MAIE,gBAAgB,EAAEN,gBAJpB;MAKE,eAAe,EAAEJ;IALnB;MAAA;MAAA;MAAA;IAAA,SADU,GAQR,IARJ;EASD,CAV8B,EAU5B,CAACA,eAAD,EAAkBC,SAAlB,EAA6BS,iBAA7B,EAAgDN,gBAAhD,EAAkEP,KAAlE,CAV4B,CAA/B;EAYA,IAAMiB,WAAW,GAAGjC,4BAA4B,CAACgB,KAAD,aAACA,KAAD,6CAACA,KAAK,CAAEN,WAAR,uDAAC,mBAAoBC,QAArB,CAAhD;EACA,IAAMuB,YAAY,GAAGlC,4BAA4B,CAACgB,KAAD,aAACA,KAAD,8CAACA,KAAK,CAAEF,YAAR,wDAAC,oBAAqBH,QAAtB,CAAjD,CA/BC,CAgCD;;EACA,IAAMwB,WAAW,sBAAenB,KAAf,aAAeA,KAAf,8CAAeA,KAAK,CAAEN,WAAtB,wDAAe,oBAAoB0B,aAApB,CAAkC,CAAlC,CAAf,cACfH,WADe,aACfA,WADe,uBACfA,WAAW,CAAEI,MADE,kBAETrB,KAFS,aAETA,KAFS,+CAETA,KAAK,CAAEF,YAFE,yDAET,qBAAqBsB,aAArB,CAAmC,CAAnC,CAFS,cAEgCF,YAFhC,aAEgCA,YAFhC,uBAEgCA,YAAY,CAAEG,MAF9C,CAAjB;EAIA,IAAMC,mBAAmB,GAAGxC,WAAW,CACrC;IAAA,OACEyB,gBAAgB,gBACd,QAAC,uBAAD;MAAyB,SAAS,EAAEF,SAApC;MAA+C,OAAO,EAAEE;IAAxD;MAAA;MAAA;MAAA;IAAA,SADc,gBAGd,QAAC,wBAAD;MACE,KAAK;MAAA;MAAE,sBADT;MAEE,SAAS,EAAEF,SAFb;MAGE,UAAU,EAAEU,WAHd;MAIE,aAAa,EAAEC;IAJjB;MAAA;MAAA;MAAA;IAAA,SAJJ;EAAA,CADqC,EAYrC,CAACX,SAAD,EAAYW,WAAZ,EAAyBD,WAAzB,EAAsCR,gBAAtC,CAZqC,CAAvC;EAeA,oBACE,QAAC,4BAAD;IACE,MAAM,EAAEC,MADV;IAEE,SAAS,EAAEH,SAFb;IAGE,aAAa,EAAEI,aAHjB;IAIE,IAAI,EAAEC,MAJR;IAKE,OAAO,EAAEY,mBALX;IAME,WAAW,EAAEH,WANf;IAOE,kBAAkB,EAAER,kBAPtB;IAQE,YAAY,EAAEC;EARhB;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA5FuBb,gB;UA0DFf,4B,EACCA,4B;;;KA3DCe,gB"},"metadata":{},"sourceType":"module"}