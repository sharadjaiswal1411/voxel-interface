{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/Pagination/PaginationInputOnMobile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Text } from 'rebass';\nimport styled from 'styled-components';\nimport useTheme from 'hooks/useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar isValidInteger = function isValidInteger(s) {\n  var numberRegex = /^\\d+$/;\n  return !!s.match(numberRegex);\n}; // This is to make the input auto-resize on typing\n\n\nvar getInputWidth = function getInputWidth(n) {\n  var minWidth = 48;\n  /* px */\n\n  var maxWidth = 120;\n  /* px */\n\n  var minChar = 3;\n  var pxPerChar = 8;\n  return Math.min(minWidth + Math.max(n - minChar, 0) * pxPerChar, maxWidth);\n};\n\nexport var Input = styled.input.withConfig({\n  displayName: \"PaginationInputOnMobile__Input\",\n  componentId: \"sc-vqr1s6-0\"\n})([\"outline:none;border:none;background-color:\", \";color:\", \";overflow:hidden;text-overflow:ellipsis;font-weight:500;font-size:12px;line-height:16px;text-align:center;border-radius:20px;padding:8px 12px;::placeholder{color:\", \";}-webkit-appearance:textfield;::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-outer-spin-button,::-webkit-inner-spin-button{-webkit-appearance:none;}\"], function (_ref) {\n  var theme = _ref.theme;\n  return theme.buttonBlack;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.primary;\n}, function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.subText;\n});\n_c = Input;\n\nvar PaginationInputOnMobile = function PaginationInputOnMobile(_ref4) {\n  _s();\n\n  var className = _ref4.className,\n      page = _ref4.page,\n      lastPage = _ref4.lastPage,\n      setPage = _ref4.setPage;\n  var theme = useTheme();\n\n  var _useState = useState(String(page)),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var inputRef = useRef(null);\n  var minCharLength = Math.max(inputValue.length, String(page).length);\n  var width = getInputWidth(minCharLength);\n\n  var handleCommitChange = function handleCommitChange() {\n    if (!isValidInteger(inputValue)) {\n      setInputValue(String(page));\n      return;\n    }\n\n    var newPage = parseInt(inputValue);\n\n    if (Number.isNaN(newPage)) {\n      setInputValue(String(page));\n      return;\n    }\n\n    if (newPage <= 0 || newPage > lastPage) {\n      setInputValue(String(page));\n      return;\n    }\n\n    setPage(newPage);\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    if (e.key === 'Enter') {\n      var _inputRef$current;\n\n      handleCommitChange();\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.blur();\n    }\n  };\n\n  useEffect(function () {\n    setInputValue(String(page));\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'inline-flex',\n        width: 'min-content',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        value: inputValue,\n        type: \"number\",\n        onChange: function onChange(e) {\n          return setInputValue(e.target.value);\n        },\n        onBlur: handleCommitChange,\n        onKeyUp: handleKeyUp,\n        style: {\n          width: \"\".concat(width, \"px\")\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      color: theme.subText,\n      sx: {\n        fontWeight: 500,\n        fontSize: '12px',\n        lineHeight: '16px'\n      },\n      children: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Text, {\n      color: theme.subText,\n      sx: {\n        fontWeight: 500,\n        fontSize: '12px',\n        lineHeight: '16px'\n      },\n      children: lastPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PaginationInputOnMobile, \"rc+Imm71cdWlPv/f3ic0kdewv/o=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = PaginationInputOnMobile;\nexport default styled(PaginationInputOnMobile).withConfig({\n  displayName: \"PaginationInputOnMobile\",\n  componentId: \"sc-vqr1s6-1\"\n})([\"display:inline-flex;column-gap:8px;width:min-content;align-items:center;margin:0 4px;\"]);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"PaginationInputOnMobile\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Text","styled","useTheme","isValidInteger","s","numberRegex","match","getInputWidth","n","minWidth","maxWidth","minChar","pxPerChar","Math","min","max","Input","input","theme","buttonBlack","primary","subText","PaginationInputOnMobile","className","page","lastPage","setPage","String","inputValue","setInputValue","inputRef","minCharLength","length","width","handleCommitChange","newPage","parseInt","Number","isNaN","handleKeyUp","e","key","current","blur","display","alignItems","target","value","fontWeight","fontSize","lineHeight"],"sources":["/Applications/XAMPP/voxel-interface/src/components/Pagination/PaginationInputOnMobile.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Box, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport useTheme from 'hooks/useTheme'\n\ntype Props = {\n  className?: string\n  page: number\n  lastPage: number\n  setPage: (p: number) => void\n}\n\nconst isValidInteger = (s: string): boolean => {\n  const numberRegex = /^\\d+$/\n  return !!s.match(numberRegex)\n}\n\n// This is to make the input auto-resize on typing\nconst getInputWidth = (n: number): number => {\n  const minWidth = 48 /* px */\n  const maxWidth = 120 /* px */\n\n  const minChar = 3\n  const pxPerChar = 8\n\n  return Math.min(minWidth + Math.max(n - minChar, 0) * pxPerChar, maxWidth)\n}\n\nexport const Input = styled.input`\n  outline: none;\n  border: none;\n  background-color: ${({ theme }) => theme.buttonBlack};\n  color: ${({ theme }) => theme.primary};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 16px;\n  text-align: center;\n\n  border-radius: 20px;\n  padding: 8px 12px;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.subText};\n  }\n\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`\n\nconst PaginationInputOnMobile: React.FC<Props> = ({ className, page, lastPage, setPage }) => {\n  const theme = useTheme()\n  const [inputValue, setInputValue] = useState(String(page))\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const minCharLength = Math.max(inputValue.length, String(page).length)\n  const width = getInputWidth(minCharLength)\n\n  const handleCommitChange = () => {\n    if (!isValidInteger(inputValue)) {\n      setInputValue(String(page))\n      return\n    }\n\n    const newPage = parseInt(inputValue)\n    if (Number.isNaN(newPage)) {\n      setInputValue(String(page))\n      return\n    }\n\n    if (newPage <= 0 || newPage > lastPage) {\n      setInputValue(String(page))\n      return\n    }\n\n    setPage(newPage)\n  }\n\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleCommitChange()\n      inputRef.current?.blur()\n    }\n  }\n\n  useEffect(() => {\n    setInputValue(String(page))\n  }, [page])\n\n  return (\n    <div className={className}>\n      <Box\n        sx={{\n          display: 'inline-flex',\n          width: 'min-content',\n          alignItems: 'center',\n        }}\n      >\n        <Input\n          ref={inputRef}\n          value={inputValue}\n          type=\"number\"\n          onChange={e => setInputValue(e.target.value)}\n          onBlur={handleCommitChange}\n          onKeyUp={handleKeyUp}\n          style={{\n            width: `${width}px`,\n          }}\n        />\n      </Box>\n      <Text\n        color={theme.subText}\n        sx={{\n          fontWeight: 500,\n          fontSize: '12px',\n          lineHeight: '16px',\n        }}\n      >\n        /\n      </Text>\n      <Text\n        color={theme.subText}\n        sx={{\n          fontWeight: 500,\n          fontSize: '12px',\n          lineHeight: '16px',\n        }}\n      >\n        {lastPage}\n      </Text>\n    </div>\n  )\n}\n\nexport default styled(PaginationInputOnMobile)`\n  display: inline-flex;\n  column-gap: 8px;\n  width: min-content;\n  align-items: center;\n  margin: 0 4px;\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}