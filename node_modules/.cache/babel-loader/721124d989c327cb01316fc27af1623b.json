{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useTokenContract } from 'hooks/useContract';\nimport { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TokenInfo(_ref) {\n  _s();\n\n  var address = _ref.address,\n      logo = _ref.logo;\n  var contract = useTokenContract(address);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      symbol = _useState2[0],\n      setSymbol = _useState2[1];\n\n  var getTokenInfo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (contract) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.t0 = setSymbol;\n              _context.next = 5;\n              return contract.symbol();\n\n            case 5:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTokenInfo() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTokenInfo();\n  }, [\"symbol\"]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: symbol\n  }, void 0, false);\n}\n\n_s(TokenInfo, \"QMZTKZKjnOWe1qOjJLZ/YwI+SQ4=\", false, function () {\n  return [useTokenContract];\n});\n\n_c = TokenInfo;\nexport default TokenInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenInfo\");","map":{"version":3,"names":["useTokenContract","useEffect","useState","TokenInfo","address","logo","contract","symbol","setSymbol","getTokenInfo"],"sources":["/Applications/XAMPP/voxel-interface/src/components/TokenInfo/index.tsx"],"sourcesContent":["import {useTokenContract } from 'hooks/useContract'\nimport {  useEffect,useState} from 'react'\nfunction TokenInfo({ address, logo }: {address:string, logo: boolean } ) {\n\nconst\tcontract=useTokenContract(address);\n\n const [symbol, setSymbol] = useState<string>(\"\")\nconst getTokenInfo= async function(){\n\tif(!contract)\n\t\treturn\n\t\n\tsetSymbol(await contract.symbol());\n\n\n}\n\nuseEffect( () => {\n\n  getTokenInfo();\n\n\n}, [\"symbol\"])\n\n return (\n    <>\n    {symbol}\n    </>\n    )\n\n}\n\nexport default TokenInfo\n"],"mappings":";;;;;;AAAA,SAAQA,gBAAR,QAAgC,mBAAhC;AACA,SAAUC,SAAV,EAAoBC,QAApB,QAAmC,OAAnC;;;;AACA,SAASC,SAAT,OAAyE;EAAA;;EAAA,IAApDC,OAAoD,QAApDA,OAAoD;EAAA,IAA3CC,IAA2C,QAA3CA,IAA2C;EAEzE,IAAMC,QAAQ,GAACN,gBAAgB,CAACI,OAAD,CAA/B;;EAEC,gBAA4BF,QAAQ,CAAS,EAAT,CAApC;EAAA;EAAA,IAAOK,MAAP;EAAA,IAAeC,SAAf;;EACD,IAAMC,YAAY;IAAA,uEAAE;MAAA;QAAA;UAAA;YAAA;cAAA,IACfH,QADe;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAAA,cAInBE,SAJmB;cAAA;cAAA,OAIHF,QAAQ,CAACC,MAAT,EAJG;;YAAA;cAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA,gBAAZE,YAAY;MAAA;IAAA;EAAA,GAAlB;;EASAR,SAAS,CAAE,YAAM;IAEfQ,YAAY;EAGb,CALQ,EAKN,CAAC,QAAD,CALM,CAAT;EAOC,oBACG;IAAA,UACCF;EADD,iBADH;AAMA;;GA3BQJ,S;UAEMH,gB;;;KAFNG,S;AA6BT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}