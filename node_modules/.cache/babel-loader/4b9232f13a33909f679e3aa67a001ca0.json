{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { getAddress } from '@ethersproject/address';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Pair } from '@kyberswap/ks-sdk-classic';\nimport { ChainId, Fraction, Price, Token, TokenAmount } from '@kyberswap/ks-sdk-core';\nimport JSBI from 'jsbi';\nimport { useMemo } from 'react';\nimport { BLOCKS_PER_YEAR, SECONDS_PER_YEAR, ZERO_ADDRESS } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { nativeOnChain } from 'constants/tokens';\nimport { useActiveWeb3React } from 'hooks';\nimport { useAllTokens } from 'hooks/Tokens';\nimport { useBlockNumber } from 'state/application/hooks';\nimport { useActiveAndUniqueFarmsData, useRewardTokenPrices, useRewardTokens } from 'state/farms/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { formattedNum } from 'utils';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { getFullDisplayBalance } from './formatBalance';\nexport function priceRangeCalc(price, amp) {\n  //Ex amp = 1.23456\n  if (amp && (amp.equalTo(JSBI.BigInt(1)) || amp !== null && amp !== void 0 && amp.equalTo(JSBI.BigInt(0)))) return [undefined, undefined];\n  var temp = amp === null || amp === void 0 ? void 0 : amp.divide(amp === null || amp === void 0 ? void 0 : amp.subtract(JSBI.BigInt(1)));\n  if (!amp || !temp || !price) return [undefined, undefined];\n\n  if (price instanceof Price) {\n    return [price.asFraction.multiply(price.scalar).multiply(temp.multiply(temp)), price.asFraction.multiply(price.scalar).divide(temp.multiply(temp))];\n  }\n\n  return [price.asFraction.multiply(temp.multiply(temp)), price === null || price === void 0 ? void 0 : price.divide(temp.multiply(temp))];\n}\nexport function parseSubgraphPoolData(poolData, chainId) {\n  var token0 = new Token(chainId, getAddress(poolData.token0.id), +poolData.token0.decimals, poolData.token0.symbol, poolData.token0.name);\n  var token1 = new Token(chainId, getAddress(poolData.token1.id), +poolData.token1.decimals, poolData.token1.symbol, poolData.token1.name);\n  var currency0 = unwrappedToken(token0);\n  var currency1 = unwrappedToken(token1);\n  var reserve0 = tryParseAmount(poolData.reserve0, currency0);\n  var virtualReserve0 = tryParseAmount(poolData.vReserve0, currency0);\n  var reserve1 = tryParseAmount(poolData.reserve1, currency1);\n  var virtualReserve1 = tryParseAmount(poolData.vReserve1, currency1);\n  var totalSupply = tryParseAmount(poolData.totalSupply, nativeOnChain(chainId)); // Only care about decimals 18\n\n  return {\n    reserve0: reserve0,\n    virtualReserve0: virtualReserve0,\n    reserve1: reserve1,\n    virtualReserve1: virtualReserve1,\n    totalSupply: totalSupply,\n    currency0: currency0,\n    currency1: currency1\n  };\n} // const temp = pool.virtualReserve1.subtract(pool.reserve1).divide(pool.reserve1.decimalScale).asFraction\n\nfunction getToken0MinPrice(pool) {\n  if (pool instanceof Pair) {\n    var temp = pool.virtualReserve1.subtract(pool.reserve1).divide(pool.reserve1.decimalScale).asFraction;\n    return temp.multiply(temp).divide(pool.virtualReserve0.divide(pool.virtualReserve0.decimalScale).asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction));\n  } else {\n    var _parseSubgraphPoolDat = parseSubgraphPoolData(pool, 1),\n        reserve0 = _parseSubgraphPoolDat.reserve0,\n        virtualReserve0 = _parseSubgraphPoolDat.virtualReserve0,\n        reserve1 = _parseSubgraphPoolDat.reserve1,\n        virtualReserve1 = _parseSubgraphPoolDat.virtualReserve1; // chainId doesn't matter.\n\n\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      var _temp = virtualReserve1.subtract(reserve1).divide(reserve1.decimalScale).asFraction;\n      return _temp.multiply(_temp).divide(virtualReserve0.divide(virtualReserve0.decimalScale).asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction));\n    } else {\n      return new Fraction('-1');\n    }\n  }\n}\n\nfunction getToken0MaxPrice(pool) {\n  if (pool instanceof Pair) {\n    var temp = pool.virtualReserve0.subtract(pool.reserve0).divide(pool.virtualReserve0.decimalScale).asFraction; // Avoid error division by 0\n\n    if (temp.equalTo(new Fraction('0'))) {\n      return new Fraction('-1');\n    }\n\n    return pool.virtualReserve0.divide(pool.virtualReserve0.decimalScale).asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction).divide(temp.multiply(temp));\n  } else {\n    var _parseSubgraphPoolDat2 = parseSubgraphPoolData(pool, 1),\n        reserve0 = _parseSubgraphPoolDat2.reserve0,\n        virtualReserve0 = _parseSubgraphPoolDat2.virtualReserve0,\n        reserve1 = _parseSubgraphPoolDat2.reserve1,\n        virtualReserve1 = _parseSubgraphPoolDat2.virtualReserve1; // chainId doesn't matter.\n\n\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      var _temp2 = virtualReserve0.subtract(reserve0).divide(virtualReserve0.decimalScale).asFraction; // Avoid error division by 0\n\n      if (_temp2.equalTo(new Fraction('0'))) {\n        return new Fraction('-1');\n      }\n\n      return virtualReserve0.divide(virtualReserve0.decimalScale).asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction).divide(_temp2.multiply(_temp2));\n    } else {\n      return new Fraction('-1');\n    }\n  }\n}\n\nfunction getToken1MinPrice(pool) {\n  if (pool instanceof Pair) {\n    var temp = pool.virtualReserve0.subtract(pool.reserve0).divide(pool.reserve0.decimalScale).asFraction;\n    return temp.multiply(temp).divide(pool.virtualReserve0.divide(pool.virtualReserve0.decimalScale).asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction));\n  } else {\n    var _parseSubgraphPoolDat3 = parseSubgraphPoolData(pool, 1),\n        reserve0 = _parseSubgraphPoolDat3.reserve0,\n        virtualReserve0 = _parseSubgraphPoolDat3.virtualReserve0,\n        reserve1 = _parseSubgraphPoolDat3.reserve1,\n        virtualReserve1 = _parseSubgraphPoolDat3.virtualReserve1; // chainId doesn't matter.\n\n\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      var _temp3 = virtualReserve0.subtract(reserve0).divide(reserve0.decimalScale).asFraction;\n      return _temp3.multiply(_temp3).divide(virtualReserve0.divide(virtualReserve0.decimalScale).asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction));\n    } else {\n      return new Fraction('-1');\n    }\n  }\n}\n\nfunction getToken1MaxPrice(pool) {\n  if (pool instanceof Pair) {\n    var temp = pool.virtualReserve1.subtract(pool.reserve1).divide(pool.reserve1.decimalScale).asFraction; // Avoid error division by 0\n\n    if (temp.equalTo(new Fraction('0'))) {\n      return new Fraction('-1');\n    }\n\n    return pool.virtualReserve0.divide(pool.virtualReserve0.decimalScale).asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction).divide(temp).divide(temp);\n  } else {\n    var _parseSubgraphPoolDat4 = parseSubgraphPoolData(pool, 1),\n        reserve0 = _parseSubgraphPoolDat4.reserve0,\n        virtualReserve0 = _parseSubgraphPoolDat4.virtualReserve0,\n        reserve1 = _parseSubgraphPoolDat4.reserve1,\n        virtualReserve1 = _parseSubgraphPoolDat4.virtualReserve1; // chainId doesn't matter.\n\n\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      var _temp4 = virtualReserve1.subtract(reserve1).divide(reserve1.decimalScale).asFraction; // Avoid error division by 0\n\n      if (_temp4.equalTo(new Fraction('0'))) {\n        return new Fraction('-1');\n      }\n\n      return virtualReserve0.divide(virtualReserve0.decimalScale).asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction).divide(_temp4).divide(_temp4);\n    } else {\n      return new Fraction('-1');\n    }\n  }\n}\n\nexport var priceRangeCalcByPair = function priceRangeCalcByPair(pair) {\n  //Ex amp = 1.23456\n  if (!pair || new Fraction(JSBI.BigInt(pair.amp)).equalTo(JSBI.BigInt(10000))) return [[undefined, undefined], [undefined, undefined]];\n  return [[getToken0MinPrice(pair), getToken0MaxPrice(pair)], [getToken1MinPrice(pair), getToken1MaxPrice(pair)]];\n};\nexport var priceRangeCalcBySubgraphPool = function priceRangeCalcBySubgraphPool(pool) {\n  if (!pool || new Fraction(pool.amp).equalTo(JSBI.BigInt(10000))) return [[undefined, undefined], [undefined, undefined]];\n  return [[getToken0MinPrice(pool), getToken0MaxPrice(pool)], [getToken1MinPrice(pool), getToken1MaxPrice(pool)]];\n};\nexport var feeRangeCalc = function feeRangeCalc(amp) {\n  var baseFee = 0;\n  if (amp > 20) baseFee = 4;\n  if (amp <= 20 && amp > 5) baseFee = 10;\n  if (amp <= 5 && amp > 2) baseFee = 20;\n  if (amp <= 2) baseFee = 30;\n  return \"\".concat((baseFee / 2 / 100).toPrecision(), \"% - \").concat((baseFee * 2 / 100).toPrecision(), \"%\");\n};\nexport var getTradingFeeAPR = function getTradingFeeAPR(liquidity, feeOneDay) {\n  return !feeOneDay || !liquidity || parseFloat(liquidity) === 0 ? 0 : parseFloat(feeOneDay) * 365 * 100 / parseFloat(liquidity);\n};\nvar DEFAULT_MY_LIQUIDITY = '-';\nexport var getMyLiquidity = function getMyLiquidity(liquidityPosition) {\n  if (!liquidityPosition || parseFloat(liquidityPosition.pool.totalSupply) === 0) {\n    return DEFAULT_MY_LIQUIDITY;\n  }\n\n  var myLiquidity = parseFloat(liquidityPosition.liquidityTokenBalance) * parseFloat(liquidityPosition.pool.reserveUSD) / parseFloat(liquidityPosition.pool.totalSupply);\n\n  if (myLiquidity === 0) {\n    return DEFAULT_MY_LIQUIDITY;\n  }\n\n  return formattedNum(myLiquidity.toString(), true);\n};\nexport function useFarmRewardsPerTimeUnit(farm) {\n  if (!farm) {\n    return [];\n  }\n\n  var farmRewardsPerTimeUnit = [];\n\n  if (farm.rewardPerSeconds) {\n    farm.rewardTokens.forEach(function (token, index) {\n      if (farmRewardsPerTimeUnit[index]) {\n        farmRewardsPerTimeUnit[index].amount = farmRewardsPerTimeUnit[index].amount.add(BigNumber.from(farm.rewardPerSeconds[index]));\n      } else {\n        farmRewardsPerTimeUnit[index] = {\n          token: token,\n          amount: BigNumber.from(farm.rewardPerSeconds[index])\n        };\n      }\n    });\n  } else if (farm.rewardPerBlocks) {\n    farm.rewardTokens.forEach(function (token, index) {\n      if (farmRewardsPerTimeUnit[index]) {\n        farmRewardsPerTimeUnit[index].amount = farmRewardsPerTimeUnit[index].amount.add(BigNumber.from(farm.rewardPerBlocks[index]));\n      } else {\n        farmRewardsPerTimeUnit[index] = {\n          token: token,\n          amount: BigNumber.from(farm.rewardPerBlocks[index])\n        };\n      }\n    });\n  }\n\n  return farmRewardsPerTimeUnit;\n}\n/**\n * Get farm APR value in %\n * @param kncPriceUsd KNC price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\n\nexport function useFarmApr(farm, poolLiquidityUsd) {\n  _s();\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      chainId = _useActiveWeb3React.chainId;\n\n  var currentBlock = useBlockNumber();\n  var rewardsPerTimeUnit = useFarmRewardsPerTimeUnit(farm);\n  var tokenPrices = useRewardTokenPrices((rewardsPerTimeUnit || []).map(function (item) {\n    return item.token;\n  }));\n  var yearlyRewardUSD;\n\n  if (farm.rewardPerSeconds) {\n    // FarmV2\n    var currentTimestamp = Math.floor(Date.now() / 1000); // Check if pool is active for liquidity mining\n\n    var isLiquidityMiningActive = currentTimestamp && farm.startTime && farm.endTime ? farm.startTime <= currentTimestamp && currentTimestamp <= farm.endTime : false;\n\n    if (parseFloat(poolLiquidityUsd) === 0 || !isLiquidityMiningActive) {\n      return 0;\n    }\n\n    if (!rewardsPerTimeUnit || rewardsPerTimeUnit.length === 0) {\n      return 0;\n    }\n\n    yearlyRewardUSD = rewardsPerTimeUnit.reduce(function (total, rewardPerSecond, index) {\n      if (!rewardPerSecond || !rewardPerSecond.amount) {\n        return total;\n      }\n\n      if (chainId && tokenPrices[index]) {\n        var rewardPerSecondAmount = TokenAmount.fromRawAmount(rewardPerSecond.token, rewardPerSecond.amount.toString());\n        var yearlyETHRewardAllocation = parseFloat(rewardPerSecondAmount.toSignificant(6)) * SECONDS_PER_YEAR;\n        total += yearlyETHRewardAllocation * tokenPrices[index];\n      }\n\n      return total;\n    }, 0);\n  } else {\n    // Check if pool is active for liquidity mining\n    var _isLiquidityMiningActive = currentBlock && farm.startBlock && farm.endBlock ? farm.startBlock <= currentBlock && currentBlock <= farm.endBlock : false;\n\n    if (parseFloat(poolLiquidityUsd) === 0 || !_isLiquidityMiningActive) {\n      return 0;\n    }\n\n    if (!rewardsPerTimeUnit || rewardsPerTimeUnit.length === 0) {\n      return 0;\n    }\n\n    yearlyRewardUSD = rewardsPerTimeUnit.reduce(function (total, rewardPerBlock, index) {\n      if (!rewardPerBlock || !rewardPerBlock.amount) {\n        return total;\n      }\n\n      if (chainId && tokenPrices[index]) {\n        var rewardPerBlockAmount = TokenAmount.fromRawAmount(rewardPerBlock.token, rewardPerBlock.amount.toString());\n        var yearlyETHRewardAllocation = parseFloat(rewardPerBlockAmount.toSignificant(6)) * BLOCKS_PER_YEAR(chainId);\n        total += yearlyETHRewardAllocation * tokenPrices[index];\n      }\n\n      return total;\n    }, 0);\n  }\n\n  var apr = yearlyRewardUSD / parseFloat(poolLiquidityUsd) * 100;\n  return apr;\n}\n\n_s(useFarmApr, \"VTrDYx0dikfdXNqUhvxWBj7DhmQ=\", false, function () {\n  return [useActiveWeb3React, useBlockNumber, useFarmRewardsPerTimeUnit, useRewardTokenPrices];\n});\n\nexport function useCurrencyConvertedToNative(currency) {\n  _s2();\n\n  var _useActiveWeb3React2 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React2.chainId;\n\n  return useMemo(function () {\n    if (!!currency && !!chainId) {\n      return currency.isNative ? nativeOnChain(chainId) : currency;\n    }\n\n    return undefined;\n  }, [chainId, currency]);\n}\n\n_s2(useCurrencyConvertedToNative, \"MZB4M8cyCV+h94y3JGwcy21BfBk=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useFarmRewards(farms) {\n  var onlyCurrentUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!farms) {\n    return [];\n  }\n\n  var initialRewards = {};\n  var userFarmRewards = farms.reduce(function (total, farm) {\n    var _farm$userData;\n\n    if ((_farm$userData = farm.userData) !== null && _farm$userData !== void 0 && _farm$userData.rewards) {\n      farm.rewardTokens.forEach(function (token, index) {\n        if (total[token.address]) {\n          var _farm$userData2, _farm$userData2$rewar;\n\n          total[token.address].amount = total[token.address].amount.add(BigNumber.from((_farm$userData2 = farm.userData) === null || _farm$userData2 === void 0 ? void 0 : (_farm$userData2$rewar = _farm$userData2.rewards) === null || _farm$userData2$rewar === void 0 ? void 0 : _farm$userData2$rewar[index]));\n        } else {\n          var _farm$userData3, _farm$userData3$rewar;\n\n          total[token.address] = {\n            token: token,\n            amount: BigNumber.from((_farm$userData3 = farm.userData) === null || _farm$userData3 === void 0 ? void 0 : (_farm$userData3$rewar = _farm$userData3.rewards) === null || _farm$userData3$rewar === void 0 ? void 0 : _farm$userData3$rewar[index])\n          };\n        }\n      });\n      return total;\n    } else {\n      farm.rewardTokens.forEach(function (token) {\n        total[token.address] = {\n          token: token,\n          amount: BigNumber.from(0)\n        };\n      });\n    }\n\n    return total;\n  }, initialRewards);\n  var initialAllFarmsRewards = {};\n  var allFarmsRewards = farms.reduce(function (total, farm) {\n    if (farm.rewardPerSeconds) {\n      farm.rewardTokens.forEach(function (token, index) {\n        if (total[token.address]) {\n          total[token.address].amount = total[token.address].amount.add(BigNumber.from(farm.lastRewardTime - farm.startTime).mul(farm.rewardPerSeconds[index]));\n        } else {\n          total[token.address] = {\n            token: token,\n            amount: BigNumber.from(farm.lastRewardTime - farm.startTime).mul(farm.rewardPerSeconds[index])\n          };\n        }\n      });\n    } else {\n      farm.rewardTokens.forEach(function (token, index) {\n        if (total[token.address]) {\n          total[token.address].amount = total[token.address].amount.add(BigNumber.from(farm.lastRewardBlock - farm.startBlock).mul(farm.rewardPerBlocks[index]));\n        } else {\n          total[token.address] = {\n            token: token,\n            amount: BigNumber.from(farm.lastRewardBlock - farm.startBlock).mul(farm.rewardPerBlocks[index])\n          };\n        }\n      });\n    }\n\n    return total;\n  }, initialAllFarmsRewards);\n  return onlyCurrentUser ? Object.values(userFarmRewards) : Object.values(allFarmsRewards);\n}\nexport function useFarmRewardsUSD(rewards) {\n  _s3();\n\n  var _useActiveWeb3React3 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React3.chainId;\n\n  var tokenPrices = useRewardTokenPrices((rewards || []).map(function (item) {\n    return item.token;\n  }));\n\n  if (!rewards) {\n    return 0;\n  }\n\n  var rewardUSD = rewards.reduce(function (total, reward, index) {\n    if (!reward || !reward.amount || !reward.token) {\n      return total;\n    }\n\n    if (chainId && tokenPrices[index]) {\n      total += parseFloat(getFullDisplayBalance(reward.amount, reward.token.decimals)) * tokenPrices[index];\n    }\n\n    return total;\n  }, 0);\n  return rewardUSD;\n}\n\n_s3(useFarmRewardsUSD, \"V0+3Q1U9tE/V/vRgprXviOb7w6s=\", false, function () {\n  return [useActiveWeb3React, useRewardTokenPrices];\n});\n\nexport function useRewardTokensFullInfo() {\n  _s4();\n\n  var _useActiveWeb3React4 = useActiveWeb3React(),\n      chainId = _useActiveWeb3React4.chainId;\n\n  var rewardTokens = useRewardTokens();\n  var allTokens = useAllTokens();\n  var nativeName = NETWORKS_INFO[chainId || ChainId.MAINNET].nativeToken.symbol;\n  return useMemo(function () {\n    return !!rewardTokens && allTokens ? rewardTokens.map(function (address) {\n      return address.toLowerCase() === ZERO_ADDRESS.toLowerCase() ? new Token(chainId, ZERO_ADDRESS.toLowerCase(), 18, nativeName, nativeName) : allTokens[address];\n    }) : [];\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [chainId, nativeName, JSON.stringify(rewardTokens)]);\n}\n\n_s4(useRewardTokensFullInfo, \"Xh9xr4ASkPMAzVvwHusWpBb1mE4=\", false, function () {\n  return [useActiveWeb3React, useRewardTokens, useAllTokens];\n});\n\nexport function useCheckIsFarmingPool(address) {\n  _s5();\n\n  var _useActiveAndUniqueFa = useActiveAndUniqueFarmsData(),\n      uniqueAndActiveFarms = _useActiveAndUniqueFa.data;\n\n  var uniqueAndActiveFarmAddresses = uniqueAndActiveFarms.map(function (farm) {\n    return farm.id;\n  });\n  return uniqueAndActiveFarmAddresses.includes(address) || uniqueAndActiveFarmAddresses.includes(address.toLowerCase());\n}\n\n_s5(useCheckIsFarmingPool, \"KXalK1sJzf1YujpeQYEhp6WKAZY=\", false, function () {\n  return [useActiveAndUniqueFarmsData];\n});\n\nexport function errorFriendly(text) {\n  var error = text.toLowerCase();\n\n  if (error.includes('router: expired')) {\n    return 'An error occurred. Refresh the page and try again ';\n  } else if (error.includes('mintotalamountout') || error.includes('err_limit_out') || error.includes('return amount is not enough') || error.includes('code=call_exception') || error.includes('none of the calls threw an error')) {\n    return 'An error occurred. Try refreshing the price rate or increase max slippage';\n  } else if (error.includes('header not found') || error.includes('swap failed') || error.includes('json-rpc error')) {\n    return 'An error occurred. Refresh the page and try again. If the issue still persists, it might be an issue with your RPC node settings in Metamask.';\n  } else return text;\n}","map":{"version":3,"names":["getAddress","BigNumber","Pair","ChainId","Fraction","Price","Token","TokenAmount","JSBI","useMemo","BLOCKS_PER_YEAR","SECONDS_PER_YEAR","ZERO_ADDRESS","NETWORKS_INFO","nativeOnChain","useActiveWeb3React","useAllTokens","useBlockNumber","useActiveAndUniqueFarmsData","useRewardTokenPrices","useRewardTokens","tryParseAmount","formattedNum","unwrappedToken","getFullDisplayBalance","priceRangeCalc","price","amp","equalTo","BigInt","undefined","temp","divide","subtract","asFraction","multiply","scalar","parseSubgraphPoolData","poolData","chainId","token0","id","decimals","symbol","name","token1","currency0","currency1","reserve0","virtualReserve0","vReserve0","reserve1","virtualReserve1","vReserve1","totalSupply","getToken0MinPrice","pool","decimalScale","getToken0MaxPrice","getToken1MinPrice","getToken1MaxPrice","priceRangeCalcByPair","pair","priceRangeCalcBySubgraphPool","feeRangeCalc","baseFee","toPrecision","getTradingFeeAPR","liquidity","feeOneDay","parseFloat","DEFAULT_MY_LIQUIDITY","getMyLiquidity","liquidityPosition","myLiquidity","liquidityTokenBalance","reserveUSD","toString","useFarmRewardsPerTimeUnit","farm","farmRewardsPerTimeUnit","rewardPerSeconds","rewardTokens","forEach","token","index","amount","add","from","rewardPerBlocks","useFarmApr","poolLiquidityUsd","currentBlock","rewardsPerTimeUnit","tokenPrices","map","item","yearlyRewardUSD","currentTimestamp","Math","floor","Date","now","isLiquidityMiningActive","startTime","endTime","length","reduce","total","rewardPerSecond","rewardPerSecondAmount","fromRawAmount","yearlyETHRewardAllocation","toSignificant","startBlock","endBlock","rewardPerBlock","rewardPerBlockAmount","apr","useCurrencyConvertedToNative","currency","isNative","useFarmRewards","farms","onlyCurrentUser","initialRewards","userFarmRewards","userData","rewards","address","initialAllFarmsRewards","allFarmsRewards","lastRewardTime","mul","lastRewardBlock","Object","values","useFarmRewardsUSD","rewardUSD","reward","useRewardTokensFullInfo","allTokens","nativeName","MAINNET","nativeToken","toLowerCase","JSON","stringify","useCheckIsFarmingPool","uniqueAndActiveFarms","data","uniqueAndActiveFarmAddresses","includes","errorFriendly","text","error"],"sources":["/Applications/XAMPP/voxel-interface/src/utils/dmm.ts"],"sourcesContent":["import { getAddress } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Pair } from '@kyberswap/ks-sdk-classic'\nimport {\n  ChainId,\n  ChainId as ChainIdDMM,\n  Currency,\n  CurrencyAmount,\n  Fraction,\n  Price,\n  Token,\n  TokenAmount,\n} from '@kyberswap/ks-sdk-core'\nimport JSBI from 'jsbi'\nimport { useMemo } from 'react'\n\nimport { BLOCKS_PER_YEAR, SECONDS_PER_YEAR, ZERO_ADDRESS } from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { nativeOnChain } from 'constants/tokens'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useBlockNumber } from 'state/application/hooks'\nimport { useActiveAndUniqueFarmsData, useRewardTokenPrices, useRewardTokens } from 'state/farms/hooks'\nimport { Farm, Reward, RewardPerTimeUnit } from 'state/farms/types'\nimport { SubgraphPoolData, UserLiquidityPosition } from 'state/pools/hooks'\nimport { tryParseAmount } from 'state/swap/hooks'\nimport { formattedNum } from 'utils'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nimport { getFullDisplayBalance } from './formatBalance'\n\nexport function priceRangeCalc(\n  price?: Price<Currency, Currency> | Fraction,\n  amp?: Fraction,\n): [Fraction | undefined, Fraction | undefined] {\n  //Ex amp = 1.23456\n  if (amp && (amp.equalTo(JSBI.BigInt(1)) || amp?.equalTo(JSBI.BigInt(0)))) return [undefined, undefined]\n  const temp = amp?.divide(amp?.subtract(JSBI.BigInt(1)))\n  if (!amp || !temp || !price) return [undefined, undefined]\n  if (price instanceof Price) {\n    return [\n      price.asFraction.multiply(price.scalar).multiply(temp.multiply(temp)),\n      price.asFraction.multiply(price.scalar).divide(temp.multiply(temp)),\n    ]\n  }\n  return [price.asFraction.multiply(temp.multiply(temp)), price?.divide(temp.multiply(temp))]\n}\n\nexport function parseSubgraphPoolData(\n  poolData: SubgraphPoolData,\n  chainId: ChainId,\n): {\n  reserve0: CurrencyAmount<Currency> | undefined\n  virtualReserve0: CurrencyAmount<Currency> | undefined\n  reserve1: CurrencyAmount<Currency> | undefined\n  virtualReserve1: CurrencyAmount<Currency> | undefined\n  totalSupply: CurrencyAmount<Currency> | undefined\n  currency0: Currency\n  currency1: Currency\n} {\n  const token0 = new Token(\n    chainId,\n    getAddress(poolData.token0.id),\n    +poolData.token0.decimals,\n    poolData.token0.symbol,\n    poolData.token0.name,\n  )\n  const token1 = new Token(\n    chainId,\n    getAddress(poolData.token1.id),\n    +poolData.token1.decimals,\n    poolData.token1.symbol,\n    poolData.token1.name,\n  )\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  const reserve0 = tryParseAmount(poolData.reserve0, currency0)\n  const virtualReserve0 = tryParseAmount(poolData.vReserve0, currency0)\n  const reserve1 = tryParseAmount(poolData.reserve1, currency1)\n  const virtualReserve1 = tryParseAmount(poolData.vReserve1, currency1)\n  const totalSupply = tryParseAmount(poolData.totalSupply, nativeOnChain(chainId)) // Only care about decimals 18\n\n  return {\n    reserve0,\n    virtualReserve0,\n    reserve1,\n    virtualReserve1,\n    totalSupply,\n    currency0,\n    currency1,\n  }\n}\n\n// const temp = pool.virtualReserve1.subtract(pool.reserve1).divide(pool.reserve1.decimalScale).asFraction\n\nfunction getToken0MinPrice(pool: Pair | SubgraphPoolData): Fraction {\n  if (pool instanceof Pair) {\n    const temp = pool.virtualReserve1.subtract(pool.reserve1).divide(pool.reserve1.decimalScale).asFraction\n    return temp\n      .multiply(temp)\n      .divide(\n        pool.virtualReserve0\n          .divide(pool.virtualReserve0.decimalScale)\n          .asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction),\n      )\n  } else {\n    const { reserve0, virtualReserve0, reserve1, virtualReserve1 } = parseSubgraphPoolData(pool, 1) // chainId doesn't matter.\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      const temp = virtualReserve1.subtract(reserve1).divide(reserve1.decimalScale).asFraction\n      return temp\n        .multiply(temp)\n        .divide(\n          virtualReserve0\n            .divide(virtualReserve0.decimalScale)\n            .asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction),\n        )\n    } else {\n      return new Fraction('-1')\n    }\n  }\n}\n\nfunction getToken0MaxPrice(pool: Pair | SubgraphPoolData): Fraction {\n  if (pool instanceof Pair) {\n    const temp = pool.virtualReserve0.subtract(pool.reserve0).divide(pool.virtualReserve0.decimalScale).asFraction\n\n    // Avoid error division by 0\n    if (temp.equalTo(new Fraction('0'))) {\n      return new Fraction('-1')\n    }\n\n    return pool.virtualReserve0\n      .divide(pool.virtualReserve0.decimalScale)\n      .asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction)\n      .divide(temp.multiply(temp))\n  } else {\n    const { reserve0, virtualReserve0, reserve1, virtualReserve1 } = parseSubgraphPoolData(pool, 1) // chainId doesn't matter.\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      const temp = virtualReserve0.subtract(reserve0).divide(virtualReserve0.decimalScale).asFraction\n\n      // Avoid error division by 0\n      if (temp.equalTo(new Fraction('0'))) {\n        return new Fraction('-1')\n      }\n\n      return virtualReserve0\n        .divide(virtualReserve0.decimalScale)\n        .asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction)\n        .divide(temp.multiply(temp))\n    } else {\n      return new Fraction('-1')\n    }\n  }\n}\n\nfunction getToken1MinPrice(pool: Pair | SubgraphPoolData): Fraction {\n  if (pool instanceof Pair) {\n    const temp = pool.virtualReserve0.subtract(pool.reserve0).divide(pool.reserve0.decimalScale).asFraction\n\n    return temp\n      .multiply(temp)\n      .divide(\n        pool.virtualReserve0\n          .divide(pool.virtualReserve0.decimalScale)\n          .asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction),\n      )\n  } else {\n    const { reserve0, virtualReserve0, reserve1, virtualReserve1 } = parseSubgraphPoolData(pool, 1) // chainId doesn't matter.\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      const temp = virtualReserve0.subtract(reserve0).divide(reserve0.decimalScale).asFraction\n      return temp\n        .multiply(temp)\n        .divide(\n          virtualReserve0\n            .divide(virtualReserve0.decimalScale)\n            .asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction),\n        )\n    } else {\n      return new Fraction('-1')\n    }\n  }\n}\n\nfunction getToken1MaxPrice(pool: Pair | SubgraphPoolData): Fraction {\n  if (pool instanceof Pair) {\n    const temp = pool.virtualReserve1.subtract(pool.reserve1).divide(pool.reserve1.decimalScale).asFraction\n\n    // Avoid error division by 0\n    if (temp.equalTo(new Fraction('0'))) {\n      return new Fraction('-1')\n    }\n\n    return pool.virtualReserve0\n      .divide(pool.virtualReserve0.decimalScale)\n      .asFraction.multiply(pool.virtualReserve1.divide(pool.virtualReserve1.decimalScale).asFraction)\n      .divide(temp)\n      .divide(temp)\n  } else {\n    const { reserve0, virtualReserve0, reserve1, virtualReserve1 } = parseSubgraphPoolData(pool, 1) // chainId doesn't matter.\n    if (reserve0 && virtualReserve0 && reserve1 && virtualReserve1) {\n      const temp = virtualReserve1.subtract(reserve1).divide(reserve1.decimalScale).asFraction\n\n      // Avoid error division by 0\n      if (temp.equalTo(new Fraction('0'))) {\n        return new Fraction('-1')\n      }\n\n      return virtualReserve0\n        .divide(virtualReserve0.decimalScale)\n        .asFraction.multiply(virtualReserve1.divide(virtualReserve1.decimalScale).asFraction)\n        .divide(temp)\n        .divide(temp)\n    } else {\n      return new Fraction('-1')\n    }\n  }\n}\n\nexport const priceRangeCalcByPair = (pair?: Pair): [Fraction | undefined, Fraction | undefined][] => {\n  //Ex amp = 1.23456\n  if (!pair || new Fraction(JSBI.BigInt(pair.amp)).equalTo(JSBI.BigInt(10000)))\n    return [\n      [undefined, undefined],\n      [undefined, undefined],\n    ]\n  return [\n    [getToken0MinPrice(pair), getToken0MaxPrice(pair)],\n    [getToken1MinPrice(pair), getToken1MaxPrice(pair)],\n  ]\n}\n\nexport const priceRangeCalcBySubgraphPool = (\n  pool?: SubgraphPoolData,\n): [Fraction | undefined, Fraction | undefined][] => {\n  if (!pool || new Fraction(pool.amp).equalTo(JSBI.BigInt(10000)))\n    return [\n      [undefined, undefined],\n      [undefined, undefined],\n    ]\n  return [\n    [getToken0MinPrice(pool), getToken0MaxPrice(pool)],\n    [getToken1MinPrice(pool), getToken1MaxPrice(pool)],\n  ]\n}\n\nexport const feeRangeCalc = (amp: number): string => {\n  let baseFee = 0\n  if (amp > 20) baseFee = 4\n  if (amp <= 20 && amp > 5) baseFee = 10\n  if (amp <= 5 && amp > 2) baseFee = 20\n  if (amp <= 2) baseFee = 30\n\n  return `${(baseFee / 2 / 100).toPrecision()}% - ${((baseFee * 2) / 100).toPrecision()}%`\n}\n\nexport const getTradingFeeAPR = (liquidity?: string, feeOneDay?: string): number => {\n  return !feeOneDay || !liquidity || parseFloat(liquidity) === 0\n    ? 0\n    : (parseFloat(feeOneDay) * 365 * 100) / parseFloat(liquidity)\n}\n\nconst DEFAULT_MY_LIQUIDITY = '-'\n\nexport const getMyLiquidity = (liquidityPosition?: UserLiquidityPosition): string | 0 => {\n  if (!liquidityPosition || parseFloat(liquidityPosition.pool.totalSupply) === 0) {\n    return DEFAULT_MY_LIQUIDITY\n  }\n\n  const myLiquidity =\n    (parseFloat(liquidityPosition.liquidityTokenBalance) * parseFloat(liquidityPosition.pool.reserveUSD)) /\n    parseFloat(liquidityPosition.pool.totalSupply)\n\n  if (myLiquidity === 0) {\n    return DEFAULT_MY_LIQUIDITY\n  }\n\n  return formattedNum(myLiquidity.toString(), true)\n}\n\nexport function useFarmRewardsPerTimeUnit(farm?: Farm): RewardPerTimeUnit[] {\n  if (!farm) {\n    return []\n  }\n\n  const farmRewardsPerTimeUnit: RewardPerTimeUnit[] = []\n\n  if (farm.rewardPerSeconds) {\n    farm.rewardTokens.forEach((token, index) => {\n      if (farmRewardsPerTimeUnit[index]) {\n        farmRewardsPerTimeUnit[index].amount = farmRewardsPerTimeUnit[index].amount.add(\n          BigNumber.from(farm.rewardPerSeconds[index]),\n        )\n      } else {\n        farmRewardsPerTimeUnit[index] = {\n          token,\n          amount: BigNumber.from(farm.rewardPerSeconds[index]),\n        }\n      }\n    })\n  } else if (farm.rewardPerBlocks) {\n    farm.rewardTokens.forEach((token, index) => {\n      if (farmRewardsPerTimeUnit[index]) {\n        farmRewardsPerTimeUnit[index].amount = farmRewardsPerTimeUnit[index].amount.add(\n          BigNumber.from(farm.rewardPerBlocks[index]),\n        )\n      } else {\n        farmRewardsPerTimeUnit[index] = {\n          token,\n          amount: BigNumber.from(farm.rewardPerBlocks[index]),\n        }\n      }\n    })\n  }\n\n  return farmRewardsPerTimeUnit\n}\n/**\n * Get farm APR value in %\n * @param kncPriceUsd KNC price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport function useFarmApr(farm: Farm, poolLiquidityUsd: string): number {\n  const { chainId } = useActiveWeb3React()\n  const currentBlock = useBlockNumber()\n  const rewardsPerTimeUnit = useFarmRewardsPerTimeUnit(farm)\n  const tokenPrices = useRewardTokenPrices((rewardsPerTimeUnit || []).map(item => item.token))\n  let yearlyRewardUSD\n\n  if (farm.rewardPerSeconds) {\n    // FarmV2\n\n    const currentTimestamp = Math.floor(Date.now() / 1000)\n\n    // Check if pool is active for liquidity mining\n    const isLiquidityMiningActive =\n      currentTimestamp && farm.startTime && farm.endTime\n        ? farm.startTime <= currentTimestamp && currentTimestamp <= farm.endTime\n        : false\n\n    if (parseFloat(poolLiquidityUsd) === 0 || !isLiquidityMiningActive) {\n      return 0\n    }\n\n    if (!rewardsPerTimeUnit || rewardsPerTimeUnit.length === 0) {\n      return 0\n    }\n\n    yearlyRewardUSD = rewardsPerTimeUnit.reduce((total, rewardPerSecond, index) => {\n      if (!rewardPerSecond || !rewardPerSecond.amount) {\n        return total\n      }\n\n      if (chainId && tokenPrices[index]) {\n        const rewardPerSecondAmount = TokenAmount.fromRawAmount(\n          rewardPerSecond.token,\n          rewardPerSecond.amount.toString(),\n        )\n        const yearlyETHRewardAllocation = parseFloat(rewardPerSecondAmount.toSignificant(6)) * SECONDS_PER_YEAR\n        total += yearlyETHRewardAllocation * tokenPrices[index]\n      }\n\n      return total\n    }, 0)\n  } else {\n    // Check if pool is active for liquidity mining\n    const isLiquidityMiningActive =\n      currentBlock && farm.startBlock && farm.endBlock\n        ? farm.startBlock <= currentBlock && currentBlock <= farm.endBlock\n        : false\n\n    if (parseFloat(poolLiquidityUsd) === 0 || !isLiquidityMiningActive) {\n      return 0\n    }\n\n    if (!rewardsPerTimeUnit || rewardsPerTimeUnit.length === 0) {\n      return 0\n    }\n\n    yearlyRewardUSD = rewardsPerTimeUnit.reduce((total, rewardPerBlock, index) => {\n      if (!rewardPerBlock || !rewardPerBlock.amount) {\n        return total\n      }\n\n      if (chainId && tokenPrices[index]) {\n        const rewardPerBlockAmount = TokenAmount.fromRawAmount(rewardPerBlock.token, rewardPerBlock.amount.toString())\n        const yearlyETHRewardAllocation =\n          parseFloat(rewardPerBlockAmount.toSignificant(6)) * BLOCKS_PER_YEAR(chainId as ChainId)\n        total += yearlyETHRewardAllocation * tokenPrices[index]\n      }\n\n      return total\n    }, 0)\n  }\n\n  const apr = (yearlyRewardUSD / parseFloat(poolLiquidityUsd)) * 100\n\n  return apr\n}\n\nexport function useCurrencyConvertedToNative(currency?: Currency): Currency | undefined {\n  const { chainId } = useActiveWeb3React()\n  return useMemo(() => {\n    if (!!currency && !!chainId) {\n      return currency.isNative ? nativeOnChain(chainId) : currency\n    }\n    return undefined\n  }, [chainId, currency])\n}\n\nexport function useFarmRewards(farms?: Farm[], onlyCurrentUser = true): Reward[] {\n  if (!farms) {\n    return []\n  }\n\n  const initialRewards: { [key: string]: Reward } = {}\n\n  const userFarmRewards = farms.reduce((total, farm) => {\n    if (farm.userData?.rewards) {\n      farm.rewardTokens.forEach((token, index) => {\n        if (total[token.address]) {\n          total[token.address].amount = total[token.address].amount.add(BigNumber.from(farm.userData?.rewards?.[index]))\n        } else {\n          total[token.address] = {\n            token,\n            amount: BigNumber.from(farm.userData?.rewards?.[index]),\n          }\n        }\n      })\n      return total\n    } else {\n      farm.rewardTokens.forEach(token => {\n        total[token.address] = {\n          token,\n          amount: BigNumber.from(0),\n        }\n      })\n    }\n\n    return total\n  }, initialRewards)\n\n  const initialAllFarmsRewards: { [key: string]: Reward } = {}\n\n  const allFarmsRewards = farms.reduce((total, farm) => {\n    if (farm.rewardPerSeconds) {\n      farm.rewardTokens.forEach((token, index) => {\n        if (total[token.address]) {\n          total[token.address].amount = total[token.address].amount.add(\n            BigNumber.from(farm.lastRewardTime - farm.startTime).mul(farm.rewardPerSeconds[index]),\n          )\n        } else {\n          total[token.address] = {\n            token,\n            amount: BigNumber.from(farm.lastRewardTime - farm.startTime).mul(farm.rewardPerSeconds[index]),\n          }\n        }\n      })\n    } else {\n      farm.rewardTokens.forEach((token, index) => {\n        if (total[token.address]) {\n          total[token.address].amount = total[token.address].amount.add(\n            BigNumber.from(farm.lastRewardBlock - farm.startBlock).mul(farm.rewardPerBlocks[index]),\n          )\n        } else {\n          total[token.address] = {\n            token,\n            amount: BigNumber.from(farm.lastRewardBlock - farm.startBlock).mul(farm.rewardPerBlocks[index]),\n          }\n        }\n      })\n    }\n\n    return total\n  }, initialAllFarmsRewards)\n\n  return onlyCurrentUser ? Object.values(userFarmRewards) : Object.values(allFarmsRewards)\n}\n\nexport function useFarmRewardsUSD(rewards?: Reward[]): number {\n  const { chainId } = useActiveWeb3React()\n  const tokenPrices = useRewardTokenPrices((rewards || []).map(item => item.token))\n  if (!rewards) {\n    return 0\n  }\n\n  const rewardUSD = rewards.reduce((total, reward, index) => {\n    if (!reward || !reward.amount || !reward.token) {\n      return total\n    }\n\n    if (chainId && tokenPrices[index]) {\n      total += parseFloat(getFullDisplayBalance(reward.amount, reward.token.decimals)) * tokenPrices[index]\n    }\n\n    return total\n  }, 0)\n\n  return rewardUSD\n}\n\nexport function useRewardTokensFullInfo(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const rewardTokens = useRewardTokens()\n\n  const allTokens = useAllTokens()\n  const nativeName = NETWORKS_INFO[chainId || ChainId.MAINNET].nativeToken.symbol\n\n  return useMemo(\n    () =>\n      !!rewardTokens && allTokens\n        ? rewardTokens.map(address =>\n            address.toLowerCase() === ZERO_ADDRESS.toLowerCase()\n              ? new Token(chainId as ChainIdDMM, ZERO_ADDRESS.toLowerCase(), 18, nativeName, nativeName)\n              : allTokens[address],\n          )\n        : [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [chainId, nativeName, JSON.stringify(rewardTokens)],\n  )\n}\n\nexport function useCheckIsFarmingPool(address: string): boolean {\n  const { data: uniqueAndActiveFarms } = useActiveAndUniqueFarmsData()\n  const uniqueAndActiveFarmAddresses = uniqueAndActiveFarms.map(farm => farm.id)\n\n  return uniqueAndActiveFarmAddresses.includes(address) || uniqueAndActiveFarmAddresses.includes(address.toLowerCase())\n}\n\nexport function errorFriendly(text: string): string {\n  const error = text.toLowerCase()\n  if (error.includes('router: expired')) {\n    return 'An error occurred. Refresh the page and try again '\n  } else if (\n    error.includes('mintotalamountout') ||\n    error.includes('err_limit_out') ||\n    error.includes('return amount is not enough') ||\n    error.includes('code=call_exception') ||\n    error.includes('none of the calls threw an error')\n  ) {\n    return 'An error occurred. Try refreshing the price rate or increase max slippage'\n  } else if (error.includes('header not found') || error.includes('swap failed') || error.includes('json-rpc error')) {\n    return 'An error occurred. Refresh the page and try again. If the issue still persists, it might be an issue with your RPC node settings in Metamask.'\n  } else return text\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}