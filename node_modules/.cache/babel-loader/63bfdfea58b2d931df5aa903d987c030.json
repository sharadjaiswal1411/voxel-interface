{"ast":null,"code":"import _classCallCheck from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { loadModule, logger, fill, isThenable } from '@sentry/utils';\n/** Tracing integration for graphql package */\n\nvar GraphQL = /*#__PURE__*/function () {\n  function GraphQL() {\n    _classCallCheck(this, GraphQL);\n\n    GraphQL.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(GraphQL, [{\n    key: \"__init\",\n    value:\n    /**\n     * @inheritDoc\n     */\n    function __init() {\n      this.name = GraphQL.id;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"setupOnce\",\n    value: function setupOnce(_, getCurrentHub) {\n      var pkg = loadModule('graphql/execution/execute.js');\n\n      if (!pkg) {\n        logger.error('GraphQL Integration was unable to require graphql/execution package.');\n        return;\n      }\n\n      fill(pkg, 'execute', function (orig) {\n        return function () {\n          var scope = getCurrentHub().getScope();\n\n          var parentSpan = _optionalChain([scope, 'optionalAccess', function (_2) {\n            return _2.getSpan;\n          }, 'call', function (_3) {\n            return _3();\n          }]);\n\n          var span = _optionalChain([parentSpan, 'optionalAccess', function (_4) {\n            return _4.startChild;\n          }, 'call', function (_5) {\n            return _5({\n              description: 'execute',\n              op: 'db.graphql'\n            });\n          }]);\n\n          _optionalChain([scope, 'optionalAccess', function (_6) {\n            return _6.setSpan;\n          }, 'call', function (_7) {\n            return _7(span);\n          }]);\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var rv = orig.call.apply(orig, [this].concat(args));\n\n          if (isThenable(rv)) {\n            return rv.then(function (res) {\n              _optionalChain([span, 'optionalAccess', function (_8) {\n                return _8.finish;\n              }, 'call', function (_9) {\n                return _9();\n              }]);\n\n              _optionalChain([scope, 'optionalAccess', function (_10) {\n                return _10.setSpan;\n              }, 'call', function (_11) {\n                return _11(parentSpan);\n              }]);\n\n              return res;\n            });\n          }\n\n          _optionalChain([span, 'optionalAccess', function (_12) {\n            return _12.finish;\n          }, 'call', function (_13) {\n            return _13();\n          }]);\n\n          _optionalChain([scope, 'optionalAccess', function (_14) {\n            return _14.setSpan;\n          }, 'call', function (_15) {\n            return _15(parentSpan);\n          }]);\n\n          return rv;\n        };\n      });\n    }\n  }], [{\n    key: \"__initStatic\",\n    value: function __initStatic() {\n      this.id = 'GraphQL';\n    }\n  }]);\n\n  return GraphQL;\n}();\n\nGraphQL.__initStatic();\n\nexport { GraphQL };","map":null,"metadata":{},"sourceType":"module"}