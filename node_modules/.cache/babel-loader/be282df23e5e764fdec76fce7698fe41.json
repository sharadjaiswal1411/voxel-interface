{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.CLOSE_WINDOW = exports.CANCEL_POPUP_REQUEST = exports.CLOSED = exports.HANDSHAKE = exports.EXTENSION_USB_PERMISSIONS = exports.ERROR = exports.INIT = exports.LOADED = exports.BOOTSTRAP = void 0; // Message called from popup.html inline script before \"window.onload\" event. This is first message from popup to window.opener.\n\nvar BOOTSTRAP = 'popup-bootstrap'; // Message from popup.js to window.opener, called after \"window.onload\" event. This is second message from popup to window.opener.\n\nexports.BOOTSTRAP = BOOTSTRAP;\nvar LOADED = 'popup-loaded'; // Message from window.opener to popup.js. Send settings to popup. This is first message from window.opener to popup.\n\nexports.LOADED = LOADED;\nvar INIT = 'popup-init'; // Error message from popup to window.opener. Could be thrown during popup initialization process (POPUP.INIT)\n\nexports.INIT = INIT;\nvar ERROR = 'popup-error'; // Message to webextensions, opens \"trezor-usb-permission.html\" within webextension\n\nexports.ERROR = ERROR;\nvar EXTENSION_USB_PERMISSIONS = 'open-usb-permissions'; // Message called from both [popup > iframe] then [iframe > popup] in this exact order.\n// Firstly popup call iframe to resolve popup promise in Core\n// Then iframe reacts to POPUP.HANDSHAKE message and sends ConnectSettings, transport information and requested method details back to popup\n\nexports.EXTENSION_USB_PERMISSIONS = EXTENSION_USB_PERMISSIONS;\nvar HANDSHAKE = 'popup-handshake'; // Event emitted from PopupManager at the end of popup closing process.\n// Sent from popup thru window.opener to an iframe because message channel between popup and iframe is no longer available\n\nexports.HANDSHAKE = HANDSHAKE;\nvar CLOSED = 'popup-closed'; // Message called from iframe to popup, it means that popup will not be needed (example: Blockchain methods are not using popup at all)\n// This will close active popup window and/or clear opening process in PopupManager (maybe popup wasn't opened yet)\n\nexports.CLOSED = CLOSED;\nvar CANCEL_POPUP_REQUEST = 'ui-cancel-popup-request'; // Message called from inline element in popup.html (window.closeWindow), this is used only with webextensions to properly handle popup close event\n\nexports.CANCEL_POPUP_REQUEST = CANCEL_POPUP_REQUEST;\nvar CLOSE_WINDOW = 'window.close';\nexports.CLOSE_WINDOW = CLOSE_WINDOW;","map":null,"metadata":{},"sourceType":"script"}