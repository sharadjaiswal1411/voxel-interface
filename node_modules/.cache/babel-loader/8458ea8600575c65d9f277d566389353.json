{"ast":null,"code":"\"use strict\"; // tslint:disable:max-file-line-count\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar MarketOperation;\n\n(function (MarketOperation) {\n  MarketOperation[\"Sell\"] = \"Sell\";\n  MarketOperation[\"Buy\"] = \"Buy\";\n})(MarketOperation = exports.MarketOperation || (exports.MarketOperation = {}));\n/**\n * Errors originating from the 0x exchange contract\n */\n\n\nvar ExchangeContractErrs;\n\n(function (ExchangeContractErrs) {\n  ExchangeContractErrs[\"OrderFillExpired\"] = \"ORDER_FILL_EXPIRED\";\n  ExchangeContractErrs[\"OrderCancelExpired\"] = \"ORDER_CANCEL_EXPIRED\";\n  ExchangeContractErrs[\"OrderCancelled\"] = \"ORDER_CANCELLED\";\n  ExchangeContractErrs[\"OrderFillAmountZero\"] = \"ORDER_FILL_AMOUNT_ZERO\";\n  ExchangeContractErrs[\"OrderRemainingFillAmountZero\"] = \"ORDER_REMAINING_FILL_AMOUNT_ZERO\";\n  ExchangeContractErrs[\"OrderFillRoundingError\"] = \"ORDER_FILL_ROUNDING_ERROR\";\n  ExchangeContractErrs[\"FillBalanceAllowanceError\"] = \"FILL_BALANCE_ALLOWANCE_ERROR\";\n  ExchangeContractErrs[\"InsufficientTakerBalance\"] = \"INSUFFICIENT_TAKER_BALANCE\";\n  ExchangeContractErrs[\"InsufficientTakerAllowance\"] = \"INSUFFICIENT_TAKER_ALLOWANCE\";\n  ExchangeContractErrs[\"InsufficientMakerBalance\"] = \"INSUFFICIENT_MAKER_BALANCE\";\n  ExchangeContractErrs[\"InsufficientMakerAllowance\"] = \"INSUFFICIENT_MAKER_ALLOWANCE\";\n  ExchangeContractErrs[\"InsufficientTakerFeeBalance\"] = \"INSUFFICIENT_TAKER_FEE_BALANCE\";\n  ExchangeContractErrs[\"InsufficientTakerFeeAllowance\"] = \"INSUFFICIENT_TAKER_FEE_ALLOWANCE\";\n  ExchangeContractErrs[\"InsufficientMakerFeeBalance\"] = \"INSUFFICIENT_MAKER_FEE_BALANCE\";\n  ExchangeContractErrs[\"InsufficientMakerFeeAllowance\"] = \"INSUFFICIENT_MAKER_FEE_ALLOWANCE\";\n  ExchangeContractErrs[\"TransactionSenderIsNotFillOrderTaker\"] = \"TRANSACTION_SENDER_IS_NOT_FILL_ORDER_TAKER\";\n  ExchangeContractErrs[\"MultipleMakersInSingleCancelBatchDisallowed\"] = \"MULTIPLE_MAKERS_IN_SINGLE_CANCEL_BATCH_DISALLOWED\";\n  ExchangeContractErrs[\"InsufficientRemainingFillAmount\"] = \"INSUFFICIENT_REMAINING_FILL_AMOUNT\";\n  ExchangeContractErrs[\"MultipleTakerTokensInFillUpToDisallowed\"] = \"MULTIPLE_TAKER_TOKENS_IN_FILL_UP_TO_DISALLOWED\";\n  ExchangeContractErrs[\"BatchOrdersMustHaveSameExchangeAddress\"] = \"BATCH_ORDERS_MUST_HAVE_SAME_EXCHANGE_ADDRESS\";\n  ExchangeContractErrs[\"BatchOrdersMustHaveAtLeastOneItem\"] = \"BATCH_ORDERS_MUST_HAVE_AT_LEAST_ONE_ITEM\";\n})(ExchangeContractErrs = exports.ExchangeContractErrs || (exports.ExchangeContractErrs = {}));\n\nvar SignatureType;\n\n(function (SignatureType) {\n  SignatureType[SignatureType[\"Illegal\"] = 0] = \"Illegal\";\n  SignatureType[SignatureType[\"Invalid\"] = 1] = \"Invalid\";\n  SignatureType[SignatureType[\"EIP712\"] = 2] = \"EIP712\";\n  SignatureType[SignatureType[\"EthSign\"] = 3] = \"EthSign\";\n  SignatureType[SignatureType[\"Wallet\"] = 4] = \"Wallet\";\n  SignatureType[SignatureType[\"Validator\"] = 5] = \"Validator\";\n  SignatureType[SignatureType[\"PreSigned\"] = 6] = \"PreSigned\";\n  SignatureType[SignatureType[\"NSignatureTypes\"] = 7] = \"NSignatureTypes\";\n})(SignatureType = exports.SignatureType || (exports.SignatureType = {}));\n\nvar AssetProxyId;\n\n(function (AssetProxyId) {\n  AssetProxyId[\"ERC20\"] = \"0xf47261b0\";\n  AssetProxyId[\"ERC721\"] = \"0x02571792\";\n  AssetProxyId[\"MultiAsset\"] = \"0x94cfcdd7\";\n  AssetProxyId[\"ERC1155\"] = \"0xa7cb5fb7\";\n  AssetProxyId[\"StaticCall\"] = \"0xc339d10a\";\n})(AssetProxyId = exports.AssetProxyId || (exports.AssetProxyId = {})); // TODO: DRY. These should be extracted from contract code.\n\n\nvar RevertReason;\n\n(function (RevertReason) {\n  RevertReason[\"OrderUnfillable\"] = \"ORDER_UNFILLABLE\";\n  RevertReason[\"InvalidMaker\"] = \"INVALID_MAKER\";\n  RevertReason[\"InvalidTaker\"] = \"INVALID_TAKER\";\n  RevertReason[\"InvalidSender\"] = \"INVALID_SENDER\";\n  RevertReason[\"InvalidOrderSignature\"] = \"INVALID_ORDER_SIGNATURE\";\n  RevertReason[\"InvalidTakerAmount\"] = \"INVALID_TAKER_AMOUNT\";\n  RevertReason[\"DivisionByZero\"] = \"DIVISION_BY_ZERO\";\n  RevertReason[\"RoundingError\"] = \"ROUNDING_ERROR\";\n  RevertReason[\"InvalidSignature\"] = \"INVALID_SIGNATURE\";\n  RevertReason[\"SignatureIllegal\"] = \"SIGNATURE_ILLEGAL\";\n  RevertReason[\"SignatureInvalid\"] = \"SIGNATURE_INVALID\";\n  RevertReason[\"SignatureUnsupported\"] = \"SIGNATURE_UNSUPPORTED\";\n  RevertReason[\"TakerOverpay\"] = \"TAKER_OVERPAY\";\n  RevertReason[\"OrderOverfill\"] = \"ORDER_OVERFILL\";\n  RevertReason[\"InvalidFillPrice\"] = \"INVALID_FILL_PRICE\";\n  RevertReason[\"InvalidNewOrderEpoch\"] = \"INVALID_NEW_ORDER_EPOCH\";\n  RevertReason[\"CompleteFillFailed\"] = \"COMPLETE_FILL_FAILED\";\n  RevertReason[\"NegativeSpreadRequired\"] = \"NEGATIVE_SPREAD_REQUIRED\";\n  RevertReason[\"ReentrancyIllegal\"] = \"REENTRANCY_ILLEGAL\";\n  RevertReason[\"InvalidTxHash\"] = \"INVALID_TX_HASH\";\n  RevertReason[\"InvalidTxSignature\"] = \"INVALID_TX_SIGNATURE\";\n  RevertReason[\"FailedExecution\"] = \"FAILED_EXECUTION\";\n  RevertReason[\"AssetProxyAlreadyExists\"] = \"ASSET_PROXY_ALREADY_EXISTS\";\n  RevertReason[\"LengthGreaterThan0Required\"] = \"LENGTH_GREATER_THAN_0_REQUIRED\";\n  RevertReason[\"LengthGreaterThan3Required\"] = \"LENGTH_GREATER_THAN_3_REQUIRED\";\n  RevertReason[\"LengthGreaterThan131Required\"] = \"LENGTH_GREATER_THAN_131_REQUIRED\";\n  RevertReason[\"Length0Required\"] = \"LENGTH_0_REQUIRED\";\n  RevertReason[\"Length65Required\"] = \"LENGTH_65_REQUIRED\";\n  RevertReason[\"InvalidAmount\"] = \"INVALID_AMOUNT\";\n  RevertReason[\"TransferFailed\"] = \"TRANSFER_FAILED\";\n  RevertReason[\"SenderNotAuthorized\"] = \"SENDER_NOT_AUTHORIZED\";\n  RevertReason[\"TargetNotAuthorized\"] = \"TARGET_NOT_AUTHORIZED\";\n  RevertReason[\"TargetAlreadyAuthorized\"] = \"TARGET_ALREADY_AUTHORIZED\";\n  RevertReason[\"IndexOutOfBounds\"] = \"INDEX_OUT_OF_BOUNDS\";\n  RevertReason[\"AuthorizedAddressMismatch\"] = \"AUTHORIZED_ADDRESS_MISMATCH\";\n  RevertReason[\"OnlyContractOwner\"] = \"ONLY_CONTRACT_OWNER\";\n  RevertReason[\"MakerNotWhitelisted\"] = \"MAKER_NOT_WHITELISTED\";\n  RevertReason[\"TakerNotWhitelisted\"] = \"TAKER_NOT_WHITELISTED\";\n  RevertReason[\"AssetProxyDoesNotExist\"] = \"ASSET_PROXY_DOES_NOT_EXIST\";\n  RevertReason[\"LengthMismatch\"] = \"LENGTH_MISMATCH\";\n  RevertReason[\"LibBytesGreaterThanZeroLengthRequired\"] = \"GREATER_THAN_ZERO_LENGTH_REQUIRED\";\n  RevertReason[\"LibBytesGreaterOrEqualTo4LengthRequired\"] = \"GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED\";\n  RevertReason[\"LibBytesGreaterOrEqualTo20LengthRequired\"] = \"GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED\";\n  RevertReason[\"LibBytesGreaterOrEqualTo32LengthRequired\"] = \"GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED\";\n  RevertReason[\"LibBytesGreaterOrEqualToNestedBytesLengthRequired\"] = \"GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED\";\n  RevertReason[\"LibBytesGreaterOrEqualToSourceBytesLengthRequired\"] = \"GREATER_OR_EQUAL_TO_SOURCE_BYTES_LENGTH_REQUIRED\";\n  RevertReason[\"Erc20InsufficientBalance\"] = \"ERC20_INSUFFICIENT_BALANCE\";\n  RevertReason[\"Erc20InsufficientAllowance\"] = \"ERC20_INSUFFICIENT_ALLOWANCE\";\n  RevertReason[\"FeePercentageTooLarge\"] = \"FEE_PERCENTAGE_TOO_LARGE\";\n  RevertReason[\"ValueGreaterThanZero\"] = \"VALUE_GREATER_THAN_ZERO\";\n  RevertReason[\"InvalidMsgValue\"] = \"INVALID_MSG_VALUE\";\n  RevertReason[\"InsufficientEthRemaining\"] = \"INSUFFICIENT_ETH_REMAINING\";\n  RevertReason[\"Uint256Overflow\"] = \"UINT256_OVERFLOW\";\n  RevertReason[\"Erc721ZeroToAddress\"] = \"ERC721_ZERO_TO_ADDRESS\";\n  RevertReason[\"Erc721OwnerMismatch\"] = \"ERC721_OWNER_MISMATCH\";\n  RevertReason[\"Erc721InvalidSpender\"] = \"ERC721_INVALID_SPENDER\";\n  RevertReason[\"Erc721ZeroOwner\"] = \"ERC721_ZERO_OWNER\";\n  RevertReason[\"Erc721InvalidSelector\"] = \"ERC721_INVALID_SELECTOR\";\n  RevertReason[\"WalletError\"] = \"WALLET_ERROR\";\n  RevertReason[\"ValidatorError\"] = \"VALIDATOR_ERROR\";\n  RevertReason[\"InvalidFunctionSelector\"] = \"INVALID_FUNCTION_SELECTOR\";\n  RevertReason[\"InvalidAssetData\"] = \"INVALID_ASSET_DATA\";\n  RevertReason[\"InvalidAssetProxy\"] = \"INVALID_ASSET_PROXY\";\n  RevertReason[\"UnregisteredAssetProxy\"] = \"UNREGISTERED_ASSET_PROXY\";\n  RevertReason[\"TxFullyConfirmed\"] = \"TX_FULLY_CONFIRMED\";\n  RevertReason[\"TxNotFullyConfirmed\"] = \"TX_NOT_FULLY_CONFIRMED\";\n  RevertReason[\"TimeLockIncomplete\"] = \"TIME_LOCK_INCOMPLETE\"; // LibAddressArray\n\n  RevertReason[\"InvalidFreeMemoryPtr\"] = \"INVALID_FREE_MEMORY_PTR\"; // DutchAuction\n\n  RevertReason[\"AuctionInvalidAmount\"] = \"INVALID_AMOUNT\";\n  RevertReason[\"AuctionExpired\"] = \"AUCTION_EXPIRED\";\n  RevertReason[\"AuctionNotStarted\"] = \"AUCTION_NOT_STARTED\";\n  RevertReason[\"AuctionInvalidBeginTime\"] = \"INVALID_BEGIN_TIME\";\n  RevertReason[\"InvalidAssetDataEnd\"] = \"INVALID_ASSET_DATA_END\"; // Balance Threshold Filter\n\n  RevertReason[\"InvalidOrBlockedExchangeSelector\"] = \"INVALID_OR_BLOCKED_EXCHANGE_SELECTOR\";\n  RevertReason[\"BalanceQueryFailed\"] = \"BALANCE_QUERY_FAILED\";\n  RevertReason[\"AtLeastOneAddressDoesNotMeetBalanceThreshold\"] = \"AT_LEAST_ONE_ADDRESS_DOES_NOT_MEET_BALANCE_THRESHOLD\";\n  RevertReason[\"FromLessThanToRequired\"] = \"FROM_LESS_THAN_TO_REQUIRED\";\n  RevertReason[\"ToLessThanLengthRequired\"] = \"TO_LESS_THAN_LENGTH_REQUIRED\";\n  RevertReason[\"InvalidApprovalSignature\"] = \"INVALID_APPROVAL_SIGNATURE\";\n  RevertReason[\"ApprovalExpired\"] = \"APPROVAL_EXPIRED\";\n  RevertReason[\"InvalidOrigin\"] = \"INVALID_ORIGIN\"; // ERC1155\n\n  RevertReason[\"AmountEqualToOneRequired\"] = \"AMOUNT_EQUAL_TO_ONE_REQUIRED\";\n  RevertReason[\"BadReceiverReturnValue\"] = \"BAD_RECEIVER_RETURN_VALUE\";\n  RevertReason[\"CannotTransferToAddressZero\"] = \"CANNOT_TRANSFER_TO_ADDRESS_ZERO\";\n  RevertReason[\"InsufficientAllowance\"] = \"INSUFFICIENT_ALLOWANCE\";\n  RevertReason[\"NFTNotOwnedByFromAddress\"] = \"NFT_NOT_OWNED_BY_FROM_ADDRESS\";\n  RevertReason[\"OwnersAndIdsMustHaveSameLength\"] = \"OWNERS_AND_IDS_MUST_HAVE_SAME_LENGTH\";\n  RevertReason[\"TokenAndValuesLengthMismatch\"] = \"TOKEN_AND_VALUES_LENGTH_MISMATCH\";\n  RevertReason[\"TriedToMintFungibleForNonFungibleToken\"] = \"TRIED_TO_MINT_FUNGIBLE_FOR_NON_FUNGIBLE_TOKEN\";\n  RevertReason[\"TriedToMintNonFungibleForFungibleToken\"] = \"TRIED_TO_MINT_NON_FUNGIBLE_FOR_FUNGIBLE_TOKEN\";\n  RevertReason[\"TransferRejected\"] = \"TRANSFER_REJECTED\";\n  RevertReason[\"Uint256Underflow\"] = \"UINT256_UNDERFLOW\";\n  RevertReason[\"InvalidIdsOffset\"] = \"INVALID_IDS_OFFSET\";\n  RevertReason[\"InvalidValuesOffset\"] = \"INVALID_VALUES_OFFSET\";\n  RevertReason[\"InvalidDataOffset\"] = \"INVALID_DATA_OFFSET\";\n  RevertReason[\"InvalidAssetDataLength\"] = \"INVALID_ASSET_DATA_LENGTH\"; // StaticCall\n\n  RevertReason[\"InvalidStaticCallDataOffset\"] = \"INVALID_STATIC_CALL_DATA_OFFSET\";\n  RevertReason[\"TargetNotEven\"] = \"TARGET_NOT_EVEN\";\n  RevertReason[\"UnexpectedStaticCallResult\"] = \"UNEXPECTED_STATIC_CALL_RESULT\";\n})(RevertReason = exports.RevertReason || (exports.RevertReason = {}));\n\nvar StatusCodes;\n\n(function (StatusCodes) {\n  StatusCodes[StatusCodes[\"Success\"] = 200] = \"Success\";\n  StatusCodes[StatusCodes[\"NotFound\"] = 404] = \"NotFound\";\n  StatusCodes[StatusCodes[\"InternalError\"] = 500] = \"InternalError\";\n  StatusCodes[StatusCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n  StatusCodes[StatusCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(StatusCodes = exports.StatusCodes || (exports.StatusCodes = {}));\n\nvar OrdersChannelMessageTypes;\n\n(function (OrdersChannelMessageTypes) {\n  OrdersChannelMessageTypes[\"Update\"] = \"update\";\n  OrdersChannelMessageTypes[\"Unknown\"] = \"unknown\";\n})(OrdersChannelMessageTypes = exports.OrdersChannelMessageTypes || (exports.OrdersChannelMessageTypes = {}));\n\nvar WebsocketConnectionEventType;\n\n(function (WebsocketConnectionEventType) {\n  WebsocketConnectionEventType[\"Close\"] = \"close\";\n  WebsocketConnectionEventType[\"Error\"] = \"error\";\n  WebsocketConnectionEventType[\"Message\"] = \"message\";\n})(WebsocketConnectionEventType = exports.WebsocketConnectionEventType || (exports.WebsocketConnectionEventType = {}));\n\nvar WebsocketClientEventType;\n\n(function (WebsocketClientEventType) {\n  WebsocketClientEventType[\"Connect\"] = \"connect\";\n  WebsocketClientEventType[\"ConnectFailed\"] = \"connectFailed\";\n})(WebsocketClientEventType = exports.WebsocketClientEventType || (exports.WebsocketClientEventType = {}));\n\nvar TypeDocTypes;\n\n(function (TypeDocTypes) {\n  TypeDocTypes[\"Intrinsic\"] = \"intrinsic\";\n  TypeDocTypes[\"Reference\"] = \"reference\";\n  TypeDocTypes[\"Array\"] = \"array\";\n  TypeDocTypes[\"StringLiteral\"] = \"stringLiteral\";\n  TypeDocTypes[\"Reflection\"] = \"reflection\";\n  TypeDocTypes[\"Union\"] = \"union\";\n  TypeDocTypes[\"TypeParameter\"] = \"typeParameter\";\n  TypeDocTypes[\"Intersection\"] = \"intersection\";\n  TypeDocTypes[\"Tuple\"] = \"tuple\";\n  TypeDocTypes[\"Unknown\"] = \"unknown\";\n})(TypeDocTypes = exports.TypeDocTypes || (exports.TypeDocTypes = {}));","map":null,"metadata":{},"sourceType":"script"}