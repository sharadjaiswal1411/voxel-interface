{"ast":null,"code":"import _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ZERO } from '@kyberswap/ks-sdk-classic';\nimport { Percent, Rounding, Token } from '@kyberswap/ks-sdk-core';\nimport { getAddress } from 'ethers/lib/utils';\nimport JSBI from 'jsbi';\n\nfunction formatRoutesV2(routes) {\n  if (!routes.length) {\n    return [];\n  }\n\n  try {\n    var itemIndex = -1;\n    var routesGroup = routes.reduce(function (a, b) {\n      var _b$pools$;\n\n      var index;\n      var subRoutes = [];\n      var swapPercentage = b.pools && ((_b$pools$ = b.pools[0]) === null || _b$pools$ === void 0 ? void 0 : _b$pools$.swapPercentage) || 0;\n\n      if (a[b.slug]) {\n        var route = a[b.slug] || {};\n        index = route.index;\n        var temp = route.subRoutes || [];\n        swapPercentage += route.swapPercentage || 0;\n        temp.forEach(function (sub, ind) {\n          var swapPool = b.pools && b.pools[ind] || {};\n          var totalSwapAmount = JSBI.add(sub.reduce(function (sum, x2) {\n            return JSBI.add(sum, x2.swapAmount || ZERO);\n          }, ZERO), swapPool.swapAmount || ZERO); // merge hop with same pools\n\n          var existed = false;\n          var newSub = sub.map(function (pool) {\n            var p2 = _objectSpread({}, pool);\n\n            var same = p2.id === swapPool.id;\n            var swapAmount = p2.swapAmount || ZERO;\n\n            if (same) {\n              existed = true;\n              swapAmount = JSBI.add(swapAmount, swapPool.swapAmount || ZERO);\n            }\n\n            var percent = new Percent(swapAmount, totalSwapAmount).toFixed(0, undefined, Rounding.ROUND_HALF_UP);\n            p2.swapPercentage = parseInt(percent);\n            p2.total = totalSwapAmount.toString();\n            return p2;\n          });\n\n          if (!existed) {\n            var percent = new Percent(swapPool.swapAmount || ZERO, totalSwapAmount).toFixed(0, undefined, Rounding.ROUND_HALF_UP);\n            newSub.push(_objectSpread(_objectSpread({}, swapPool), {}, {\n              swapPercentage: parseInt(percent)\n            }));\n          }\n\n          subRoutes[ind] = newSub;\n        });\n      } else {\n        itemIndex += 1;\n        index = itemIndex;\n        subRoutes = b.pools.map(function (p) {\n          return [_objectSpread(_objectSpread({}, p), {}, {\n            swapPercentage: 100\n          })];\n        });\n      }\n\n      return Object.assign({}, a, _defineProperty({}, b.slug, {\n        index: index,\n        swapPercentage: swapPercentage,\n        path: b.path,\n        subRoutes: subRoutes\n      }));\n    }, {});\n    var routesV2Length = Object.keys(routesGroup).length;\n    var routesV2 = new Array(routesV2Length).map(function () {\n      return {};\n    });\n    Object.values(routesGroup).forEach(function (route) {\n      if (route.index > routesV2Length) return;\n      routesV2.splice(route.index, 1, {\n        swapPercentage: route.swapPercentage,\n        path: route.path,\n        subRoutes: route.subRoutes,\n        id: route.subRoutes.flat().map(function (route) {\n          return route.id;\n        }).join('-')\n      });\n    });\n    return routesV2;\n  } catch (e) {\n    console.error('[error_routesV2]', e);\n    return [];\n  }\n}\n\nexport function getTradeComposition(trade, chainId, allTokens) {\n  var _trade$inputAmount;\n\n  if (!trade || !trade.swaps || !chainId) {\n    return undefined;\n  }\n\n  var inputTokenAmount = (_trade$inputAmount = trade.inputAmount) === null || _trade$inputAmount === void 0 ? void 0 : _trade$inputAmount.wrapped;\n\n  var calcSwapPercentage = function calcSwapPercentage(tokenIn, amount) {\n    var _inputTokenAmount$cur;\n\n    if (!tokenIn || !amount) {\n      return undefined;\n    }\n\n    var exactTokenIn = (tokenIn === null || tokenIn === void 0 ? void 0 : tokenIn.toLowerCase()) === (inputTokenAmount === null || inputTokenAmount === void 0 ? void 0 : (_inputTokenAmount$cur = inputTokenAmount.currency.address) === null || _inputTokenAmount$cur === void 0 ? void 0 : _inputTokenAmount$cur.toLowerCase());\n\n    if (exactTokenIn && trade.inputAmount.greaterThan(JSBI.BigInt(0))) {\n      var percent = new Percent(JSBI.BigInt(amount || 0), trade.inputAmount.quotient).toFixed(0);\n      return parseInt(percent);\n    }\n\n    return undefined;\n  };\n\n  var tokens = trade.tokens || {};\n  var routes = []; // Convert all Swaps to ChartSwaps\n\n  trade.swaps.forEach(function (sorMultiSwap) {\n    if (sorMultiSwap.length === 1) {\n      var _hop$tokenOut, _hop$pool, _hop$pool2;\n\n      var hop = sorMultiSwap[0];\n      var path = [(allTokens === null || allTokens === void 0 ? void 0 : allTokens[getAddress(hop.tokenIn)]) || tokens[hop.tokenIn], (allTokens === null || allTokens === void 0 ? void 0 : allTokens[getAddress(hop.tokenOut)]) || tokens[hop.tokenOut]];\n      routes.push({\n        slug: (_hop$tokenOut = hop.tokenOut) === null || _hop$tokenOut === void 0 ? void 0 : _hop$tokenOut.toLowerCase(),\n        pools: [{\n          id: (_hop$pool = hop.pool) === null || _hop$pool === void 0 ? void 0 : _hop$pool.toLowerCase(),\n          exchange: hop.exchange,\n          swapAmount: JSBI.BigInt(hop.swapAmount),\n          swapPercentage: calcSwapPercentage(hop.tokenIn, hop.swapAmount)\n        }],\n        path: path,\n        id: (_hop$pool2 = hop.pool) === null || _hop$pool2 === void 0 ? void 0 : _hop$pool2.toLowerCase()\n      });\n    } else if (sorMultiSwap.length > 1) {\n      var _path = [];\n      var pools = [];\n      sorMultiSwap.forEach(function (hop, index) {\n        var _hop$pool3;\n\n        pools.push({\n          id: (_hop$pool3 = hop.pool) === null || _hop$pool3 === void 0 ? void 0 : _hop$pool3.toLowerCase(),\n          exchange: hop.exchange,\n          swapAmount: JSBI.BigInt(hop.swapAmount),\n          swapPercentage: index === 0 ? calcSwapPercentage(hop.tokenIn, hop.swapAmount) : 100\n        });\n\n        if (index === 0) {\n          var _token = tokens[hop.tokenIn] || {};\n\n          _path.push((allTokens === null || allTokens === void 0 ? void 0 : allTokens[getAddress(_token.address)]) || new Token(chainId, _token.address, _token.decimals, _token.symbol, _token.name));\n        }\n\n        var token = tokens[hop.tokenOut] || {};\n\n        _path.push((allTokens === null || allTokens === void 0 ? void 0 : allTokens[getAddress(token.address)]) || new Token(chainId, token.address, token.decimals, token.symbol, token.name));\n      });\n      routes.push({\n        slug: _path.slice(1).map(function (t) {\n          return t.address;\n        }).join('-').toLowerCase(),\n        path: _path,\n        pools: pools,\n        id: pools.map(function (p) {\n          return p.id;\n        }).join('-')\n      });\n    }\n  }); // Convert to ChartSwaps v2\n\n  return formatRoutesV2(routes);\n}","map":{"version":3,"names":["ZERO","Percent","Rounding","Token","getAddress","JSBI","formatRoutesV2","routes","length","itemIndex","routesGroup","reduce","a","b","index","subRoutes","swapPercentage","pools","slug","route","temp","forEach","sub","ind","swapPool","totalSwapAmount","add","sum","x2","swapAmount","existed","newSub","map","pool","p2","same","id","percent","toFixed","undefined","ROUND_HALF_UP","parseInt","total","toString","push","p","Object","assign","path","routesV2Length","keys","routesV2","Array","values","splice","flat","join","e","console","error","getTradeComposition","trade","chainId","allTokens","swaps","inputTokenAmount","inputAmount","wrapped","calcSwapPercentage","tokenIn","amount","exactTokenIn","toLowerCase","currency","address","greaterThan","BigInt","quotient","tokens","sorMultiSwap","hop","tokenOut","exchange","token","decimals","symbol","name","slice","t"],"sources":["/Applications/XAMPP/voxel-interface/src/utils/aggregationRouting.ts"],"sourcesContent":["import { ZERO } from '@kyberswap/ks-sdk-classic'\nimport { ChainId, Percent, Rounding, Token } from '@kyberswap/ks-sdk-core'\nimport { getAddress } from 'ethers/lib/utils'\nimport JSBI from 'jsbi'\n\nimport { Aggregator } from './aggregator'\n\ninterface SwapPool {\n  id: string\n  exchange: string\n  swapAmount?: JSBI\n  swapPercentage?: number\n}\n\ntype PathItem = Token\n\ninterface SwapRoute {\n  slug: string\n  pools: SwapPool[]\n  path: PathItem[]\n  id: string\n}\n\nexport interface SwapRouteV2 {\n  swapPercentage?: number\n  path: PathItem[]\n  subRoutes: SwapPool[][]\n  id: string\n}\n\nfunction formatRoutesV2(routes: SwapRoute[]): SwapRouteV2[] {\n  if (!routes.length) {\n    return []\n  }\n  try {\n    let itemIndex = -1\n    const routesGroup = routes.reduce((a, b) => {\n      let index: number\n      let subRoutes: any[][] = []\n      let swapPercentage: number = (b.pools && b.pools[0]?.swapPercentage) || 0\n      if (a[b.slug]) {\n        const route: any = a[b.slug] || {}\n        index = route.index\n        const temp = route.subRoutes || []\n        swapPercentage += route.swapPercentage || 0\n        temp.forEach((sub: any[], ind: number) => {\n          const swapPool: any = (b.pools && b.pools[ind]) || ({} as any)\n          const totalSwapAmount = JSBI.add(\n            sub.reduce((sum, x2) => JSBI.add(sum, x2.swapAmount || ZERO), ZERO),\n            swapPool.swapAmount || ZERO,\n          )\n          // merge hop with same pools\n          let existed = false\n          const newSub: any[] = sub.map(pool => {\n            const p2: any = { ...pool }\n            const same = p2.id === swapPool.id\n            let swapAmount = p2.swapAmount || ZERO\n            if (same) {\n              existed = true\n              swapAmount = JSBI.add(swapAmount, swapPool.swapAmount || ZERO)\n            }\n            const percent = new Percent(swapAmount, totalSwapAmount).toFixed(0, undefined, Rounding.ROUND_HALF_UP)\n            p2.swapPercentage = parseInt(percent)\n            p2.total = totalSwapAmount.toString()\n            return p2\n          })\n          if (!existed) {\n            const percent = new Percent(swapPool.swapAmount || ZERO, totalSwapAmount).toFixed(\n              0,\n              undefined,\n              Rounding.ROUND_HALF_UP,\n            )\n            newSub.push({ ...swapPool, swapPercentage: parseInt(percent) })\n          }\n          subRoutes[ind] = newSub\n        })\n      } else {\n        itemIndex += 1\n        index = itemIndex\n        subRoutes = b.pools.map(p => [{ ...p, swapPercentage: 100 }])\n      }\n      return Object.assign({}, a, {\n        [b.slug]: { index, swapPercentage, path: b.path, subRoutes },\n      })\n    }, {} as any)\n\n    const routesV2Length = Object.keys(routesGroup).length\n    const routesV2: SwapRouteV2[] = new Array(routesV2Length).map(() => ({} as SwapRouteV2))\n\n    Object.values(routesGroup).forEach((route: any) => {\n      if (route.index > routesV2Length) return\n      routesV2.splice(route.index, 1, {\n        swapPercentage: route.swapPercentage,\n        path: route.path,\n        subRoutes: route.subRoutes,\n        id: route.subRoutes\n          .flat()\n          .map((route: SwapPool) => route.id)\n          .join('-'),\n      })\n    })\n    return routesV2\n  } catch (e) {\n    console.error('[error_routesV2]', e)\n    return []\n  }\n}\n\nexport function getTradeComposition(\n  trade?: Aggregator,\n  chainId?: ChainId,\n  allTokens?: { [address: string]: Token },\n): SwapRouteV2[] | undefined {\n  if (!trade || !trade.swaps || !chainId) {\n    return undefined\n  }\n  const inputTokenAmount = trade.inputAmount?.wrapped\n\n  const calcSwapPercentage = function (tokenIn: string, amount: string): number | undefined {\n    if (!tokenIn || !amount) {\n      return undefined\n    }\n    const exactTokenIn = tokenIn?.toLowerCase() === inputTokenAmount?.currency.address?.toLowerCase()\n    if (exactTokenIn && trade.inputAmount.greaterThan(JSBI.BigInt(0))) {\n      const percent = new Percent(JSBI.BigInt(amount || 0), trade.inputAmount.quotient).toFixed(0)\n      return parseInt(percent)\n    }\n    return undefined\n  }\n\n  const tokens = trade.tokens || ({} as any)\n  const routes: SwapRoute[] = []\n\n  // Convert all Swaps to ChartSwaps\n  trade.swaps.forEach(sorMultiSwap => {\n    if (sorMultiSwap.length === 1) {\n      const hop = sorMultiSwap[0]\n      const path = [\n        allTokens?.[getAddress(hop.tokenIn)] || tokens[hop.tokenIn],\n        allTokens?.[getAddress(hop.tokenOut)] || tokens[hop.tokenOut],\n      ]\n      routes.push({\n        slug: hop.tokenOut?.toLowerCase(),\n        pools: [\n          {\n            id: hop.pool?.toLowerCase(),\n            exchange: hop.exchange,\n            swapAmount: JSBI.BigInt(hop.swapAmount),\n            swapPercentage: calcSwapPercentage(hop.tokenIn, hop.swapAmount),\n          },\n        ],\n        path,\n        id: hop.pool?.toLowerCase(),\n      })\n    } else if (sorMultiSwap.length > 1) {\n      const path: PathItem[] = []\n      const pools: SwapPool[] = []\n      sorMultiSwap.forEach((hop: any, index: number) => {\n        pools.push({\n          id: hop.pool?.toLowerCase(),\n          exchange: hop.exchange,\n          swapAmount: JSBI.BigInt(hop.swapAmount),\n          swapPercentage: index === 0 ? calcSwapPercentage(hop.tokenIn, hop.swapAmount) : 100,\n        })\n        if (index === 0) {\n          const token = tokens[hop.tokenIn] || ({} as any)\n          path.push(\n            allTokens?.[getAddress(token.address)] ||\n              new Token(chainId, token.address, token.decimals, token.symbol, token.name),\n          )\n        }\n        const token = tokens[hop.tokenOut] || ({} as any)\n        path.push(\n          allTokens?.[getAddress(token.address)] ||\n            new Token(chainId, token.address, token.decimals, token.symbol, token.name),\n        )\n      })\n      routes.push({\n        slug: path\n          .slice(1)\n          .map(t => t.address)\n          .join('-')\n          .toLowerCase(),\n        path,\n        pools,\n        id: pools.map(p => p.id).join('-'),\n      })\n    }\n  })\n\n  // Convert to ChartSwaps v2\n  return formatRoutesV2(routes)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}