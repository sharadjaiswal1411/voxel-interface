{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/components/AddToMetamask/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport MetaMaskLogo from 'assets/images/metamask.png';\nimport { ButtonEmpty } from 'components/Button';\nimport { RowFixed } from 'components/Row';\nimport { getTokenLogoURL } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledLogo = styled.img.withConfig({\n  displayName: \"AddToMetamask__StyledLogo\",\n  componentId: \"sc-c1soa0-0\"\n})([\"height:16px;width:16px;\"]);\n_c = StyledLogo;\nexport default function AddTokenToMetaMask(_ref) {\n  var token = _ref.token,\n      chainId = _ref.chainId;\n\n  function addToMetaMask() {\n    return _addToMetaMask.apply(this, arguments);\n  }\n\n  function _addToMetaMask() {\n    _addToMetaMask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var tokenAddress, tokenSymbol, tokenDecimals, tokenImage, _window, ethereum, isMetaMask;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tokenAddress = token.address;\n              tokenSymbol = token.symbol;\n              tokenDecimals = token.decimals;\n              tokenImage = getTokenLogoURL(token.address, chainId);\n              _context.prev = 4;\n              _window = window, ethereum = _window.ethereum;\n              isMetaMask = !!(ethereum && ethereum.isMetaMask);\n\n              if (!isMetaMask) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return window.ethereum.request({\n                method: 'wallet_watchAsset',\n                params: {\n                  type: 'ERC20',\n                  options: {\n                    address: tokenAddress,\n                    symbol: tokenSymbol,\n                    decimals: tokenDecimals,\n                    image: tokenImage\n                  }\n                }\n              });\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 12]]);\n    }));\n    return _addToMetaMask.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ButtonEmpty, {\n    mt: \"12px\",\n    padding: \"0\",\n    width: \"fit-content\",\n    onClick: addToMetaMask,\n    children: /*#__PURE__*/_jsxDEV(RowFixed, {\n      children: /*#__PURE__*/_jsxDEV(StyledLogo, {\n        src: MetaMaskLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AddTokenToMetaMask;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLogo\");\n$RefreshReg$(_c2, \"AddTokenToMetaMask\");","map":{"version":3,"names":["React","styled","MetaMaskLogo","ButtonEmpty","RowFixed","getTokenLogoURL","StyledLogo","img","AddTokenToMetaMask","token","chainId","addToMetaMask","tokenAddress","address","tokenSymbol","symbol","tokenDecimals","decimals","tokenImage","window","ethereum","isMetaMask","request","method","params","type","options","image","console","log"],"sources":["/Applications/XAMPP/voxel-interface/src/components/AddToMetamask/index.tsx"],"sourcesContent":["import { ChainId, Token } from '@kyberswap/ks-sdk-core'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport MetaMaskLogo from 'assets/images/metamask.png'\nimport { ButtonEmpty } from 'components/Button'\nimport { RowFixed } from 'components/Row'\nimport { getTokenLogoURL } from 'utils'\n\nconst StyledLogo = styled.img`\n  height: 16px;\n  width: 16px;\n`\n\nexport default function AddTokenToMetaMask({ token, chainId }: { token: Token; chainId: ChainId }) {\n  async function addToMetaMask() {\n    const tokenAddress = token.address\n    const tokenSymbol = token.symbol\n    const tokenDecimals = token.decimals\n    const tokenImage = getTokenLogoURL(token.address, chainId)\n\n    try {\n      const { ethereum } = window\n      const isMetaMask = !!(ethereum && ethereum.isMetaMask)\n      if (isMetaMask) {\n        await (window.ethereum as any).request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: tokenAddress,\n              symbol: tokenSymbol,\n              decimals: tokenDecimals,\n              image: tokenImage,\n            },\n          },\n        })\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <ButtonEmpty mt=\"12px\" padding=\"0\" width=\"fit-content\" onClick={addToMetaMask}>\n      <RowFixed>\n        <StyledLogo src={MetaMaskLogo} />\n      </RowFixed>\n    </ButtonEmpty>\n  )\n}\n"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAEA,IAAMC,UAAU,GAAGL,MAAM,CAACM,GAAV;EAAA;EAAA;AAAA,+BAAhB;KAAMD,U;AAKN,eAAe,SAASE,kBAAT,OAAoF;EAAA,IAAtDC,KAAsD,QAAtDA,KAAsD;EAAA,IAA/CC,OAA+C,QAA/CA,OAA+C;;EAAA,SAClFC,aADkF;IAAA;EAAA;;EAAA;IAAA,4EACjG;MAAA;;MAAA;QAAA;UAAA;YAAA;cACQC,YADR,GACuBH,KAAK,CAACI,OAD7B;cAEQC,WAFR,GAEsBL,KAAK,CAACM,MAF5B;cAGQC,aAHR,GAGwBP,KAAK,CAACQ,QAH9B;cAIQC,UAJR,GAIqBb,eAAe,CAACI,KAAK,CAACI,OAAP,EAAgBH,OAAhB,CAJpC;cAAA;cAAA,UAOyBS,MAPzB,EAOYC,QAPZ,WAOYA,QAPZ;cAQUC,UARV,GAQuB,CAAC,EAAED,QAAQ,IAAIA,QAAQ,CAACC,UAAvB,CARxB;;cAAA,KASQA,UATR;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAUaF,MAAM,CAACC,QAAR,CAAyBE,OAAzB,CAAiC;gBACrCC,MAAM,EAAE,mBAD6B;gBAErCC,MAAM,EAAE;kBACNC,IAAI,EAAE,OADA;kBAENC,OAAO,EAAE;oBACPb,OAAO,EAAED,YADF;oBAEPG,MAAM,EAAED,WAFD;oBAGPG,QAAQ,EAAED,aAHH;oBAIPW,KAAK,EAAET;kBAJA;gBAFH;cAF6B,CAAjC,CAVZ;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAwBIU,OAAO,CAACC,GAAR;;YAxBJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CADiG;IAAA;EAAA;;EA6BjG,oBACE,QAAC,WAAD;IAAa,EAAE,EAAC,MAAhB;IAAuB,OAAO,EAAC,GAA/B;IAAmC,KAAK,EAAC,aAAzC;IAAuD,OAAO,EAAElB,aAAhE;IAAA,uBACE,QAAC,QAAD;MAAA,uBACE,QAAC,UAAD;QAAY,GAAG,EAAET;MAAjB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;MApCuBM,kB"},"metadata":{},"sourceType":"module"}