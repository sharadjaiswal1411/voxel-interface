{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Applications/XAMPP/voxel-interface/src/pages/AddLiquidity/ZapIn.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Fraction, WETH, computePriceImpact } from '@kyberswap/ks-sdk-core';\nimport { captureException } from '@sentry/react';\nimport { parseUnits } from 'ethers/lib/utils';\nimport JSBI from 'jsbi';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { AlertTriangle } from 'react-feather';\nimport { Flex, Text } from 'rebass';\nimport { ButtonError, ButtonLight, ButtonPrimary } from 'components/Button';\nimport { AutoColumn } from 'components/Column';\nimport { ConfirmAddModalBottom } from 'components/ConfirmAddModalBottom';\nimport CurrencyInputPanel from 'components/CurrencyInputPanel';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport CurrentPrice from 'components/CurrentPrice';\nimport Loader from 'components/Loader';\nimport { PoolPriceBar, PoolPriceRangeBar, ToggleComponent } from 'components/PoolPriceBar';\nimport QuestionHelper from 'components/QuestionHelper';\nimport Row, { AutoRow, RowBetween, RowFlat } from 'components/Row';\nimport TransactionConfirmationModal, { ConfirmationModalContent, TransactionErrorContent } from 'components/TransactionConfirmationModal';\nimport ZapError from 'components/ZapError';\nimport FormattedPriceImpact from 'components/swap/FormattedPriceImpact';\nimport { AMP_HINT } from 'constants/index';\nimport { NETWORKS_INFO } from 'constants/networks';\nimport { nativeOnChain } from 'constants/tokens';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCurrency } from 'hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback';\nimport useTheme from 'hooks/useTheme';\nimport useTokensMarketPrice from 'hooks/useTokensMarketPrice';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks';\nimport { Field } from 'state/mint/actions';\nimport { useDerivedZapInInfo, useMintState, useZapInActionHandlers } from 'state/mint/hooks';\nimport { tryParseAmount } from 'state/swap/hooks';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from 'state/user/hooks';\nimport { StyledInternalLink, TYPE, UppercaseText } from 'theme';\nimport { calculateGasMargin, formattedNum, getZapContract } from 'utils';\nimport { currencyId } from 'utils/currencyId';\nimport { feeRangeCalc, useCurrencyConvertedToNative } from 'utils/dmm';\nimport isZero from 'utils/isZero';\nimport { maxAmountSpend } from 'utils/maxAmountSpend';\nimport { computePriceImpactWithoutFee, warningSeverity } from 'utils/prices';\nimport { PairState } from '../../data/Reserves';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ActiveText, CurrentPriceWrapper, DetailBox, DynamicFeeRangeWrapper, FirstColumn, GridColumn, PoolRatioWrapper, SecondColumn, Section, TokenWrapper, USDPrice, Warning } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ZapIn = function ZapIn(_ref) {\n  _s();\n\n  var _currencies$independe, _currencies$independe2, _parsedAmounts$depend, _parsedAmounts$depend2, _formattedAmounts, _NETWORKS_INFO$chainI, _NETWORKS_INFO$chainI2, _parsedAmounts$indepe, _parsedAmounts$depend3;\n\n  var currencyIdA = _ref.currencyIdA,\n      currencyIdB = _ref.currencyIdB,\n      pairAddress = _ref.pairAddress;\n\n  var _useActiveWeb3React = useActiveWeb3React(),\n      account = _useActiveWeb3React.account,\n      library = _useActiveWeb3React.library,\n      chainId = _useActiveWeb3React.chainId;\n\n  var theme = useTheme();\n  var currencyA = useCurrency(currencyIdA);\n  var currencyB = useCurrency(currencyIdB);\n  var toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      zapInError = _useState2[0],\n      setZapInError = _useState2[1];\n\n  var expertMode = useIsExpertMode(); // mint state\n\n  var _useMintState = useMintState(),\n      independentField = _useMintState.independentField,\n      typedValue = _useMintState.typedValue,\n      otherTypedValue = _useMintState.otherTypedValue;\n\n  var _useDerivedZapInInfo = useDerivedZapInInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined, pairAddress),\n      dependentField = _useDerivedZapInInfo.dependentField,\n      currencies = _useDerivedZapInInfo.currencies,\n      pair = _useDerivedZapInInfo.pair,\n      pairState = _useDerivedZapInInfo.pairState,\n      currencyBalances = _useDerivedZapInInfo.currencyBalances,\n      parsedAmounts = _useDerivedZapInInfo.parsedAmounts,\n      price = _useDerivedZapInInfo.price,\n      noLiquidity = _useDerivedZapInInfo.noLiquidity,\n      liquidityMinted = _useDerivedZapInInfo.liquidityMinted,\n      poolTokenPercentage = _useDerivedZapInInfo.poolTokenPercentage,\n      insufficientLiquidity = _useDerivedZapInInfo.insufficientLiquidity,\n      error = _useDerivedZapInInfo.error,\n      unAmplifiedPairAddress = _useDerivedZapInInfo.unAmplifiedPairAddress,\n      isStaticFeePair = _useDerivedZapInInfo.isStaticFeePair,\n      isOldStaticFeeContract = _useDerivedZapInInfo.isOldStaticFeeContract;\n\n  var nativeA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A]);\n  var nativeB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B]);\n  var independentToken = nativeA && nativeB ? independentField === Field.CURRENCY_A ? nativeA : nativeB : undefined;\n  var dependentToken = nativeA && nativeB ? independentField === Field.CURRENCY_A ? nativeB : nativeA : undefined;\n  var selectedCurrencyIsETHER = !!(chainId && currencies[independentField] && (_currencies$independe = currencies[independentField]) !== null && _currencies$independe !== void 0 && _currencies$independe.isNative);\n  var selectedCurrencyIsWETH = !!(chainId && currencies[independentField] && (_currencies$independe2 = currencies[independentField]) !== null && _currencies$independe2 !== void 0 && _currencies$independe2.equals(WETH[chainId]));\n  var amp = (pair === null || pair === void 0 ? void 0 : pair.amp) || JSBI.BigInt(0);\n  var ampConvertedInBps = !!amp.toString() ? new Fraction(JSBI.BigInt(parseUnits(amp.toString() || '1', 20)), JSBI.BigInt(parseUnits('1', 16))) : undefined;\n  var linkToUnamplifiedPool = !!ampConvertedInBps && ampConvertedInBps.equalTo(JSBI.BigInt(10000)) && !!unAmplifiedPairAddress && !isZero(unAmplifiedPairAddress);\n\n  var _useZapInActionHandle = useZapInActionHandlers(),\n      onFieldInput = _useZapInActionHandle.onFieldInput,\n      onSwitchField = _useZapInActionHandle.onSwitchField;\n\n  var isValid = !error && !insufficientLiquidity; // modal and loading\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showConfirm = _useState4[0],\n      setShowConfirm = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      attemptingTxn = _useState6[0],\n      setAttemptingTxn = _useState6[1]; // clicked confirm\n  // txn values\n\n\n  var deadline = useTransactionDeadline(); // custom from users settings\n\n  var _useUserSlippageToler = useUserSlippageTolerance(),\n      _useUserSlippageToler2 = _slicedToArray(_useUserSlippageToler, 1),\n      allowedSlippage = _useUserSlippageToler2[0]; // custom from users\n\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      txHash = _useState8[0],\n      setTxHash = _useState8[1]; // get formatted amounts\n\n\n  var formattedAmounts = (_formattedAmounts = {}, _defineProperty(_formattedAmounts, independentField, typedValue), _defineProperty(_formattedAmounts, dependentField, noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''), _formattedAmounts); // get the max amounts user can add\n\n  var maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(function (accumulator, field) {\n    return _objectSpread(_objectSpread({}, accumulator), {}, _defineProperty({}, field, maxAmountSpend(currencyBalances[field])));\n  }, {}); // check whether the user has approved the router on the tokens\n\n  var amountToApprove = tryParseAmount(typedValue, currencies[independentField]);\n\n  var _useApproveCallback = useApproveCallback(amountToApprove, !!chainId ? isStaticFeePair ? isOldStaticFeeContract ? (_NETWORKS_INFO$chainI = NETWORKS_INFO[chainId].classic.oldStatic) === null || _NETWORKS_INFO$chainI === void 0 ? void 0 : _NETWORKS_INFO$chainI.zap : NETWORKS_INFO[chainId].classic.static.zap : (_NETWORKS_INFO$chainI2 = NETWORKS_INFO[chainId].classic.dynamic) === null || _NETWORKS_INFO$chainI2 === void 0 ? void 0 : _NETWORKS_INFO$chainI2.zap : undefined),\n      _useApproveCallback2 = _slicedToArray(_useApproveCallback, 2),\n      approval = _useApproveCallback2[0],\n      approveCallback = _useApproveCallback2[1];\n\n  var userInCurrencyAmount = useMemo(function () {\n    var _currencies$independe3;\n\n    return tryParseAmount(typedValue, (_currencies$independe3 = currencies[independentField]) === null || _currencies$independe3 === void 0 ? void 0 : _currencies$independe3.wrapped, true);\n  }, [currencies, independentField, typedValue]);\n  var userIn = useMemo(function () {\n    return userInCurrencyAmount ? BigNumber.from(userInCurrencyAmount.quotient.toString()) : undefined;\n  }, [userInCurrencyAmount]);\n  var minLPQty = !liquidityMinted ? JSBI.BigInt(0) : JSBI.divide(JSBI.multiply(liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.quotient, JSBI.BigInt(10000 - allowedSlippage)), JSBI.BigInt(10000));\n  var addTransactionWithType = useTransactionAdder();\n\n  function onZapIn() {\n    return _onZapIn.apply(this, arguments);\n  }\n\n  function _onZapIn() {\n    _onZapIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _currencies$independe4, _currencies$dependent, _currencies$independe5;\n\n      var zapContract, tokenIn, tokenOut, parsedAmountA, parsedAmountB, estimate, method, args, value;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!chainId || !library || !account)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              zapContract = getZapContract(chainId, library, account, isStaticFeePair, isOldStaticFeeContract);\n\n              if (!(!chainId || !account)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              tokenIn = (_currencies$independe4 = currencies[independentField]) === null || _currencies$independe4 === void 0 ? void 0 : _currencies$independe4.wrapped;\n              tokenOut = (_currencies$dependent = currencies[dependentField]) === null || _currencies$dependent === void 0 ? void 0 : _currencies$dependent.wrapped;\n\n              if (!(!pair || !pair.address || !deadline || !tokenIn || !tokenOut || !userIn)) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              parsedAmountA = parsedAmounts[Field.CURRENCY_A], parsedAmountB = parsedAmounts[Field.CURRENCY_B];\n\n              if (!(!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline)) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 12:\n              if (pair) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 14:\n              if ((_currencies$independe5 = currencies[independentField]) !== null && _currencies$independe5 !== void 0 && _currencies$independe5.isNative) {\n                estimate = zapContract.estimateGas.zapInEth;\n                method = zapContract.zapInEth;\n                args = [tokenOut.address, pair.address, account, minLPQty.toString(), deadline.toHexString()];\n                value = userIn;\n              } else {\n                estimate = zapContract.estimateGas.zapIn;\n                method = zapContract.zapIn;\n                args = [tokenIn.address, tokenOut.address, userIn.toString(), pair.address, account, minLPQty.toString(), deadline.toHexString()];\n                value = null;\n              } // All methods of new zap static fee contract include factory address as first arg\n\n\n              if (isStaticFeePair && !isOldStaticFeeContract) {\n                args.unshift(NETWORKS_INFO[chainId].classic.static.factory);\n              }\n\n              setAttemptingTxn(true);\n              _context.next = 19;\n              return estimate.apply(void 0, _toConsumableArray(args).concat([value ? {\n                value: value\n              } : {}])).then(function (estimatedGasLimit) {\n                return method.apply(void 0, _toConsumableArray(args).concat([_objectSpread(_objectSpread({}, value ? {\n                  value: value\n                } : {}), {}, {\n                  gasLimit: calculateGasMargin(estimatedGasLimit)\n                })])).then(function (tx) {\n                  var cA = currencies[Field.CURRENCY_A];\n                  var cB = currencies[Field.CURRENCY_B];\n\n                  if (!!cA && !!cB) {\n                    setAttemptingTxn(false);\n                    addTransactionWithType(tx, {\n                      type: 'Add liquidity',\n                      summary: (userInCurrencyAmount === null || userInCurrencyAmount === void 0 ? void 0 : userInCurrencyAmount.toSignificant(6)) + ' ' + (independentToken === null || independentToken === void 0 ? void 0 : independentToken.symbol),\n                      arbitrary: {\n                        poolAddress: pairAddress,\n                        token_1: cA.symbol,\n                        token_2: cB.symbol,\n                        add_liquidity_method: 'single token',\n                        amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\n                        txHash: tx.hash\n                      }\n                    });\n                    setTxHash(tx.hash);\n                  }\n                });\n              }).catch(function (err) {\n                setAttemptingTxn(false);\n                var e = new Error('Classic: ZapIn liquidity Error', {\n                  cause: err\n                });\n                e.name = 'ZapError';\n                captureException(e, {\n                  extra: {\n                    args: args\n                  }\n                }); // we only care if the error is something _other_ than the user rejected the tx\n\n                if ((err === null || err === void 0 ? void 0 : err.code) !== 4001) {\n                  console.error(err);\n                }\n\n                if (err.message.includes('INSUFFICIENT_MINT_QTY')) {\n                  setZapInError(\n                  /*i18n*/\n                  i18n._(\"Insufficient liquidity available. Please reload page and try again!\"));\n                } else {\n                  setZapInError(err === null || err === void 0 ? void 0 : err.message);\n                }\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onZapIn.apply(this, arguments);\n  }\n\n  var pendingText = \"Supplying \".concat(userInCurrencyAmount === null || userInCurrencyAmount === void 0 ? void 0 : userInCurrencyAmount.toSignificant(6), \" \").concat(independentToken === null || independentToken === void 0 ? void 0 : independentToken.symbol);\n  var handleDismissConfirmation = useCallback(function () {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldInput('');\n    }\n\n    setZapInError('');\n    setTxHash('');\n  }, [onFieldInput, txHash]);\n  var realPercentToken0 = pair ? pair.reserve0.asFraction.divide(pair.virtualReserve0).multiply('100').divide(pair.reserve0.divide(pair.virtualReserve0).asFraction.add(pair.reserve1.divide(pair.virtualReserve1).asFraction)) : new Fraction(JSBI.BigInt(50));\n  var realPercentToken1 = new Fraction(JSBI.BigInt(100), JSBI.BigInt(1)).subtract(realPercentToken0);\n  var percentToken0 = realPercentToken0.toSignificant(4);\n  var percentToken1 = realPercentToken1.toSignificant(4);\n  var tokens = useMemo(function () {\n    return [currencies[independentField], currencies[dependentField]].map(function (currency) {\n      return currency === null || currency === void 0 ? void 0 : currency.wrapped;\n    });\n  }, [currencies, dependentField, independentField]);\n  var usdPrices = useTokensPrice(tokens);\n  var marketPrices = useTokensMarketPrice(tokens);\n  var poolPrice = independentField === Field.CURRENCY_A ? Number(price === null || price === void 0 ? void 0 : price.toSignificant(6)) : Number(price === null || price === void 0 ? void 0 : price.invert().toSignificant(6));\n  var marketPrice = marketPrices[1] && marketPrices[0] / marketPrices[1];\n  var showSanityPriceWarning = !!(poolPrice && marketPrice && Math.abs(poolPrice - marketPrice) / marketPrice > 0.05);\n  var handleSwitchCurrency = useCallback(function () {\n    onSwitchField();\n  }, [onSwitchField]);\n  var estimatedUsd = userInCurrencyAmount && usdPrices[0] ? parseFloat(userInCurrencyAmount.toSignificant(6)) * usdPrices[0] : 0;\n  var tokenAPoolAllocUsd = usdPrices[0] && parsedAmounts && parsedAmounts[independentField] && usdPrices[0] * parseFloat(parsedAmounts[independentField].toSignificant(6));\n  var tokenBPoolAllocUsd = usdPrices[1] && parsedAmounts && parsedAmounts[dependentField] && usdPrices[1] * parseFloat(parsedAmounts[dependentField].toSignificant(6));\n  var estimatedUsdForPair = independentField === Field.CURRENCY_A ? [tokenAPoolAllocUsd || 0, tokenBPoolAllocUsd || 0] : [tokenBPoolAllocUsd || 0, tokenAPoolAllocUsd || 0];\n  var priceImpact = price && userInCurrencyAmount && !!parsedAmounts[independentField] && !!parsedAmounts[dependentField] && !userInCurrencyAmount.lessThan(parsedAmounts[independentField]) ? computePriceImpact(independentField === Field.CURRENCY_A ? price : price.invert(), userInCurrencyAmount === null || userInCurrencyAmount === void 0 ? void 0 : userInCurrencyAmount.subtract(parsedAmounts[independentField]), parsedAmounts[dependentField]) : undefined;\n  var priceImpactWithoutFee = pair && priceImpact ? computePriceImpactWithoutFee([pair], priceImpact) : undefined; // warnings on slippage\n\n  var priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  var modalHeader = function modalHeader() {\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"5px\",\n      children: [/*#__PURE__*/_jsxDEV(RowFlat, {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          fontWeight: 500,\n          lineHeight: \"42px\",\n          marginRight: 10,\n          children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: 'DMM ' + (nativeA === null || nativeA === void 0 ? void 0 : nativeA.symbol) + '/' + (nativeB === null || nativeB === void 0 ? void 0 : nativeB.symbol) + ' LP Tokens'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TYPE.italic, {\n        fontSize: 12,\n        textAlign: \"left\",\n        padding: '8px 0 0 0 ',\n        children:\n        /*i18n*/\n        i18n._(\"Output is estimated. If the price changes by more than {0}% your transaction will revert.\", {\n          0: allowedSlippage / 100\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var modalBottom = function modalBottom() {\n    return /*#__PURE__*/_jsxDEV(ConfirmAddModalBottom, {\n      pair: pair,\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: false,\n      onAdd: onZapIn,\n      poolTokenPercentage: poolTokenPercentage,\n      amplification: ampConvertedInBps,\n      priceImpact: priceImpactWithoutFee,\n      estimatedUsd: estimatedUsdForPair\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n      isOpen: showConfirm,\n      onDismiss: handleDismissConfirmation,\n      attemptingTxn: attemptingTxn,\n      hash: txHash,\n      content: function content() {\n        return zapInError ? /*#__PURE__*/_jsxDEV(TransactionErrorContent, {\n          onDismiss: handleDismissConfirmation,\n          message: zapInError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, _this) : !linkToUnamplifiedPool ? /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title:\n          /*i18n*/\n          i18n._(\"You will receive\"),\n          onDismiss: handleDismissConfirmation,\n          topContent: modalHeader,\n          bottomContent: modalBottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title:\n          /*i18n*/\n          i18n._(\"Unamplified Pool existed\"),\n          onDismiss: handleDismissConfirmation,\n          topContent: function topContent() {\n            return null;\n          },\n          bottomContent: function bottomContent() {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Please use the link below if you want to add liquidity to Unamplified Pool\", /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                onClick: handleDismissConfirmation,\n                id: \"unamplified-pool-link\",\n                to: \"/add/\".concat(currencyIdA, \"/\").concat(currencyIdB, \"/\").concat(unAmplifiedPairAddress),\n                children: \"Go to unamplified pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, _this);\n      },\n      pendingText: pendingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(GridColumn, {\n        children: [/*#__PURE__*/_jsxDEV(FirstColumn, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[independentField],\n              onUserInput: onFieldInput,\n              onMax: function onMax() {\n                var _maxAmounts$independe, _maxAmounts$independe2;\n\n                onFieldInput((_maxAmounts$independe = (_maxAmounts$independe2 = maxAmounts[independentField]) === null || _maxAmounts$independe2 === void 0 ? void 0 : _maxAmounts$independe2.toExact()) !== null && _maxAmounts$independe !== void 0 ? _maxAmounts$independe : '');\n              },\n              onHalf: function onHalf() {\n                var _currencyBalances$ind, _currencyBalances$ind2, _currencyBalances$ind3;\n\n                onFieldInput((_currencyBalances$ind = (_currencyBalances$ind2 = currencyBalances[independentField]) === null || _currencyBalances$ind2 === void 0 ? void 0 : (_currencyBalances$ind3 = _currencyBalances$ind2.divide(2)) === null || _currencyBalances$ind3 === void 0 ? void 0 : _currencyBalances$ind3.toExact()) !== null && _currencyBalances$ind !== void 0 ? _currencyBalances$ind : '');\n              },\n              onSwitchCurrency: handleSwitchCurrency,\n              showMaxButton: true,\n              currency: currencies[independentField],\n              id: \"zap-in-input\",\n              disableCurrencySelect: false,\n              showCommonBases: true,\n              positionMax: \"top\",\n              isSwitchMode: true,\n              estimatedUsd: formattedNum(estimatedUsd.toString(), true) || undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"0.5rem\",\n              children: [/*#__PURE__*/_jsxDEV(USDPrice, {\n                children: usdPrices[0] ? \"1 \".concat(independentToken === null || independentToken === void 0 ? void 0 : independentToken.symbol, \" = \").concat(formattedNum(usdPrices[0].toString(), true)) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, _this), pairAddress && chainId && (selectedCurrencyIsETHER || selectedCurrencyIsWETH) && currencies[dependentField] && /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                replace: true,\n                to: independentField === Field.CURRENCY_A ? \"/add/\".concat(selectedCurrencyIsETHER ? currencyId(WETH[chainId], chainId) : currencyId(nativeOnChain(chainId), chainId), \"/\").concat(currencyId(currencies[dependentField], chainId), \"/\").concat(pairAddress) : \"/add/\".concat(currencyId(currencies[dependentField], chainId), \"/\").concat(selectedCurrencyIsETHER ? currencyId(WETH[chainId], chainId) : nativeOnChain(chainId).symbol, \"/\").concat(pairAddress),\n                children: selectedCurrencyIsETHER ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Use Wrapped Token\"\n                }, void 0, false, void 0, _this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Use Native Token\"\n                }, void 0, false, void 0, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Section, {\n            padding: \"0\",\n            marginTop: \"8px\",\n            borderRadius: '20px',\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              padding: \"0 0 1rem 0\",\n              children: /*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                fontWeight: 500,\n                fontSize: 16,\n                color: theme.text,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Your Pool Allocation\"\n                }, void 0, false, void 0, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(DetailBox, {\n              style: {\n                padding: '16px 0',\n                borderTop: \"1px dashed \".concat(theme.border),\n                borderBottom: \"1px dashed \".concat(theme.border)\n              },\n              children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n                justify: \"space-between\",\n                gap: \"4px\",\n                children: [/*#__PURE__*/_jsxDEV(TokenWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                    currency: currencies[independentField] || undefined,\n                    size: '16px'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.subText,\n                    children: independentToken === null || independentToken === void 0 ? void 0 : independentToken.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                  fontWeight: 400,\n                  fontSize: 14,\n                  children: [(_parsedAmounts$indepe = parsedAmounts[independentField]) === null || _parsedAmounts$indepe === void 0 ? void 0 : _parsedAmounts$indepe.toSignificant(6), \" (~\", formattedNum((tokenAPoolAllocUsd || 0).toString(), true), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n                justify: \"space-between\",\n                gap: \"4px\",\n                children: [/*#__PURE__*/_jsxDEV(TokenWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                    currency: currencies[dependentField] || undefined,\n                    size: '16px'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.subText,\n                    children: dependentToken === null || dependentToken === void 0 ? void 0 : dependentToken.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                  fontWeight: 400,\n                  fontSize: 14,\n                  children: [(_parsedAmounts$depend3 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend3 === void 0 ? void 0 : _parsedAmounts$depend3.toSignificant(6), \" (~\", formattedNum((tokenBPoolAllocUsd || 0).toString(), true), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(DetailBox, {\n              style: {\n                paddingTop: '16px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                fontWeight: 400,\n                fontSize: 14,\n                color: theme.subText,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Price Impact\"\n                }, void 0, false, void 0, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                fontWeight: 400,\n                fontSize: 14,\n                children: /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n                  priceImpact: priceImpactWithoutFee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, _this), currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(Section, {\n            padding: \"0\",\n            borderRadius: '20px',\n            style: {\n              marginTop: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(PoolPriceBar, {\n              currencies: currencies,\n              poolTokenPercentage: poolTokenPercentage,\n              noLiquidity: noLiquidity,\n              price: price,\n              pair: pair\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(SecondColumn, {\n          children: [currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(Section, {\n            borderRadius: '20px',\n            marginBottom: \"28px\",\n            children: /*#__PURE__*/_jsxDEV(ToggleComponent, {\n              title:\n              /*i18n*/\n              i18n._(\"Pool Information\"),\n              children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                padding: \"16px 0\",\n                style: {\n                  borderBottom: \"1px dashed \".concat(theme.border),\n                  gap: '1rem'\n                },\n                children: [!noLiquidity && /*#__PURE__*/_jsxDEV(CurrentPriceWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                    fontWeight: 500,\n                    fontSize: 12,\n                    color: theme.subText,\n                    children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Current Price\"\n                      }, void 0, false, void 0, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: /*#__PURE__*/_jsxDEV(CurrentPrice, {\n                      price: price\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(PoolRatioWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                    fontWeight: 500,\n                    fontSize: 12,\n                    color: theme.subText,\n                    children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Pool Ratio\"\n                      }, void 0, false, void 0, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: [percentToken0, \"% \", pair === null || pair === void 0 ? void 0 : pair.token0.symbol, \" - \", percentToken1, \"% \", pair === null || pair === void 0 ? void 0 : pair.token1.symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(AutoRow, {\n                padding: \"16px 0\",\n                style: {\n                  borderBottom: \"1px dashed \".concat(theme.border),\n                  gap: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n                  style: {\n                    flex: '1'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontWeight: 500,\n                      fontSize: 12,\n                      color: theme.subText,\n                      children: \"AMP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                      text: AMP_HINT\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: !!pair ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)\n                    }, void 0, false) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 21\n                }, _this), (!!pairAddress || +amp >= 1) && /*#__PURE__*/_jsxDEV(DynamicFeeRangeWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                    children: [/*#__PURE__*/_jsxDEV(Text, {\n                      fontWeight: 500,\n                      fontSize: 12,\n                      color: theme.subText,\n                      children: /*#__PURE__*/_jsxDEV(UppercaseText, {\n                        children: isStaticFeePair || !pair ? /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Fee\"\n                        }, void 0, false, void 0, _this) : /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Dynamic Fee Range\"\n                        }, void 0, false, void 0, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 635,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 634,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                      text: isStaticFeePair || !pair ?\n                      /*i18n*/\n                      i18n._(\"Liquidity providers will earn this trading fee for each trade that uses this pool\") :\n                      /*i18n*/\n                      i18n._(\"Fees are adjusted dynamically according to market conditions to maximise returns for liquidity providers\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: 400,\n                    fontSize: 14,\n                    color: theme.text,\n                    children: !!pair ? isStaticFeePair && pair !== null && pair !== void 0 && pair.fee ? +new Fraction(JSBI.BigInt(pair.fee)).divide(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))).toSignificant(6) * 100 + '%' : feeRangeCalc(!!(pair !== null && pair !== void 0 && pair.amp) ? +new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5) : +amp) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, _this), currencies[independentField] && currencies[dependentField] && (!!pairAddress || +amp >= 1) && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '16px 0 0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                  marginBottom: \"8px\",\n                  children: [/*#__PURE__*/_jsxDEV(UppercaseText, {\n                    children: /*#__PURE__*/_jsxDEV(ActiveText, {\n                      children: \"Active Price Range\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                    text:\n                    /*i18n*/\n                    i18n._(\"Tradable token pair price range for this pool based on AMP. If the price goes below or above this range, the pool may become inactive\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(PoolPriceRangeBar, {\n                  currencies: currencies,\n                  price: price,\n                  pair: pair,\n                  amplification: ampConvertedInBps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, _this), showSanityPriceWarning && /*#__PURE__*/_jsxDEV(Warning, {\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              color: theme.yellow2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"0.75rem\",\n              marginLeft: \"0.75rem\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"The price is deviating quite a lot from that market price, please be careful!\"\n              }, void 0, false, void 0, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, _this), insufficientLiquidity ? /*#__PURE__*/_jsxDEV(ZapError, {\n            message:\n            /*i18n*/\n            i18n._(\"Insufficient Liquidity in the Liquidity Pool to Swap\"),\n            warning: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, _this) : priceImpactSeverity > 3 ? /*#__PURE__*/_jsxDEV(ZapError, {\n            message:\n            /*i18n*/\n            i18n._(\"Price impact is too high\"),\n            warning: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, _this) : priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(ZapError, {\n            message:\n            /*i18n*/\n            i18n._(\"Price impact is high\"),\n            warning: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, _this) : null, !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n            onClick: toggleWalletModal,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Connect Wallet\"\n            }, void 0, false, void 0, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: 'md',\n            children: [(approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING) && isValid && (expertMode || priceImpactSeverity <= 3) && /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveCallback,\n                disabled: !isValid || approval === ApprovalState.PENDING || priceImpactSeverity > 3 && !expertMode,\n                width: '100%',\n                children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: [\"Approving \", independentToken === null || independentToken === void 0 ? void 0 : independentToken.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 27\n                }, _this) : 'Approve ' + (independentToken === null || independentToken === void 0 ? void 0 : independentToken.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: function onClick() {\n                expertMode ? onZapIn() : setShowConfirm(true);\n              },\n              disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !expertMode,\n              error: !!parsedAmounts[independentField] && !!parsedAmounts[dependentField] && !!pairAddress && (!isValid || priceImpactSeverity > 2),\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 20,\n                fontWeight: 500,\n                children: error !== null && error !== void 0 ? error : !pairAddress && +amp < 1 ?\n                /*i18n*/\n                i18n._(\"Enter amp (>=1)\") : priceImpactSeverity > 3 && !expertMode ?\n                /*i18n*/\n                i18n._(\"Supply\") : priceImpactSeverity > 2 ?\n                /*i18n*/\n                i18n._(\"Supply Anyway\") :\n                /*i18n*/\n                i18n._(\"Supply\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ZapIn, \"3cXkPJmUPaKtQdaD0taeUsSBOPo=\", false, function () {\n  return [useActiveWeb3React, useTheme, useCurrency, useCurrency, useWalletModalToggle, useIsExpertMode, useMintState, useDerivedZapInInfo, useCurrencyConvertedToNative, useCurrencyConvertedToNative, useZapInActionHandlers, useTransactionDeadline, useUserSlippageTolerance, useApproveCallback, useTransactionAdder, useTokensPrice, useTokensMarketPrice];\n});\n\n_c = ZapIn;\nexport default ZapIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZapIn\");","map":{"version":3,"names":["BigNumber","Fraction","WETH","computePriceImpact","captureException","parseUnits","JSBI","React","useCallback","useMemo","useState","AlertTriangle","Flex","Text","ButtonError","ButtonLight","ButtonPrimary","AutoColumn","ConfirmAddModalBottom","CurrencyInputPanel","CurrencyLogo","CurrentPrice","Loader","PoolPriceBar","PoolPriceRangeBar","ToggleComponent","QuestionHelper","Row","AutoRow","RowBetween","RowFlat","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","ZapError","FormattedPriceImpact","AMP_HINT","NETWORKS_INFO","nativeOnChain","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useTheme","useTokensMarketPrice","useTransactionDeadline","useTokensPrice","useWalletModalToggle","Field","useDerivedZapInInfo","useMintState","useZapInActionHandlers","tryParseAmount","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","StyledInternalLink","TYPE","UppercaseText","calculateGasMargin","formattedNum","getZapContract","currencyId","feeRangeCalc","useCurrencyConvertedToNative","isZero","maxAmountSpend","computePriceImpactWithoutFee","warningSeverity","PairState","Dots","Wrapper","ActiveText","CurrentPriceWrapper","DetailBox","DynamicFeeRangeWrapper","FirstColumn","GridColumn","PoolRatioWrapper","SecondColumn","Section","TokenWrapper","USDPrice","Warning","ZapIn","currencyIdA","currencyIdB","pairAddress","account","library","chainId","theme","currencyA","currencyB","toggleWalletModal","zapInError","setZapInError","expertMode","independentField","typedValue","otherTypedValue","undefined","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","insufficientLiquidity","error","unAmplifiedPairAddress","isStaticFeePair","isOldStaticFeeContract","nativeA","CURRENCY_A","nativeB","CURRENCY_B","independentToken","dependentToken","selectedCurrencyIsETHER","isNative","selectedCurrencyIsWETH","equals","amp","BigInt","ampConvertedInBps","toString","linkToUnamplifiedPool","equalTo","onFieldInput","onSwitchField","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","reduce","accumulator","field","amountToApprove","classic","oldStatic","zap","static","dynamic","approval","approveCallback","userInCurrencyAmount","wrapped","userIn","from","quotient","minLPQty","divide","multiply","addTransactionWithType","onZapIn","zapContract","tokenIn","tokenOut","address","parsedAmountA","parsedAmountB","estimate","estimateGas","zapInEth","method","args","toHexString","value","zapIn","unshift","factory","then","estimatedGasLimit","gasLimit","tx","cA","cB","type","summary","symbol","arbitrary","poolAddress","token_1","token_2","add_liquidity_method","hash","catch","err","e","Error","cause","name","extra","code","console","message","includes","pendingText","handleDismissConfirmation","realPercentToken0","reserve0","asFraction","virtualReserve0","add","reserve1","virtualReserve1","realPercentToken1","subtract","percentToken0","percentToken1","tokens","map","currency","usdPrices","marketPrices","poolPrice","Number","invert","marketPrice","showSanityPriceWarning","Math","abs","handleSwitchCurrency","estimatedUsd","parseFloat","tokenAPoolAllocUsd","tokenBPoolAllocUsd","estimatedUsdForPair","priceImpact","lessThan","priceImpactWithoutFee","priceImpactSeverity","modalHeader","marginTop","modalBottom","toExact","text","padding","borderTop","border","borderBottom","subText","paddingTop","INVALID","gap","token0","token1","flex","fee","exponentiate","yellow2","NOT_APPROVED","PENDING","APPROVED"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/AddLiquidity/ZapIn.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Fraction, TokenAmount, WETH, computePriceImpact } from '@kyberswap/ks-sdk-core'\nimport { Trans, t } from '@lingui/macro'\nimport { captureException } from '@sentry/react'\nimport { parseUnits } from 'ethers/lib/utils'\nimport JSBI from 'jsbi'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { Flex, Text } from 'rebass'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport { ConfirmAddModalBottom } from 'components/ConfirmAddModalBottom'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport CurrentPrice from 'components/CurrentPrice'\nimport Loader from 'components/Loader'\nimport { PoolPriceBar, PoolPriceRangeBar, ToggleComponent } from 'components/PoolPriceBar'\nimport QuestionHelper from 'components/QuestionHelper'\nimport Row, { AutoRow, RowBetween, RowFlat } from 'components/Row'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport ZapError from 'components/ZapError'\nimport FormattedPriceImpact from 'components/swap/FormattedPriceImpact'\nimport { AMP_HINT } from 'constants/index'\nimport { NETWORKS_INFO } from 'constants/networks'\nimport { nativeOnChain } from 'constants/tokens'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport useTheme from 'hooks/useTheme'\nimport useTokensMarketPrice from 'hooks/useTokensMarketPrice'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport { useTokensPrice, useWalletModalToggle } from 'state/application/hooks'\nimport { Field } from 'state/mint/actions'\nimport { useDerivedZapInInfo, useMintState, useZapInActionHandlers } from 'state/mint/hooks'\nimport { tryParseAmount } from 'state/swap/hooks'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from 'state/user/hooks'\nimport { StyledInternalLink, TYPE, UppercaseText } from 'theme'\nimport { calculateGasMargin, formattedNum, getZapContract } from 'utils'\nimport { currencyId } from 'utils/currencyId'\nimport { feeRangeCalc, useCurrencyConvertedToNative } from 'utils/dmm'\nimport isZero from 'utils/isZero'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computePriceImpactWithoutFee, warningSeverity } from 'utils/prices'\n\nimport { PairState } from '../../data/Reserves'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport {\n  ActiveText,\n  CurrentPriceWrapper,\n  DetailBox,\n  DynamicFeeRangeWrapper,\n  FirstColumn,\n  GridColumn,\n  PoolRatioWrapper,\n  SecondColumn,\n  Section,\n  TokenWrapper,\n  USDPrice,\n  Warning,\n} from './styled'\n\nconst ZapIn = ({\n  currencyIdA,\n  currencyIdB,\n  pairAddress,\n}: {\n  currencyIdA: string\n  currencyIdB: string\n  pairAddress: string\n}) => {\n  const { account, library, chainId } = useActiveWeb3React()\n  const theme = useTheme()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n  const [zapInError, setZapInError] = useState<string>('')\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    insufficientLiquidity,\n    error,\n    unAmplifiedPairAddress,\n    isStaticFeePair,\n    isOldStaticFeeContract,\n  } = useDerivedZapInInfo(currencyA ?? undefined, currencyB ?? undefined, pairAddress)\n\n  const nativeA = useCurrencyConvertedToNative(currencies[Field.CURRENCY_A])\n  const nativeB = useCurrencyConvertedToNative(currencies[Field.CURRENCY_B])\n\n  const independentToken = nativeA && nativeB ? (independentField === Field.CURRENCY_A ? nativeA : nativeB) : undefined\n  const dependentToken = nativeA && nativeB ? (independentField === Field.CURRENCY_A ? nativeB : nativeA) : undefined\n\n  const selectedCurrencyIsETHER = !!(chainId && currencies[independentField] && currencies[independentField]?.isNative)\n\n  const selectedCurrencyIsWETH = !!(\n    chainId &&\n    currencies[independentField] &&\n    currencies[independentField]?.equals(WETH[chainId])\n  )\n\n  const amp = pair?.amp || JSBI.BigInt(0)\n\n  const ampConvertedInBps = !!amp.toString()\n    ? new Fraction(JSBI.BigInt(parseUnits(amp.toString() || '1', 20)), JSBI.BigInt(parseUnits('1', 16)))\n    : undefined\n\n  const linkToUnamplifiedPool =\n    !!ampConvertedInBps &&\n    ampConvertedInBps.equalTo(JSBI.BigInt(10000)) &&\n    !!unAmplifiedPairAddress &&\n    !isZero(unAmplifiedPairAddress)\n  const { onFieldInput, onSwitchField } = useZapInActionHandlers()\n\n  const isValid = !error && !insufficientLiquidity\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const amountToApprove = tryParseAmount(typedValue, currencies[independentField])\n\n  const [approval, approveCallback] = useApproveCallback(\n    amountToApprove,\n    !!chainId\n      ? isStaticFeePair\n        ? isOldStaticFeeContract\n          ? NETWORKS_INFO[chainId].classic.oldStatic?.zap\n          : NETWORKS_INFO[chainId].classic.static.zap\n        : NETWORKS_INFO[chainId].classic.dynamic?.zap\n      : undefined,\n  )\n\n  const userInCurrencyAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    return tryParseAmount(typedValue, currencies[independentField]?.wrapped, true)\n  }, [currencies, independentField, typedValue])\n\n  const userIn = useMemo(() => {\n    return userInCurrencyAmount ? BigNumber.from(userInCurrencyAmount.quotient.toString()) : undefined\n  }, [userInCurrencyAmount])\n\n  const minLPQty = !liquidityMinted\n    ? JSBI.BigInt(0)\n    : JSBI.divide(JSBI.multiply(liquidityMinted?.quotient, JSBI.BigInt(10000 - allowedSlippage)), JSBI.BigInt(10000))\n\n  const addTransactionWithType = useTransactionAdder()\n  async function onZapIn() {\n    if (!chainId || !library || !account) return\n    const zapContract = getZapContract(chainId, library, account, isStaticFeePair, isOldStaticFeeContract)\n\n    if (!chainId || !account) {\n      return\n    }\n\n    const tokenIn = currencies[independentField]?.wrapped\n    const tokenOut = currencies[dependentField]?.wrapped\n\n    if (!pair || !pair.address || !deadline || !tokenIn || !tokenOut || !userIn) {\n      return\n    }\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n\n    if (!pair) return\n\n    if (currencies[independentField]?.isNative) {\n      estimate = zapContract.estimateGas.zapInEth\n      method = zapContract.zapInEth\n      args = [tokenOut.address, pair.address, account, minLPQty.toString(), deadline.toHexString()]\n      value = userIn\n    } else {\n      estimate = zapContract.estimateGas.zapIn\n      method = zapContract.zapIn\n      args = [\n        tokenIn.address,\n        tokenOut.address,\n        userIn.toString(),\n        pair.address,\n        account,\n        minLPQty.toString(),\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n    // All methods of new zap static fee contract include factory address as first arg\n    if (isStaticFeePair && !isOldStaticFeeContract) {\n      args.unshift(NETWORKS_INFO[chainId].classic.static.factory)\n    }\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then(estimatedGasLimit =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then(tx => {\n          const cA = currencies[Field.CURRENCY_A]\n          const cB = currencies[Field.CURRENCY_B]\n          if (!!cA && !!cB) {\n            setAttemptingTxn(false)\n            addTransactionWithType(tx, {\n              type: 'Add liquidity',\n              summary: userInCurrencyAmount?.toSignificant(6) + ' ' + independentToken?.symbol,\n              arbitrary: {\n                poolAddress: pairAddress,\n                token_1: cA.symbol,\n                token_2: cB.symbol,\n                add_liquidity_method: 'single token',\n                amp: new Fraction(amp).divide(JSBI.BigInt(10000)).toSignificant(5),\n                txHash: tx.hash,\n              },\n            })\n            setTxHash(tx.hash)\n          }\n        }),\n      )\n      .catch(err => {\n        setAttemptingTxn(false)\n        const e = new Error('Classic: ZapIn liquidity Error', { cause: err })\n        e.name = 'ZapError'\n        captureException(e, { extra: { args } })\n\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n\n        if (err.message.includes('INSUFFICIENT_MINT_QTY')) {\n          setZapInError(t`Insufficient liquidity available. Please reload page and try again!`)\n        } else {\n          setZapInError(err?.message)\n        }\n      })\n  }\n\n  const pendingText = `Supplying ${userInCurrencyAmount?.toSignificant(6)} ${independentToken?.symbol}`\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldInput('')\n    }\n    setZapInError('')\n    setTxHash('')\n  }, [onFieldInput, txHash])\n\n  const realPercentToken0 = pair\n    ? pair.reserve0.asFraction\n        .divide(pair.virtualReserve0)\n        .multiply('100')\n        .divide(\n          pair.reserve0\n            .divide(pair.virtualReserve0)\n            .asFraction.add(pair.reserve1.divide(pair.virtualReserve1).asFraction),\n        )\n    : new Fraction(JSBI.BigInt(50))\n\n  const realPercentToken1 = new Fraction(JSBI.BigInt(100), JSBI.BigInt(1)).subtract(realPercentToken0 as Fraction)\n\n  const percentToken0 = realPercentToken0.toSignificant(4)\n  const percentToken1 = realPercentToken1.toSignificant(4)\n\n  const tokens = useMemo(\n    () => [currencies[independentField], currencies[dependentField]].map(currency => currency?.wrapped),\n    [currencies, dependentField, independentField],\n  )\n\n  const usdPrices = useTokensPrice(tokens)\n  const marketPrices = useTokensMarketPrice(tokens)\n\n  const poolPrice =\n    independentField === Field.CURRENCY_A ? Number(price?.toSignificant(6)) : Number(price?.invert().toSignificant(6))\n  const marketPrice = marketPrices[1] && marketPrices[0] / marketPrices[1]\n\n  const showSanityPriceWarning = !!(poolPrice && marketPrice && Math.abs(poolPrice - marketPrice) / marketPrice > 0.05)\n\n  const handleSwitchCurrency = useCallback(() => {\n    onSwitchField()\n  }, [onSwitchField])\n\n  const estimatedUsd =\n    userInCurrencyAmount && usdPrices[0] ? parseFloat(userInCurrencyAmount.toSignificant(6)) * usdPrices[0] : 0\n\n  const tokenAPoolAllocUsd =\n    usdPrices[0] &&\n    parsedAmounts &&\n    parsedAmounts[independentField] &&\n    usdPrices[0] * parseFloat((parsedAmounts[independentField] as CurrencyAmount<Currency>).toSignificant(6))\n\n  const tokenBPoolAllocUsd =\n    usdPrices[1] &&\n    parsedAmounts &&\n    parsedAmounts[dependentField] &&\n    usdPrices[1] * parseFloat((parsedAmounts[dependentField] as CurrencyAmount<Currency>).toSignificant(6))\n\n  const estimatedUsdForPair: [number, number] =\n    independentField === Field.CURRENCY_A\n      ? [tokenAPoolAllocUsd || 0, tokenBPoolAllocUsd || 0]\n      : [tokenBPoolAllocUsd || 0, tokenAPoolAllocUsd || 0]\n\n  const priceImpact =\n    price &&\n    userInCurrencyAmount &&\n    !!parsedAmounts[independentField] &&\n    !!parsedAmounts[dependentField] &&\n    !userInCurrencyAmount.lessThan(parsedAmounts[independentField] as CurrencyAmount<Currency>)\n      ? computePriceImpact(\n          independentField === Field.CURRENCY_A ? price : price.invert(),\n          userInCurrencyAmount?.subtract(parsedAmounts[independentField] as CurrencyAmount<Currency>),\n          parsedAmounts[dependentField] as CurrencyAmount<Currency>,\n        )\n      : undefined\n\n  const priceImpactWithoutFee = pair && priceImpact ? computePriceImpactWithoutFee([pair], priceImpact) : undefined\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const modalHeader = () => {\n    return (\n      <AutoColumn gap=\"5px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"24px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">{'DMM ' + nativeA?.symbol + '/' + nativeB?.symbol + ' LP Tokens'}</Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          {t`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        pair={pair}\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={false}\n        onAdd={onZapIn}\n        poolTokenPercentage={poolTokenPercentage}\n        amplification={ampConvertedInBps}\n        priceImpact={priceImpactWithoutFee}\n        estimatedUsd={estimatedUsdForPair}\n      />\n    )\n  }\n\n  return (\n    <Wrapper>\n      <TransactionConfirmationModal\n        isOpen={showConfirm}\n        onDismiss={handleDismissConfirmation}\n        attemptingTxn={attemptingTxn}\n        hash={txHash}\n        content={() =>\n          zapInError ? (\n            <TransactionErrorContent onDismiss={handleDismissConfirmation} message={zapInError} />\n          ) : !linkToUnamplifiedPool ? (\n            <ConfirmationModalContent\n              title={t`You will receive`}\n              onDismiss={handleDismissConfirmation}\n              topContent={modalHeader}\n              bottomContent={modalBottom}\n            />\n          ) : (\n            <ConfirmationModalContent\n              title={t`Unamplified Pool existed`}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => {\n                return null\n              }}\n              bottomContent={() => {\n                return (\n                  <>\n                    Please use the link below if you want to add liquidity to Unamplified Pool\n                    <StyledInternalLink\n                      onClick={handleDismissConfirmation}\n                      id=\"unamplified-pool-link\"\n                      to={`/add/${currencyIdA}/${currencyIdB}/${unAmplifiedPairAddress}`}\n                    >\n                      Go to unamplified pool\n                    </StyledInternalLink>\n                  </>\n                )\n              }}\n            />\n          )\n        }\n        pendingText={pendingText}\n      />\n\n      <AutoColumn gap=\"20px\">\n        <GridColumn>\n          <FirstColumn>\n            <div>\n              <CurrencyInputPanel\n                value={formattedAmounts[independentField]}\n                onUserInput={onFieldInput}\n                onMax={() => {\n                  onFieldInput(maxAmounts[independentField]?.toExact() ?? '')\n                }}\n                onHalf={() => {\n                  onFieldInput(currencyBalances[independentField]?.divide(2)?.toExact() ?? '')\n                }}\n                onSwitchCurrency={handleSwitchCurrency}\n                showMaxButton={true}\n                currency={currencies[independentField]}\n                id=\"zap-in-input\"\n                disableCurrencySelect={false}\n                showCommonBases\n                positionMax=\"top\"\n                isSwitchMode\n                estimatedUsd={formattedNum(estimatedUsd.toString(), true) || undefined}\n              />\n              <Flex justifyContent=\"space-between\" alignItems=\"center\" marginTop=\"0.5rem\">\n                <USDPrice>\n                  {usdPrices[0] ? (\n                    `1 ${independentToken?.symbol} = ${formattedNum(usdPrices[0].toString(), true)}`\n                  ) : (\n                    <Loader />\n                  )}\n                </USDPrice>\n\n                {pairAddress &&\n                  chainId &&\n                  (selectedCurrencyIsETHER || selectedCurrencyIsWETH) &&\n                  currencies[dependentField] && (\n                    <StyledInternalLink\n                      replace\n                      to={\n                        independentField === Field.CURRENCY_A\n                          ? `/add/${\n                              selectedCurrencyIsETHER\n                                ? currencyId(WETH[chainId], chainId)\n                                : currencyId(nativeOnChain(chainId), chainId)\n                            }/${currencyId(currencies[dependentField] as Currency, chainId)}/${pairAddress}`\n                          : `/add/${currencyId(currencies[dependentField] as Currency, chainId)}/${\n                              selectedCurrencyIsETHER\n                                ? currencyId(WETH[chainId], chainId)\n                                : nativeOnChain(chainId).symbol\n                            }/${pairAddress}`\n                      }\n                    >\n                      {selectedCurrencyIsETHER ? <Trans>Use Wrapped Token</Trans> : <Trans>Use Native Token</Trans>}\n                    </StyledInternalLink>\n                  )}\n              </Flex>\n            </div>\n\n            <Section padding=\"0\" marginTop=\"8px\" borderRadius={'20px'}>\n              <Row padding=\"0 0 1rem 0\">\n                <TYPE.subHeader fontWeight={500} fontSize={16} color={theme.text}>\n                  <Trans>Your Pool Allocation</Trans>\n                </TYPE.subHeader>\n              </Row>\n\n              <DetailBox\n                style={{\n                  padding: '16px 0',\n                  borderTop: `1px dashed ${theme.border}`,\n                  borderBottom: `1px dashed ${theme.border}`,\n                }}\n              >\n                <AutoColumn justify=\"space-between\" gap=\"4px\">\n                  <TokenWrapper>\n                    <CurrencyLogo currency={currencies[independentField] || undefined} size={'16px'} />\n                    <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\n                      {independentToken?.symbol}\n                    </TYPE.subHeader>\n                  </TokenWrapper>\n                  <TYPE.black fontWeight={400} fontSize={14}>\n                    {parsedAmounts[independentField]?.toSignificant(6)} (~\n                    {formattedNum((tokenAPoolAllocUsd || 0).toString(), true)})\n                  </TYPE.black>\n                </AutoColumn>\n\n                <AutoColumn justify=\"space-between\" gap=\"4px\">\n                  <TokenWrapper>\n                    <CurrencyLogo currency={currencies[dependentField] || undefined} size={'16px'} />\n                    <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\n                      {dependentToken?.symbol}\n                    </TYPE.subHeader>\n                  </TokenWrapper>\n                  <TYPE.black fontWeight={400} fontSize={14}>\n                    {parsedAmounts[dependentField]?.toSignificant(6)} (~\n                    {formattedNum((tokenBPoolAllocUsd || 0).toString(), true)})\n                  </TYPE.black>\n                </AutoColumn>\n              </DetailBox>\n\n              <DetailBox style={{ paddingTop: '16px' }}>\n                <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\n                  <Trans>Price Impact</Trans>\n                </TYPE.subHeader>\n                <TYPE.black fontWeight={400} fontSize={14}>\n                  <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n                </TYPE.black>\n              </DetailBox>\n\n              {/* <AutoRow justify=\"space-between\" gap=\"4px\" style={{ paddingBottom: '12px' }}>\n                <TYPE.subHeader fontWeight={400} fontSize={14} color={theme.subText}>\n                  <Trans>Est. received</Trans>:\n                </TYPE.subHeader>\n                <TYPE.black fontWeight={400} fontSize={14}>\n                  {liquidityMinted?.toSignificant(6)} LP (~\n                  {tokenAPoolAllocUsd &&\n                    tokenBPoolAllocUsd &&\n                    formattedNum((tokenAPoolAllocUsd + tokenBPoolAllocUsd).toString(), true)}\n                  )\n                </TYPE.black>\n              </AutoRow> */}\n            </Section>\n\n            {currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && (\n              <Section padding=\"0\" borderRadius={'20px'} style={{ marginTop: '8px' }}>\n                <PoolPriceBar\n                  currencies={currencies}\n                  poolTokenPercentage={poolTokenPercentage}\n                  noLiquidity={noLiquidity}\n                  price={price}\n                  pair={pair}\n                />\n              </Section>\n            )}\n          </FirstColumn>\n\n          <SecondColumn>\n            {currencies[independentField] && currencies[dependentField] && pairState !== PairState.INVALID && (\n              <Section borderRadius={'20px'} marginBottom=\"28px\">\n                <ToggleComponent title={t`Pool Information`}>\n                  <AutoRow padding=\"16px 0\" style={{ borderBottom: `1px dashed ${theme.border}`, gap: '1rem' }}>\n                    {!noLiquidity && (\n                      <CurrentPriceWrapper>\n                        <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\n                          <UppercaseText>\n                            <Trans>Current Price</Trans>\n                          </UppercaseText>\n                        </TYPE.subHeader>\n                        <TYPE.black fontWeight={400} fontSize={14} color={theme.text}>\n                          <CurrentPrice price={price} />\n                        </TYPE.black>\n                      </CurrentPriceWrapper>\n                    )}\n\n                    <PoolRatioWrapper>\n                      <TYPE.subHeader fontWeight={500} fontSize={12} color={theme.subText}>\n                        <UppercaseText>\n                          <Trans>Pool Ratio</Trans>\n                        </UppercaseText>\n                      </TYPE.subHeader>\n                      <TYPE.black fontWeight={400} fontSize={14} color={theme.text}>\n                        {percentToken0}% {pair?.token0.symbol} - {percentToken1}% {pair?.token1.symbol}\n                      </TYPE.black>\n                    </PoolRatioWrapper>\n                  </AutoRow>\n\n                  <AutoRow padding=\"16px 0\" style={{ borderBottom: `1px dashed ${theme.border}`, gap: '1rem' }}>\n                    <AutoColumn style={{ flex: '1' }}>\n                      <AutoRow>\n                        <Text fontWeight={500} fontSize={12} color={theme.subText}>\n                          AMP\n                        </Text>\n                        <QuestionHelper text={AMP_HINT} />\n                      </AutoRow>\n                      <Text fontWeight={400} fontSize={14} color={theme.text}>\n                        {!!pair ? (\n                          <>{new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)}</>\n                        ) : (\n                          ''\n                        )}\n                      </Text>\n                    </AutoColumn>\n\n                    {(!!pairAddress || +amp >= 1) && (\n                      <DynamicFeeRangeWrapper>\n                        <AutoRow>\n                          <Text fontWeight={500} fontSize={12} color={theme.subText}>\n                            <UppercaseText>\n                              {isStaticFeePair || !pair ? <Trans>Fee</Trans> : <Trans>Dynamic Fee Range</Trans>}\n                            </UppercaseText>\n                          </Text>\n                          <QuestionHelper\n                            text={\n                              isStaticFeePair || !pair\n                                ? t`Liquidity providers will earn this trading fee for each trade that uses this pool`\n                                : t`Fees are adjusted dynamically according to market conditions to maximise returns for liquidity providers`\n                            }\n                          />\n                        </AutoRow>\n                        <Text fontWeight={400} fontSize={14} color={theme.text}>\n                          {!!pair\n                            ? isStaticFeePair && pair?.fee\n                              ? +new Fraction(JSBI.BigInt(pair.fee))\n                                  .divide(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18)))\n                                  .toSignificant(6) *\n                                  100 +\n                                '%'\n                              : feeRangeCalc(\n                                  !!pair?.amp\n                                    ? +new Fraction(JSBI.BigInt(pair.amp)).divide(JSBI.BigInt(10000)).toSignificant(5)\n                                    : +amp,\n                                )\n                            : ''}\n                        </Text>\n                      </DynamicFeeRangeWrapper>\n                    )}\n                  </AutoRow>\n\n                  {currencies[independentField] && currencies[dependentField] && (!!pairAddress || +amp >= 1) && (\n                    <div style={{ padding: '16px 0 0' }}>\n                      <AutoRow marginBottom=\"8px\">\n                        <UppercaseText>\n                          <ActiveText>Active Price Range</ActiveText>\n                        </UppercaseText>\n                        <QuestionHelper\n                          text={t`Tradable token pair price range for this pool based on AMP. If the price goes below or above this range, the pool may become inactive`}\n                        />\n                      </AutoRow>\n\n                      <PoolPriceRangeBar\n                        currencies={currencies}\n                        price={price}\n                        pair={pair}\n                        amplification={ampConvertedInBps}\n                      />\n                    </div>\n                  )}\n                </ToggleComponent>\n              </Section>\n            )}\n\n            {showSanityPriceWarning && (\n              <Warning>\n                <AlertTriangle color={theme.yellow2} />\n                <Text fontSize=\"0.75rem\" marginLeft=\"0.75rem\">\n                  <Trans>The price is deviating quite a lot from that market price, please be careful!</Trans>\n                </Text>\n              </Warning>\n            )}\n\n            {insufficientLiquidity ? (\n              <ZapError message={t`Insufficient Liquidity in the Liquidity Pool to Swap`} warning={false} />\n            ) : priceImpactSeverity > 3 ? (\n              <ZapError message={t`Price impact is too high`} warning={false} />\n            ) : priceImpactSeverity > 2 ? (\n              <ZapError message={t`Price impact is high`} warning={true} />\n            ) : null}\n\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                <Trans>Connect Wallet</Trans>\n              </ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING) &&\n                  isValid &&\n                  (expertMode || priceImpactSeverity <= 3) && (\n                    <RowBetween>\n                      <ButtonPrimary\n                        onClick={approveCallback}\n                        disabled={\n                          !isValid || approval === ApprovalState.PENDING || (priceImpactSeverity > 3 && !expertMode)\n                        }\n                        width={'100%'}\n                      >\n                        {approval === ApprovalState.PENDING ? (\n                          <Dots>Approving {independentToken?.symbol}</Dots>\n                        ) : (\n                          'Approve ' + independentToken?.symbol\n                        )}\n                      </ButtonPrimary>\n                    </RowBetween>\n                  )}\n\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onZapIn() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !expertMode)}\n                  error={\n                    !!parsedAmounts[independentField] &&\n                    !!parsedAmounts[dependentField] &&\n                    !!pairAddress &&\n                    (!isValid || priceImpactSeverity > 2)\n                  }\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ??\n                      (!pairAddress && +amp < 1\n                        ? t`Enter amp (>=1)`\n                        : priceImpactSeverity > 3 && !expertMode\n                        ? t`Supply`\n                        : priceImpactSeverity > 2\n                        ? t`Supply Anyway`\n                        : t`Supply`)}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </SecondColumn>\n        </GridColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ZapIn\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}