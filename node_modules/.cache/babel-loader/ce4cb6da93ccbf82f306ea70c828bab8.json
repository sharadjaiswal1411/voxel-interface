{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useMemo, useRef } from 'react';\nimport useSWRImmutable from 'swr/immutable';\nimport { COINGECKO_API_URL } from 'constants/index';\nimport { NETWORKS_INFO, TRUESIGHT_NETWORK_TO_CHAINID } from 'constants/networks';\nimport { TrueSightTimeframe } from 'pages/TrueSight/index';\nvar initialCoinGeckoChartData = {\n  prices: [],\n  market_caps: [],\n  total_volumes: []\n};\n\nfunction formatCoinGeckoChartData(data) {\n  return {\n    prices: data.prices.map(function (item) {\n      var _item$, _item$1$toString;\n\n      return {\n        time: (_item$ = item[0]) !== null && _item$ !== void 0 ? _item$ : 0,\n        value: (_item$1$toString = item[1].toString()) !== null && _item$1$toString !== void 0 ? _item$1$toString : 0\n      };\n    }),\n    marketCaps: data.market_caps.map(function (item) {\n      var _item$2, _item$1$toString2;\n\n      return {\n        time: (_item$2 = item[0]) !== null && _item$2 !== void 0 ? _item$2 : 0,\n        value: (_item$1$toString2 = item[1].toString()) !== null && _item$1$toString2 !== void 0 ? _item$1$toString2 : 0\n      };\n    }),\n    totalVolumes: data.total_volumes.map(function (item) {\n      var _item$3, _item$1$toString3;\n\n      return {\n        time: (_item$3 = item[0]) !== null && _item$3 !== void 0 ? _item$3 : 0,\n        value: (_item$1$toString3 = item[1].toString()) !== null && _item$1$toString3 !== void 0 ? _item$1$toString3 : 0\n      };\n    })\n  };\n}\n\nvar FETCHING_COINGECKO_CHART_DATA_OFFSET = 2000;\nvar FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL = FETCHING_COINGECKO_CHART_DATA_OFFSET / 2;\nexport default function useGetCoinGeckoChartData(tokenNetwork, tokenAddress, timeframe) {\n  _s();\n\n  var latestRequestingTime = useRef(0);\n  var controller = useRef(new AbortController());\n\n  var _useSWRImmutable = useSWRImmutable(['useGetCoinGeckoChartData', timeframe, tokenAddress !== null && tokenAddress !== void 0 ? tokenAddress : '', tokenNetwork !== null && tokenNetwork !== void 0 ? tokenNetwork : ''], /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var to, from, chainId, coinGeckoNetworkId, url, response, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(tokenNetwork && tokenAddress)) {\n              _context.next = 26;\n              break;\n            }\n\n            _context.prev = 1;\n            controller.current.abort();\n            controller.current = new AbortController();\n            to = Math.floor(Date.now() / 1000);\n            from = to - (timeframe === TrueSightTimeframe.ONE_DAY ? 24 * 3600 : 24 * 3600 * 7);\n            chainId = TRUESIGHT_NETWORK_TO_CHAINID[tokenNetwork];\n            coinGeckoNetworkId = NETWORKS_INFO[chainId].coingeckoNetworkId;\n            url = \"\".concat(COINGECKO_API_URL, \"/coins/\").concat(coinGeckoNetworkId, \"/contract/\").concat(tokenAddress.toLowerCase(), \"/market_chart/range?vs_currency=usd&from=\").concat(from, \"&to=\").concat(to);\n\n            if (tokenAddress === 'bnb') {\n              url = \"\".concat(COINGECKO_API_URL, \"/coins/binancecoin/market_chart/range?vs_currency=usd&from=\").concat(from, \"&to=\").concat(to);\n            } else if (tokenNetwork === 'bsc' && tokenAddress === '0x1Fa4a73a3F0133f0025378af00236f3aBDEE5D63') {\n              // NEAR\n              url = \"\".concat(COINGECKO_API_URL, \"/coins/near/market_chart/range?vs_currency=usd&from=\").concat(from, \"&to=\").concat(to);\n            } else if (tokenNetwork === 'eth' && tokenAddress === '0x7c8161545717a334f3196e765d9713f8042EF338') {\n              // CAKE\n              url = \"\".concat(COINGECKO_API_URL, \"/coins/binance-smart-chain/contract/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82/market_chart/range?vs_currency=usd&from=\").concat(from, \"&to=\").concat(to);\n            }\n\n            if (!(Date.now() - latestRequestingTime.current < FETCHING_COINGECKO_CHART_DATA_OFFSET)) {\n              _context.next = 12;\n              break;\n            }\n\n            throw new Error('429');\n\n          case 12:\n            latestRequestingTime.current = Date.now();\n            _context.next = 15;\n            return fetch(url, {\n              signal: controller.current.signal\n            });\n\n          case 15:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 19;\n            return response.json();\n\n          case 19:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 21:\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t0 = _context[\"catch\"](1);\n            throw new Error('429');\n\n          case 26:\n            return _context.abrupt(\"return\", initialCoinGeckoChartData);\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 23]]);\n  })), {\n    errorRetryInterval: FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL,\n    errorRetryCount: 60 / FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL // CoinGecko might block upto 1 minute\n\n  }),\n      data = _useSWRImmutable.data,\n      isLoading = _useSWRImmutable.isValidating,\n      error = _useSWRImmutable.error;\n\n  return useMemo(function () {\n    var formattedData = formatCoinGeckoChartData(data !== null && data !== void 0 ? data : initialCoinGeckoChartData); // If the error is Too Many Request, show loading and then retry in intervals until success\n\n    return {\n      isLoading: (error === null || error === void 0 ? void 0 : error.message) === '429' ? true : isLoading,\n      data: formattedData\n    };\n  }, [data, isLoading, error]);\n}\n\n_s(useGetCoinGeckoChartData, \"ItsZKFzm0dndMZTx80ltw12WkYY=\", false, function () {\n  return [useSWRImmutable];\n});","map":{"version":3,"names":["useMemo","useRef","useSWRImmutable","COINGECKO_API_URL","NETWORKS_INFO","TRUESIGHT_NETWORK_TO_CHAINID","TrueSightTimeframe","initialCoinGeckoChartData","prices","market_caps","total_volumes","formatCoinGeckoChartData","data","map","item","time","value","toString","marketCaps","totalVolumes","FETCHING_COINGECKO_CHART_DATA_OFFSET","FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL","useGetCoinGeckoChartData","tokenNetwork","tokenAddress","timeframe","latestRequestingTime","controller","AbortController","current","abort","to","Math","floor","Date","now","from","ONE_DAY","chainId","coinGeckoNetworkId","coingeckoNetworkId","url","toLowerCase","Error","fetch","signal","response","ok","json","result","errorRetryInterval","errorRetryCount","isLoading","isValidating","error","formattedData","message"],"sources":["/Applications/XAMPP/voxel-interface/src/pages/TrueSight/hooks/useGetCoinGeckoChartData.ts"],"sourcesContent":["import { useMemo, useRef } from 'react'\nimport useSWRImmutable from 'swr/immutable'\n\nimport { COINGECKO_API_URL } from 'constants/index'\nimport { NETWORKS_INFO, TRUESIGHT_NETWORK_TO_CHAINID } from 'constants/networks'\nimport { TrueSightTimeframe } from 'pages/TrueSight/index'\n\nexport interface CoinGeckoChartData {\n  prices: [number, number][]\n  market_caps: [number, number][]\n  total_volumes: [number, number][]\n}\n\nexport interface FormattedCoinGeckoChartData {\n  prices: { time: number; value: string }[]\n  marketCaps: { time: number; value: string }[]\n  totalVolumes: { time: number; value: string }[]\n}\n\nconst initialCoinGeckoChartData = { prices: [], market_caps: [], total_volumes: [] }\n\nfunction formatCoinGeckoChartData(data: CoinGeckoChartData): FormattedCoinGeckoChartData {\n  return {\n    prices: data.prices.map(item => ({ time: item[0] ?? 0, value: item[1].toString() ?? 0 })),\n    marketCaps: data.market_caps.map(item => ({ time: item[0] ?? 0, value: item[1].toString() ?? 0 })),\n    totalVolumes: data.total_volumes.map(item => ({ time: item[0] ?? 0, value: item[1].toString() ?? 0 })),\n  }\n}\n\nconst FETCHING_COINGECKO_CHART_DATA_OFFSET = 2000\nconst FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL = FETCHING_COINGECKO_CHART_DATA_OFFSET / 2\n\nexport default function useGetCoinGeckoChartData(\n  tokenNetwork: string | undefined,\n  tokenAddress: string | undefined,\n  timeframe: TrueSightTimeframe,\n) {\n  const latestRequestingTime = useRef(0)\n  const controller = useRef(new AbortController())\n\n  const {\n    data,\n    isValidating: isLoading,\n    error,\n  } = useSWRImmutable<CoinGeckoChartData>(\n    ['useGetCoinGeckoChartData', timeframe, tokenAddress ?? '', tokenNetwork ?? ''],\n    async () => {\n      if (tokenNetwork && tokenAddress) {\n        try {\n          controller.current.abort()\n          controller.current = new AbortController()\n          const to = Math.floor(Date.now() / 1000)\n          const from = to - (timeframe === TrueSightTimeframe.ONE_DAY ? 24 * 3600 : 24 * 3600 * 7)\n          const chainId = TRUESIGHT_NETWORK_TO_CHAINID[tokenNetwork]\n          const coinGeckoNetworkId = NETWORKS_INFO[chainId].coingeckoNetworkId\n          let url = `${COINGECKO_API_URL}/coins/${coinGeckoNetworkId}/contract/${tokenAddress.toLowerCase()}/market_chart/range?vs_currency=usd&from=${from}&to=${to}`\n          if (tokenAddress === 'bnb') {\n            url = `${COINGECKO_API_URL}/coins/binancecoin/market_chart/range?vs_currency=usd&from=${from}&to=${to}`\n          } else if (tokenNetwork === 'bsc' && tokenAddress === '0x1Fa4a73a3F0133f0025378af00236f3aBDEE5D63') {\n            // NEAR\n            url = `${COINGECKO_API_URL}/coins/near/market_chart/range?vs_currency=usd&from=${from}&to=${to}`\n          } else if (tokenNetwork === 'eth' && tokenAddress === '0x7c8161545717a334f3196e765d9713f8042EF338') {\n            // CAKE\n            url = `${COINGECKO_API_URL}/coins/binance-smart-chain/contract/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82/market_chart/range?vs_currency=usd&from=${from}&to=${to}`\n          }\n          if (Date.now() - latestRequestingTime.current < FETCHING_COINGECKO_CHART_DATA_OFFSET) {\n            // Too Many Request\n            throw new Error('429')\n          }\n          latestRequestingTime.current = Date.now()\n          const response = await fetch(url, { signal: controller.current.signal })\n          if (response.ok) {\n            const result = await response.json()\n            return result\n          }\n        } catch (err) {\n          // Too Many Request\n          throw new Error('429')\n        }\n      }\n      return initialCoinGeckoChartData\n    },\n    {\n      errorRetryInterval: FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL,\n      errorRetryCount: 60 / FETCHING_COINGECKO_CHART_DATA_ERROR_RETRY_INTERVAL, // CoinGecko might block upto 1 minute\n    },\n  )\n\n  return useMemo(() => {\n    const formattedData = formatCoinGeckoChartData(data ?? initialCoinGeckoChartData)\n\n    // If the error is Too Many Request, show loading and then retry in intervals until success\n    return { isLoading: error?.message === '429' ? true : isLoading, data: formattedData }\n  }, [data, isLoading, error])\n}\n"],"mappings":";;;;;AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,eAA5B;AAEA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,aAAT,EAAwBC,4BAAxB,QAA4D,oBAA5D;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AAcA,IAAMC,yBAAyB,GAAG;EAAEC,MAAM,EAAE,EAAV;EAAcC,WAAW,EAAE,EAA3B;EAA+BC,aAAa,EAAE;AAA9C,CAAlC;;AAEA,SAASC,wBAAT,CAAkCC,IAAlC,EAAyF;EACvF,OAAO;IACLJ,MAAM,EAAEI,IAAI,CAACJ,MAAL,CAAYK,GAAZ,CAAgB,UAAAC,IAAI;MAAA;;MAAA,OAAK;QAAEC,IAAI,YAAED,IAAI,CAAC,CAAD,CAAN,2CAAa,CAAnB;QAAsBE,KAAK,sBAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,EAAF,+DAAwB;MAAnD,CAAL;IAAA,CAApB,CADH;IAELC,UAAU,EAAEN,IAAI,CAACH,WAAL,CAAiBI,GAAjB,CAAqB,UAAAC,IAAI;MAAA;;MAAA,OAAK;QAAEC,IAAI,aAAED,IAAI,CAAC,CAAD,CAAN,6CAAa,CAAnB;QAAsBE,KAAK,uBAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,EAAF,iEAAwB;MAAnD,CAAL;IAAA,CAAzB,CAFP;IAGLE,YAAY,EAAEP,IAAI,CAACF,aAAL,CAAmBG,GAAnB,CAAuB,UAAAC,IAAI;MAAA;;MAAA,OAAK;QAAEC,IAAI,aAAED,IAAI,CAAC,CAAD,CAAN,6CAAa,CAAnB;QAAsBE,KAAK,uBAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,EAAF,iEAAwB;MAAnD,CAAL;IAAA,CAA3B;EAHT,CAAP;AAKD;;AAED,IAAMG,oCAAoC,GAAG,IAA7C;AACA,IAAMC,kDAAkD,GAAGD,oCAAoC,GAAG,CAAlG;AAEA,eAAe,SAASE,wBAAT,CACbC,YADa,EAEbC,YAFa,EAGbC,SAHa,EAIb;EAAA;;EACA,IAAMC,oBAAoB,GAAGzB,MAAM,CAAC,CAAD,CAAnC;EACA,IAAM0B,UAAU,GAAG1B,MAAM,CAAC,IAAI2B,eAAJ,EAAD,CAAzB;;EAEA,uBAII1B,eAAe,CACjB,CAAC,0BAAD,EAA6BuB,SAA7B,EAAwCD,YAAxC,aAAwCA,YAAxC,cAAwCA,YAAxC,GAAwD,EAAxD,EAA4DD,YAA5D,aAA4DA,YAA5D,cAA4DA,YAA5D,GAA4E,EAA5E,CADiB,0EAEjB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MACMA,YAAY,IAAIC,YADtB;cAAA;cAAA;YAAA;;YAAA;YAGMG,UAAU,CAACE,OAAX,CAAmBC,KAAnB;YACAH,UAAU,CAACE,OAAX,GAAqB,IAAID,eAAJ,EAArB;YACMG,EALZ,GAKiBC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CALjB;YAMYC,IANZ,GAMmBL,EAAE,IAAIN,SAAS,KAAKnB,kBAAkB,CAAC+B,OAAjC,GAA2C,KAAK,IAAhD,GAAuD,KAAK,IAAL,GAAY,CAAvE,CANrB;YAOYC,OAPZ,GAOsBjC,4BAA4B,CAACkB,YAAD,CAPlD;YAQYgB,kBARZ,GAQiCnC,aAAa,CAACkC,OAAD,CAAb,CAAuBE,kBARxD;YASUC,GATV,aASmBtC,iBATnB,oBAS8CoC,kBAT9C,uBAS6Ef,YAAY,CAACkB,WAAb,EAT7E,sDASmJN,IATnJ,iBAS8JL,EAT9J;;YAUM,IAAIP,YAAY,KAAK,KAArB,EAA4B;cAC1BiB,GAAG,aAAMtC,iBAAN,wEAAqFiC,IAArF,iBAAgGL,EAAhG,CAAH;YACD,CAFD,MAEO,IAAIR,YAAY,KAAK,KAAjB,IAA0BC,YAAY,KAAK,4CAA/C,EAA6F;cAClG;cACAiB,GAAG,aAAMtC,iBAAN,iEAA8EiC,IAA9E,iBAAyFL,EAAzF,CAAH;YACD,CAHM,MAGA,IAAIR,YAAY,KAAK,KAAjB,IAA0BC,YAAY,KAAK,4CAA/C,EAA6F;cAClG;cACAiB,GAAG,aAAMtC,iBAAN,oIAAiJiC,IAAjJ,iBAA4JL,EAA5J,CAAH;YACD;;YAlBP,MAmBUG,IAAI,CAACC,GAAL,KAAaT,oBAAoB,CAACG,OAAlC,GAA4CT,oCAnBtD;cAAA;cAAA;YAAA;;YAAA,MAqBc,IAAIuB,KAAJ,CAAU,KAAV,CArBd;;UAAA;YAuBMjB,oBAAoB,CAACG,OAArB,GAA+BK,IAAI,CAACC,GAAL,EAA/B;YAvBN;YAAA,OAwB6BS,KAAK,CAACH,GAAD,EAAM;cAAEI,MAAM,EAAElB,UAAU,CAACE,OAAX,CAAmBgB;YAA7B,CAAN,CAxBlC;;UAAA;YAwBYC,QAxBZ;;YAAA,KAyBUA,QAAQ,CAACC,EAzBnB;cAAA;cAAA;YAAA;;YAAA;YAAA,OA0B6BD,QAAQ,CAACE,IAAT,EA1B7B;;UAAA;YA0BcC,MA1Bd;YAAA,iCA2BeA,MA3Bf;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAAA,MA+BY,IAAIN,KAAJ,CAAU,KAAV,CA/BZ;;UAAA;YAAA,iCAkCSpC,yBAlCT;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAFiB,IAsCjB;IACE2C,kBAAkB,EAAE7B,kDADtB;IAEE8B,eAAe,EAAE,KAAK9B,kDAFxB,CAE4E;;EAF5E,CAtCiB,CAJnB;EAAA,IACET,IADF,oBACEA,IADF;EAAA,IAEgBwC,SAFhB,oBAEEC,YAFF;EAAA,IAGEC,KAHF,oBAGEA,KAHF;;EAgDA,OAAOtD,OAAO,CAAC,YAAM;IACnB,IAAMuD,aAAa,GAAG5C,wBAAwB,CAACC,IAAD,aAACA,IAAD,cAACA,IAAD,GAASL,yBAAT,CAA9C,CADmB,CAGnB;;IACA,OAAO;MAAE6C,SAAS,EAAE,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,OAAP,MAAmB,KAAnB,GAA2B,IAA3B,GAAkCJ,SAA/C;MAA0DxC,IAAI,EAAE2C;IAAhE,CAAP;EACD,CALa,EAKX,CAAC3C,IAAD,EAAOwC,SAAP,EAAkBE,KAAlB,CALW,CAAd;AAMD;;GA9DuBhC,wB;UAYlBpB,e"},"metadata":{},"sourceType":"module"}