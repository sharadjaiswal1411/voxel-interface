{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar constants_1 = require(\"../../utils/constants\");\n\nvar calldata_block_1 = require(\"../calldata_block\");\n\nvar PointerCalldataBlock =\n/** @class */\nfunction (_super) {\n  __extends(PointerCalldataBlock, _super);\n\n  function PointerCalldataBlock(name, signature, parentName, dependency, parent) {\n    var _this = this;\n\n    var headerSizeInBytes = PointerCalldataBlock._EMPTY_HEADER_SIZE;\n    var bodySizeInBytes = PointerCalldataBlock._DEPENDENT_PAYLOAD_SIZE_IN_BYTES;\n    _this = _super.call(this, name, signature, parentName, headerSizeInBytes, bodySizeInBytes) || this;\n    _this._parent = parent;\n    _this._dependency = dependency;\n    _this._aliasFor = undefined;\n    return _this;\n  }\n\n  PointerCalldataBlock.prototype.toBuffer = function () {\n    var destinationOffset = this._aliasFor !== undefined ? this._aliasFor.getOffsetInBytes() : this._dependency.getOffsetInBytes();\n\n    var parentOffset = this._parent.getOffsetInBytes();\n\n    var parentHeaderSize = this._parent.getHeaderSizeInBytes();\n\n    var pointer = destinationOffset - (parentOffset + parentHeaderSize);\n    var pointerHex = \"0x\" + pointer.toString(constants_1.constants.HEX_BASE);\n    var pointerBuf = ethUtil.toBuffer(pointerHex);\n    var pointerBufPadded = ethUtil.setLengthLeft(pointerBuf, constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n    return pointerBufPadded;\n  };\n\n  PointerCalldataBlock.prototype.getDependency = function () {\n    return this._dependency;\n  };\n\n  PointerCalldataBlock.prototype.setAlias = function (block) {\n    this._aliasFor = block;\n\n    this._setName(this.getName() + \" (alias for \" + block.getName() + \")\");\n  };\n\n  PointerCalldataBlock.prototype.getAlias = function () {\n    return this._aliasFor;\n  };\n\n  PointerCalldataBlock.prototype.getRawData = function () {\n    var dependencyRawData = this._dependency.getRawData();\n\n    var rawDataComponents = [];\n    rawDataComponents.push(PointerCalldataBlock.RAW_DATA_START);\n    rawDataComponents.push(dependencyRawData);\n    rawDataComponents.push(PointerCalldataBlock.RAW_DATA_END);\n    var rawData = Buffer.concat(rawDataComponents);\n    return rawData;\n  };\n\n  PointerCalldataBlock.RAW_DATA_START = new Buffer('<');\n  PointerCalldataBlock.RAW_DATA_END = new Buffer('>');\n  PointerCalldataBlock._DEPENDENT_PAYLOAD_SIZE_IN_BYTES = 32;\n  PointerCalldataBlock._EMPTY_HEADER_SIZE = 0;\n  return PointerCalldataBlock;\n}(calldata_block_1.CalldataBlock);\n\nexports.PointerCalldataBlock = PointerCalldataBlock;","map":null,"metadata":{},"sourceType":"script"}