{"ast":null,"code":"import _slicedToArray from \"/Applications/XAMPP/voxel-interface/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales';\nimport { useUserLocale, useUserLocaleManager } from 'state/user/hooks';\nimport useParsedQueryString from './useParsedQueryString';\n/**\n * Given a locale string (e.g. from user agent), return the best match for corresponding SupportedLocale\n * @param maybeSupportedLocale the fuzzy locale identifier\n */\n\nfunction parseLocale(maybeSupportedLocale) {\n  var lowerMaybeSupportedLocale = maybeSupportedLocale.toLowerCase();\n  return SUPPORTED_LOCALES.find(function (locale) {\n    return locale.toLowerCase() === lowerMaybeSupportedLocale || locale.split('-')[0] === lowerMaybeSupportedLocale;\n  });\n}\n/**\n * Returns the supported locale read from the user agent (navigator)\n */\n\n\nexport function navigatorLocale() {\n  if (!navigator.language) return undefined;\n\n  var _navigator$language$s = navigator.language.split('-'),\n      _navigator$language$s2 = _slicedToArray(_navigator$language$s, 2),\n      language = _navigator$language$s2[0],\n      region = _navigator$language$s2[1];\n\n  if (region) {\n    var _parseLocale;\n\n    return (_parseLocale = parseLocale(\"\".concat(language, \"-\").concat(region.toUpperCase()))) !== null && _parseLocale !== void 0 ? _parseLocale : parseLocale(language);\n  }\n\n  return parseLocale(language);\n}\nexport function useSetLocaleFromUrl() {\n  _s();\n\n  var parsed = useParsedQueryString();\n\n  var _useUserLocaleManager = useUserLocaleManager(),\n      _useUserLocaleManager2 = _slicedToArray(_useUserLocaleManager, 2),\n      userLocale = _useUserLocaleManager2[0],\n      setUserLocale = _useUserLocaleManager2[1];\n\n  useEffect(function () {\n    var urlLocale = typeof parsed.lng === 'string' ? parseLocale(parsed.lng) : undefined;\n\n    if (urlLocale && urlLocale !== userLocale) {\n      setUserLocale(urlLocale);\n    }\n  }, [parsed.lng, setUserLocale, userLocale]);\n}\n/**\n * Returns the currently active locale, from a combination of user agent, query string, and user settings stored in redux\n */\n\n_s(useSetLocaleFromUrl, \"SigdN9aWUnyQiIkTl5CFLEi0fdY=\", false, function () {\n  return [useParsedQueryString, useUserLocaleManager];\n});\n\nexport function useActiveLocale() {\n  _s2();\n\n  var userLocale = useUserLocale();\n  return useMemo(function () {\n    return userLocale !== null && userLocale !== void 0 ? userLocale : DEFAULT_LOCALE;\n  }, [userLocale]);\n}\n\n_s2(useActiveLocale, \"EAZX4WtUIJ3YnF00k9S6dxD3baE=\", false, function () {\n  return [useUserLocale];\n});","map":{"version":3,"names":["useEffect","useMemo","DEFAULT_LOCALE","SUPPORTED_LOCALES","useUserLocale","useUserLocaleManager","useParsedQueryString","parseLocale","maybeSupportedLocale","lowerMaybeSupportedLocale","toLowerCase","find","locale","split","navigatorLocale","navigator","language","undefined","region","toUpperCase","useSetLocaleFromUrl","parsed","userLocale","setUserLocale","urlLocale","lng","useActiveLocale"],"sources":["/Applications/XAMPP/voxel-interface/src/hooks/useActiveLocale.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react'\n\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES, SupportedLocale } from 'constants/locales'\nimport { useUserLocale, useUserLocaleManager } from 'state/user/hooks'\n\nimport useParsedQueryString from './useParsedQueryString'\n\n/**\n * Given a locale string (e.g. from user agent), return the best match for corresponding SupportedLocale\n * @param maybeSupportedLocale the fuzzy locale identifier\n */\nfunction parseLocale(maybeSupportedLocale: string): SupportedLocale | undefined {\n  const lowerMaybeSupportedLocale = maybeSupportedLocale.toLowerCase()\n  return SUPPORTED_LOCALES.find(\n    locale => locale.toLowerCase() === lowerMaybeSupportedLocale || locale.split('-')[0] === lowerMaybeSupportedLocale,\n  )\n}\n\n/**\n * Returns the supported locale read from the user agent (navigator)\n */\nexport function navigatorLocale(): SupportedLocale | undefined {\n  if (!navigator.language) return undefined\n\n  const [language, region] = navigator.language.split('-')\n\n  if (region) {\n    return parseLocale(`${language}-${region.toUpperCase()}`) ?? parseLocale(language)\n  }\n\n  return parseLocale(language)\n}\n\nexport function useSetLocaleFromUrl() {\n  const parsed = useParsedQueryString()\n  const [userLocale, setUserLocale] = useUserLocaleManager()\n\n  useEffect(() => {\n    const urlLocale = typeof parsed.lng === 'string' ? parseLocale(parsed.lng) : undefined\n    if (urlLocale && urlLocale !== userLocale) {\n      setUserLocale(urlLocale)\n    }\n  }, [parsed.lng, setUserLocale, userLocale])\n}\n\n/**\n * Returns the currently active locale, from a combination of user agent, query string, and user settings stored in redux\n */\nexport function useActiveLocale(): SupportedLocale {\n  const userLocale = useUserLocale()\n\n  return useMemo(() => {\n    return userLocale ?? DEFAULT_LOCALE\n  }, [userLocale])\n}\n"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AAEA,SAASC,cAAT,EAAyBC,iBAAzB,QAAmE,mBAAnE;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,kBAApD;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,oBAArB,EAAgF;EAC9E,IAAMC,yBAAyB,GAAGD,oBAAoB,CAACE,WAArB,EAAlC;EACA,OAAOP,iBAAiB,CAACQ,IAAlB,CACL,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACF,WAAP,OAAyBD,yBAAzB,IAAsDG,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,MAAyBJ,yBAAnF;EAAA,CADD,CAAP;AAGD;AAED;AACA;AACA;;;AACA,OAAO,SAASK,eAAT,GAAwD;EAC7D,IAAI,CAACC,SAAS,CAACC,QAAf,EAAyB,OAAOC,SAAP;;EAEzB,4BAA2BF,SAAS,CAACC,QAAV,CAAmBH,KAAnB,CAAyB,GAAzB,CAA3B;EAAA;EAAA,IAAOG,QAAP;EAAA,IAAiBE,MAAjB;;EAEA,IAAIA,MAAJ,EAAY;IAAA;;IACV,uBAAOX,WAAW,WAAIS,QAAJ,cAAgBE,MAAM,CAACC,WAAP,EAAhB,EAAlB,uDAA6DZ,WAAW,CAACS,QAAD,CAAxE;EACD;;EAED,OAAOT,WAAW,CAACS,QAAD,CAAlB;AACD;AAED,OAAO,SAASI,mBAAT,GAA+B;EAAA;;EACpC,IAAMC,MAAM,GAAGf,oBAAoB,EAAnC;;EACA,4BAAoCD,oBAAoB,EAAxD;EAAA;EAAA,IAAOiB,UAAP;EAAA,IAAmBC,aAAnB;;EAEAvB,SAAS,CAAC,YAAM;IACd,IAAMwB,SAAS,GAAG,OAAOH,MAAM,CAACI,GAAd,KAAsB,QAAtB,GAAiClB,WAAW,CAACc,MAAM,CAACI,GAAR,CAA5C,GAA2DR,SAA7E;;IACA,IAAIO,SAAS,IAAIA,SAAS,KAAKF,UAA/B,EAA2C;MACzCC,aAAa,CAACC,SAAD,CAAb;IACD;EACF,CALQ,EAKN,CAACH,MAAM,CAACI,GAAR,EAAaF,aAAb,EAA4BD,UAA5B,CALM,CAAT;AAMD;AAED;AACA;AACA;;GAdgBF,mB;UACCd,oB,EACqBD,oB;;;AAatC,OAAO,SAASqB,eAAT,GAA4C;EAAA;;EACjD,IAAMJ,UAAU,GAAGlB,aAAa,EAAhC;EAEA,OAAOH,OAAO,CAAC,YAAM;IACnB,OAAOqB,UAAP,aAAOA,UAAP,cAAOA,UAAP,GAAqBpB,cAArB;EACD,CAFa,EAEX,CAACoB,UAAD,CAFW,CAAd;AAGD;;IANeI,e;UACKtB,a"},"metadata":{},"sourceType":"module"}