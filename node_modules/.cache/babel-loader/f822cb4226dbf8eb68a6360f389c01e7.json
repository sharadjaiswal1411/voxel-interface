{"ast":null,"code":"import { ChainId } from '@kyberswap/ks-sdk-core';\nimport { createReducer, nanoid } from '@reduxjs/toolkit';\nimport { addPopup, removePopup, setOpenModal, updateBlockNumber, updateChainIdWhenNotConnected, updateETHPrice, updateKNCPrice, updatePrommETHPrice } from './actions';\nvar initialState = {\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n  ethPrice: {},\n  prommEthPrice: {},\n  kncPrice: '',\n  chainIdWhenNotConnected: ChainId.MAINNET\n};\nexport default createReducer(initialState, function (builder) {\n  return builder.addCase(updateBlockNumber, function (state, action) {\n    var _action$payload = action.payload,\n        chainId = _action$payload.chainId,\n        blockNumber = _action$payload.blockNumber;\n\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber;\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n    }\n  }).addCase(setOpenModal, function (state, action) {\n    state.openModal = action.payload;\n  }).addCase(addPopup, function (state, _ref) {\n    var _ref$payload = _ref.payload,\n        content = _ref$payload.content,\n        key = _ref$payload.key,\n        _ref$payload$removeAf = _ref$payload.removeAfterMs,\n        removeAfterMs = _ref$payload$removeAf === void 0 ? 15000 : _ref$payload$removeAf,\n        popupType = _ref$payload.popupType;\n    state.popupList = (key ? state.popupList.filter(function (popup) {\n      return popup.key !== key;\n    }) : state.popupList).concat([{\n      key: key || nanoid(),\n      show: true,\n      content: content,\n      removeAfterMs: removeAfterMs,\n      popupType: popupType\n    }]);\n  }).addCase(removePopup, function (state, _ref2) {\n    var key = _ref2.payload.key;\n    state.popupList.forEach(function (p) {\n      if (p.key === key) {\n        p.show = false;\n      }\n    });\n  }).addCase(updatePrommETHPrice, function (state, _ref3) {\n    var _ref3$payload = _ref3.payload,\n        currentPrice = _ref3$payload.currentPrice,\n        oneDayBackPrice = _ref3$payload.oneDayBackPrice,\n        pricePercentChange = _ref3$payload.pricePercentChange;\n    state.prommEthPrice.currentPrice = currentPrice;\n    state.prommEthPrice.oneDayBackPrice = oneDayBackPrice;\n    state.prommEthPrice.pricePercentChange = pricePercentChange;\n  }).addCase(updateETHPrice, function (state, _ref4) {\n    var _ref4$payload = _ref4.payload,\n        currentPrice = _ref4$payload.currentPrice,\n        oneDayBackPrice = _ref4$payload.oneDayBackPrice,\n        pricePercentChange = _ref4$payload.pricePercentChange;\n    state.ethPrice.currentPrice = currentPrice;\n    state.ethPrice.oneDayBackPrice = oneDayBackPrice;\n    state.ethPrice.pricePercentChange = pricePercentChange;\n  }).addCase(updateKNCPrice, function (state, _ref5) {\n    var kncPrice = _ref5.payload;\n    state.kncPrice = kncPrice;\n  }).addCase(updateChainIdWhenNotConnected, function (state, _ref6) {\n    var chainId = _ref6.payload;\n    state.chainIdWhenNotConnected = chainId;\n  });\n});","map":{"version":3,"names":["ChainId","createReducer","nanoid","addPopup","removePopup","setOpenModal","updateBlockNumber","updateChainIdWhenNotConnected","updateETHPrice","updateKNCPrice","updatePrommETHPrice","initialState","blockNumber","popupList","openModal","ethPrice","prommEthPrice","kncPrice","chainIdWhenNotConnected","MAINNET","builder","addCase","state","action","payload","chainId","Math","max","content","key","removeAfterMs","popupType","filter","popup","concat","show","forEach","p","currentPrice","oneDayBackPrice","pricePercentChange"],"sources":["/Applications/XAMPP/voxel-interface/src/state/application/reducer.ts"],"sourcesContent":["import { ChainId } from '@kyberswap/ks-sdk-core'\nimport { createReducer, nanoid } from '@reduxjs/toolkit'\n\nimport {\n  ApplicationModal,\n  PopupContent,\n  PopupType,\n  addPopup,\n  removePopup,\n  setOpenModal,\n  updateBlockNumber,\n  updateChainIdWhenNotConnected,\n  updateETHPrice,\n  updateKNCPrice,\n  updatePrommETHPrice,\n} from './actions'\n\ntype PopupList = Array<{\n  key: string\n  show: boolean\n  content: PopupContent\n  removeAfterMs: number | null\n  popupType: PopupType\n}>\n\ntype ETHPrice = {\n  currentPrice?: string\n  oneDayBackPrice?: string\n  pricePercentChange?: number\n}\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n  readonly popupList: PopupList\n  readonly openModal: ApplicationModal | null\n  readonly ethPrice: ETHPrice\n  readonly prommEthPrice: ETHPrice\n  readonly kncPrice?: string\n  readonly chainIdWhenNotConnected: ChainId\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  openModal: null,\n  ethPrice: {},\n  prommEthPrice: {},\n  kncPrice: '',\n  chainIdWhenNotConnected: ChainId.MAINNET,\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(setOpenModal, (state, action) => {\n      state.openModal = action.payload\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000, popupType } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n          popupType,\n        },\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n    .addCase(updatePrommETHPrice, (state, { payload: { currentPrice, oneDayBackPrice, pricePercentChange } }) => {\n      state.prommEthPrice.currentPrice = currentPrice\n      state.prommEthPrice.oneDayBackPrice = oneDayBackPrice\n      state.prommEthPrice.pricePercentChange = pricePercentChange\n    })\n\n    .addCase(updateETHPrice, (state, { payload: { currentPrice, oneDayBackPrice, pricePercentChange } }) => {\n      state.ethPrice.currentPrice = currentPrice\n      state.ethPrice.oneDayBackPrice = oneDayBackPrice\n      state.ethPrice.pricePercentChange = pricePercentChange\n    })\n    .addCase(updateKNCPrice, (state, { payload: kncPrice }) => {\n      state.kncPrice = kncPrice\n    })\n    .addCase(updateChainIdWhenNotConnected, (state, { payload: chainId }) => {\n      state.chainIdWhenNotConnected = chainId\n    }),\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}