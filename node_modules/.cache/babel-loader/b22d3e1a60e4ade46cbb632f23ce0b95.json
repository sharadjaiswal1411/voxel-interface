{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar assert_1 = require(\"@0x/assert\");\n\nvar types_1 = require(\"@0x/types\");\n\nvar utils_1 = require(\"@0x/utils\");\n\nvar JsonRpcError = require(\"json-rpc-error\");\n\nvar subprovider_1 = require(\"./subprovider\");\n/**\n * This class implements the [web3-provider-engine](https://github.com/MetaMask/provider-engine) subprovider interface.\n * It forwards on JSON RPC requests to the supplied `rpcUrl` endpoint\n */\n\n\nvar RPCSubprovider =\n/** @class */\nfunction (_super) {\n  __extends(RPCSubprovider, _super);\n  /**\n   * @param rpcUrl URL to the backing Ethereum node to which JSON RPC requests should be sent\n   * @param requestTimeoutMs Amount of miliseconds to wait before timing out the JSON RPC request\n   */\n\n\n  function RPCSubprovider(rpcUrl, requestTimeoutMs) {\n    if (requestTimeoutMs === void 0) {\n      requestTimeoutMs = 20000;\n    }\n\n    var _this = _super.call(this) || this;\n\n    assert_1.assert.isString('rpcUrl', rpcUrl);\n    assert_1.assert.isNumber('requestTimeoutMs', requestTimeoutMs);\n    _this._rpcUrl = rpcUrl;\n    _this._requestTimeoutMs = requestTimeoutMs;\n    return _this;\n  }\n  /**\n   * This method conforms to the web3-provider-engine interface.\n   * It is called internally by the ProviderEngine when it is this subproviders\n   * turn to handle a JSON RPC request.\n   * @param payload JSON RPC payload\n   * @param _next Callback to call if this subprovider decides not to handle the request\n   * @param end Callback to call if subprovider handled the request and wants to pass back the request.\n   */\n  // tslint:disable-next-line:prefer-function-over-method async-suffix\n\n\n  RPCSubprovider.prototype.handleRequest = function (payload, _next, end) {\n    return __awaiter(this, void 0, void 0, function () {\n      var finalPayload, headers, response, err_1, text, statusCode, errMsg, err, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            finalPayload = subprovider_1.Subprovider._createFinalPayload(payload);\n            headers = new Headers({\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            });\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , utils_1.fetchAsync(this._rpcUrl, {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(finalPayload)\n            }, this._requestTimeoutMs)];\n\n          case 2:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_1 = _a.sent();\n            end(new JsonRpcError.InternalError(err_1));\n            return [2\n            /*return*/\n            ];\n\n          case 4:\n            return [4\n            /*yield*/\n            , response.text()];\n\n          case 5:\n            text = _a.sent();\n\n            if (!response.ok) {\n              statusCode = response.status;\n\n              switch (statusCode) {\n                case types_1.StatusCodes.MethodNotAllowed:\n                  end(new JsonRpcError.MethodNotFound());\n                  return [2\n                  /*return*/\n                  ];\n\n                case types_1.StatusCodes.GatewayTimeout:\n                  errMsg = 'Gateway timeout. The request took too long to process. This can happen when querying logs over too wide a block range.';\n                  err = new Error(errMsg);\n                  end(new JsonRpcError.InternalError(err));\n                  return [2\n                  /*return*/\n                  ];\n\n                default:\n                  end(new JsonRpcError.InternalError(text));\n                  return [2\n                  /*return*/\n                  ];\n              }\n            }\n\n            try {\n              data = JSON.parse(text);\n            } catch (err) {\n              end(new JsonRpcError.InternalError(err));\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (data.error) {\n              end(data.error);\n              return [2\n              /*return*/\n              ];\n            }\n\n            end(null, data.result);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return RPCSubprovider;\n}(subprovider_1.Subprovider);\n\nexports.RPCSubprovider = RPCSubprovider;","map":null,"metadata":{},"sourceType":"script"}